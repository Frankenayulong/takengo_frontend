var env={};window&&Object.assign(env,window.__env);var app=angular.module("takeNGo",["slim"]).constant("ENV",env).config(function(e){e.defaults.withCredentials=!0});app.controller("mainController",["$scope","$timeout","$http","$rootScope","ENV",function(e,o,n,t,i){t.metadata={signed_in:!1,email_verified:!1,signing:!0,tng_uid:"",email:"",loading:{sign_up:!1,sign_in:!1}},e.digest=function(e){var t=function(){if(n.pendingRequests.length>0)o(t);else if(e)return e()};return o(t)},e.modalFunc={closeAuth:()=>{$("#signup-form").modal("hide"),$("#login-form").modal("hide"),$("#forget-password-form").modal("hide")}},e.authenticate={},e.authenticate.check=(()=>{e.authenticate.check_token().then(()=>{e.modalFunc.closeAuth(),e.authenticate.get_profile().then(o=>{var n=(o.data||{}).user,i=JSON.parse(n.status);t.metadata.signing=!1,t.metadata=Object.assign(t.metadata,{signed_in:!0,email:n.email,uid:n.uid,email_verified:i.verified}),e.digest(),console.log(t.metadata)}).catch(()=>{e.authenticate.sign_out()})}).catch(()=>{e.authenticate.sign_out()})}),e.authenticate.get_profile=(()=>new Promise((e,o)=>{n.post(i.API_URL+"profile").then(o=>{console.log("get_profile"),console.log(o),console.log("end of get_profile"),e(o)},e=>{console.log("get_profile"),console.log(e),console.log("end of get_profile"),o()})})),e.authenticate.check_token=(()=>new Promise((e,o)=>{n.post(i.API_URL+"token").then(function(n){console.log("check_token"),console.log(n),console.log("end of check_token"),"OK"==n.data.status?e():o()},e=>{console.log("check_token err"),console.log(e),console.log("end of check_token err"),o()})})),e.authenticate.sign_out=(()=>{console.log("signing out"),t.metadata.signing=!1,t.metadata=Object.assign(t.metadata,{signed_in:!1,email_verified:!1,tng_uid:"",email:""}),n.post(i.API_URL+"reset_auth").then(e=>{console.log(e)},e=>{}),e.digest()}),e.authenticate.check()}]),app.controller("signInController",["$scope","$rootScope","$timeout","$http","ENV",function(e,o,n,t,i){e.signin_error={email:!1,password:!1,error:!1,message:{email:[],password:[],error:[]}},e.reset_input=(()=>{e.signin_information={email:"",password:""}}),e.reset_input(),e.signin=(()=>{const{email:n,password:a}=e.signin_information;o.metadata.loading.sign_in=!0,t.post(i.API_URL+"login",{email:n,password:a}).then(n=>{console.log(n),o.metadata.loading.sign_in=!1,e.authenticate.check(),e.modalFunc.closeAuth()},n=>{n.data;e.signin_error.error=!0,e.signin_error.message.error=["Invalid email or password!"],o.metadata.loading.sign_in=!1,e.digest()})})}]),app.controller("signUpController",["$scope","$rootScope","$timeout","$http","ENV",function(e,o,n,t,i){e.signup_error={email:!1,password_confirmation:!1,password:!1,message:{email:[],password_confirmation:[],password:[]}},e.reset_input=(()=>{e.signup_information={email:"",password:"",password_confirmation:""}}),e.reset_input(),e.signup=(()=>{const{email:n,password:a,password_confirmation:s}=e.signup_information;if(a!=s)return e.signup_error.password_confirmation=!0,void(e.signup_error.message.password_confirmation=["Password does not match"]);o.metadata.loading.sign_up=!0,t.post(i.API_URL+"register",{email:n,password:a,password_confirmation:s}).then(n=>{console.log(n),o.metadata.loading.sign_up=!1,e.authenticate.check(),e.modalFunc.closeAuth(),$("#sign-up-success").modal("show")},n=>{if(422==n.status){let t=n.data;t.email&&(e.signup_error.email=!0,e.signup_error.message.email=t.email),t.password&&(e.signup_error.password=!0,e.signup_error.message.password=t.password),t.password_confirmation&&(e.signup_error.password_confirmation=!0,e.signup_error.message.password_confirmation=t.password_confirmation),o.metadata.loading.sign_up=!1,e.digest()}})})}]),app.controller("headerController",["$scope","$rootScope",function(e,o){}]);