{"version":3,"sources":["ng-min.js","angular-cookies.min.js","slim.angular.js","ngGeolocation.js","app.js","sign-in.js","sign-up.js","header.js","profile_edit.js","cars_collection.js"],"names":["_typeof2","Symbol","iterator","obj","constructor","prototype","n","c","l","b","a","g","d","baseHref","k","e","f","h","expires","isDefined","path","isUndefined","isString","Date","encodeURIComponent","domain","toUTCString","secure","length","warn","cookie","module","info","angularVersion","provider","this","defaults","$get","get","getObject","fromJson","getAll","put","m","extend","putObject","toJson","remove","factory","$inject","window","angular","Slim","_classCallCheck","instance","Constructor","TypeError","scaleCanvas","canvas","scalar","bounds","min","targetWidth","Math","max","width","round","targetHeight","height","w","tmp","document","createElement","getContext","drawImage","cloneCanvas","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","createEvent","initCustomEvent","Event","loadImage","file","callback","options","url","oUrl","img","onerror","onload","noRevoke","revokeObjectURL","scale","isInstanceOf","createObjectURL","_type","type","crossOrigin","src","readFile","target","result","urlAPI","URL","webkitURL","Object","toString","call","transformCoordinates","getTransformedOptions","newOptions","i","aspectRatio","hasOwnProperty","crop","naturalWidth","naturalHeight","maxWidth","maxHeight","renderImageToCanvas","sourceX","sourceY","sourceWidth","sourceHeight","destX","destY","destWidth","destHeight","hasCanvasOption","scaleUp","minWidth","minHeight","scaleDown","pixelRatio","downsamplingRatio","useCanvas","left","top","right","bottom","contain","cover","style","method","FileReader","fileReader","originalHasCanvasOption","originalTransformCoordinates","originalGetTransformedOptions","orientation","ctx","styleWidth","styleHeight","translate","rotate","PI","opts","hasblobSlice","Blob","slice","webkitSlice","mozSlice","blobSlice","apply","arguments","metaDataParsers","jpeg","65505","parseMetaData","that","maxMetaDataSize","data","DataView","size","error","markerBytes","markerLength","parsers","buffer","dataView","offset","maxOffset","byteLength","headLength","getUint16","disableImageHead","imageHead","Uint8Array","subarray","ExifMap","map","Orientation","id","getExifThumbnail","hexData","getUint8","push","join","exifTagTypes","1","getValue","dataOffset","2","String","fromCharCode","ascii","3","littleEndian","4","getUint32","5","9","getInt32","10","getExifValue","tiffOffset","tagSize","values","str","tagType","parseExifTag","tag","exif","parseExifTags","dirOffset","tagsNumber","dirEndOffset","parseExifData","disableExif","thumbnailData","disableExifThumbnail","Thumbnail","disableExifSub","disableExifGps","snabbt","tickRequests","runningAnimations","completedAnimations","transformProperty","styles","getComputedStyle","documentElement","Array","match","OLink","arg1","arg2","arg3","elements","aggregateChainer","chainers","then","len","forEach","chainer","index","preprocessOptions","setValue","value","finish","rollback","snabbtSingleElement","clone","cloneObject","isFunction","delay","complete","hasAllDoneCallback","allDone","hasCompleteCallback","valueFeeder","matrix","easing","property","element","tick","time","animation","updateElement","isStopped","completed","loop","restart","queueTick","queue","pop","start","stateFromOptions","end","setupAnimationOptions","createAnimation","setupAttentionAnimation","stopAnimation","detachChildren","clearOphanedEndStates","currentState","currentAnimationState","animOptions","unshift","manual","movement","createState","createAttentionAnimation","currentAnimation","animatedElement","stop","indexOfElement","arr","el","animations","concat","contains","detachElement","splice","findAnimationState","animationList","state","getCurrentState","filter","findUltimateAncestor","body","node","ancestor","parentNode","useFromPrefix","position","rotation","rotationPost","skew","scalePost","opacity","optionOrDefault","startState","endState","polyFillrAF","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","func","tickAnimations","finishedAnimations","duration","perspective","createEaser","transformOrigin","manualCallback","tweener","startTime","currentTime","stopped","started","manualValue","manualDelayFactor","createValueFeederTweener","createStateTweener","resetFrom","setReverse","updateCurrentTransform","curr","_manualValue","tweenValue","val","tween","forceUpdate","asMatrix","properties","getProperties","updateElementTransform","updateElementProperties","initialVelocity","equilibriumPosition","spring","createSpringEasing","tweenPosition","tweenRotation","tweenRotationPost","tweenScale","tweenSkew","currentMovement","equilibrium","updateMovement","startPosition","velocity","springConstant","deceleration","springDeceleration","mass","springMass","abs","EASING_FUNCS","linear","ease","cos","easeIn","easeOut","pow","easerName","easeFunction","lastValue","easer","v","assignTranslate","x","y","z","assignRotateX","rad","sin","assignRotateY","assignRotateZ","assignSkew","ax","ay","tan","assignScale","assignIdentity","copyArray","createMatrix","Float32Array","asCSS","css","toFixed","clear","assignedMatrixMultiplication","rotateX","radians","rotateY","rotateZ","res","config","resultState","tweenWidth","tweenHeight","tweenOpacity","dX","dY","dZ","dAX","dAY","dAZ","dBX","dBY","dBZ","dSX","dSY","dSkewX","dSkewY","dWidth","dHeight","dOpacity","oldStart","currentMatrix","reverse","option","def","cssPerspective","cssMatrix","key","object","setElementTransform","stackBlur","getImageDataFromCanvas","top_x","top_y","getElementById","HTMLCanvasElement","imageData","context","getImageData","Error","processImageDataRGBA","radius","p","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pr","pg","pb","pa","rbs","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","next","stackEnd","stackIn","stackOut","mul_sum","mul_table","shg_sum","shg_table","r","isNaN","putImageData","toBlob","defineProperty","quality","binStr","atob","toDataURL","split","charCodeAt","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_typeof","getDataset","dataset","attr","attrs","attributes","name","test","toCamelCase","substr","replace","charAt","toUpperCase","getElementAttributes","getOffsetByEvent","offsetX","layerX","offsetY","layerY","mergeOptions","base","additives","optionsToMerge","Key","ESC","RETURN","Events","DOWN","MOVE","UP","MimeTypes","jpg","jpe","png","gif","bmp","ImageExtensionsRegex","create","className","addEvents","events","scope","addEventListener","removeEvents","removeEventListener","getEventOffset","changedTouches","pageX","pageY","rect","angle","x1","y1","x2","y2","rx1","ry1","rx2","ry2","getEventOffsetScroll","pageXOffset","scrollLeft","pageYOffset","scrollTop","lowercaseFirstLetter","string","toLowerCase","capitalizeFirstLetter","last","array","limit","inArray","needle","send","requestDecorator","progress","success","err","xhr","XMLHttpRequest","upload","loaded","total","open","onreadystatechange","readyState","status","text","responseText","indexOf","JSON","parse","message","_obj","resetTransforms","webkitTransform","transform","bytesToMegaBytes","getCommonMimeTypes","types","mimeType","isJPEGMimeType","getExtensionByMimeType","mimetype","getMimeTypeFromResponseType","responseType","getFileName","shift","leftPad","padding","getDateString","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getFileNameByFile","getFileTypeByFile","getFileNameWithoutExtension","blobToFile","blob","File","lastModified","lastModifiedDate","resourceIsBase64Data","resource","loadRemoteURL","fetcher","cb","response","loadURL","cloneFile","base64ToByteString","dataURI","dataPartCleaned","base64ToBlob","filename","byteString","ab","ArrayBuffer","ia","getMimeTypeFromDataURI","createBlob","BB","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","bb","append","getBlob","getImageAsCanvas","meta","getAutoCropRect","ratioOut","transformCanvas","transforms","filters","minSize","isTilted","space","px","py","pw","ph","scalarX","scalarY","sharpen","getPixels","_filter","createImageData","set","mix","weights","katet","sqrt","half","dstData","dstBuff","srcBuff","sy","sx","dstOff","cy","cx","scy","scx","srcOff","wt","sizeDist","dx","dy","original","cloneCanvasScaled","duplicate","canvasHasDimensions","copyCanvas","destination","blurCanvas","covers","image","parseInt","scaleRect","divideRect","resetFileInput","input","form","ref","nextSibling","appendChild","reset","insertBefore","stringify","dupe","cloneData","output","jpegCompression","dataUri","matches","substring","flattenData","forcedType","async","server","field","actions","downloadCanvas","navigator","msSaveBlob","link","display","download","href","click","removeChild","toggleDisplayBySelector","selector","enabled","root","querySelector","nodeListToArray","nl","removeElement","wrap","wrapper","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","describeArc","startAngle","endAngle","arcSweep","percentageArc","CropArea","resizers","ratio","t","s","ne","se","sw","nw","_element","_interaction","_minWidth","_minHeight","_ratio","_rect","_space","_rectChanged","_init","lines","handler","_btn","btn","_redraw","dispatchEvent","_onStartDrag","_onDrag","_onStopDrag","preventDefault","setAttribute","_this","cssText","ImageEditor","CropAreaEvents","_options","_output","_input","_preview","_previewBlurred","_blurredPreview","_cropper","_straightCrop","_previewWrapper","_currentWindowSize","_btnGroup","_maskFrame","_dirty","_wrapperRotation","_wrapperScale","_this2","_container","_wrapper","_stage","_previewMask","Buttons","prop","label","title","innerHTML","_utilsGroup","buttonRotateClassName","buttonRotateTitle","_onClick","_onGridChange","_onGridInput","_onKeyDown","_onResize","keyCode","_confirm","_cancel","classList","_rotate","innerWidth","innerHeight","_redrawCropper","area","_updateWrapperScale","_redrawWrapper","_redrawCropMask","offsetWidth","offsetHeight","wrapperWidth","wrapperHeight","_this3","_updateWrapperRotation","_hideCropper","_showCropper","fromOpacity","_this4","mask","preview","cancelAnimationFrame","_previewSize","_this5","tilted","relativeCrop","imageRatio","sh","offsetLeft","offsetTop","resize","clientWidth","clientHeight","fromRotation","fromPosition","fromScale","dirty","childNodes","_this6","children","destroy","add","getBoundingClientRect","buttonCancelClassName","buttonConfirmClassName","buttonCancelLabel","buttonConfirmLabel","buttonCancelTitle","buttonConfirmTitle","FileHopper","DragDropEvents","_accept","_allowURLs","_dragPath","dataTransfer","files","areValidDataTransferFiles","items","areValidDataTransferItems","kind","_this7","_onDragOver","_onDragLeave","_onDrop","remote","getData","parsed","isValidDataTransfer","dropEffect","dataValidity","_this8","mimetypes","Popover","_inner","_this9","_this10","firstChild","intSplit","isWrapper","nodeName","CropType","AUTO","INITIAL","MANUAL","Rect","HopperEvents","ImageEditorEvents","SlimButtons","SlimPopover","SlimCount","SlimLoaderHTML","stringToSize","_uid","forceSize","_originalElement","_originalElementInner","_originalElementAttributes","_state","_timers","_inputReference","_isRequired","_imageHopper","_imageEditor","_progressEnabled","_data","_resetData","_drip","_hasInitialImage","_initialCrop","_initialRotation","_isBeingDestroyed","supported","_fallback","_manualTransform","dimensions","_this11","_isFixedRatio","parts","_cropAuto","_scaleDropArea","_load","_doUpload","_doDownload","_doRemove","_doDestroy","_doEdit","_crop","instantEdit","_isInitialising","_getFileInput","_getInitialImage","action","_updateState","item","_this12","_addState","post","_getInputElement","required","initialData","Image","defaultInputName","removeAttribute","initialImage","initialImageSrc","initialImageName","getAttribute","resultHTML","_isImageOnly","labelLoading","service","hasAttribute","accept","trim","allowURLs","_isButtonAllowed","_updateProgress","_onInit","_this13","done","timer","didInit","saveInitialImage","containsImage","_save","_toggleButton","loader","paths","querySelectorAll","ringWidth","_this14","ring","_stopProgressLoop","_this15","repeat","parseFloat","button","edit","_throwError","statusNoSupport","_onChange","_onCancel","_onConfirm","_onFileOver","_onFileOut","_onDropFile","_onInvalidFile","_onInvalidFileDrop","_removeState","_removeError","_this16","list","_openFileDialog","willRemove","drip","_getDrip","statusFileType","statusImageTooSmall","statusFileSize","maxFileSize","dragPath","_this17","jump","_this18","clearTimeout","_replaceTimeout","_startProgressLoop","_loadTimeout","exit","_onRemoteURLProblem","_onOverWeightFile","internalCanvasSize","rewind","_onImageTooSmall","didLoad","revealCanvas","dropReplace","intro","_getIntro","isDetached","_canInstantEdit","_loadCanvas","isUploading","_showButtons","ready","_this19","_applyTransforms","transformedImage","willUpload","_startProgress","_stopProgress","_this20","filterSharpen","outputImage","_onTransformCanvas","transformedData","didTransform","willTransform","_this21","buttonRotateLabel","_getRatioSpacerElement","marginBottom","didCancel","_hideEditor","_isAutoCrop","_this22","didConfirm","images","_getInOut","outro","zIndex","_showPreview","cropType","_this23","save","_this24","allowUpload","dataBase64","willSave","_store","didSave","_upload","_storeServerResponse","didUpload","_this25","fileData","formData","FormData","uploadBase64","copyImageHead","statusNode","willRequest","onProgress","onSuccess","statusUploadSuccess","onError","html","statusContentLength","didReceiveServerError","statusUnknownResponse","serviceFormat","popoverClassName","show","hide","_this26","_this27","_appendEditor","showRotateButton","rotateButton","inner","_showEditor","_hideButtons","_hideStatus","_this28","_clearState","out","_getOutro","_hideResult","didRemove","_this29","forceType","matchesAttributeInList","_this30","replaceChild","attribute","setSize","setRotation","setRatio","defaultError","capitalized","toLabel","toFunctionReference","levels","level","instances","isAttachedTo","passThrough","defaultFalse","defaultTrue","defaultLabel","defaultFunction","defaultSize","toInt","fn","buttonOptions","opt","operamini","croppers","getOptionsFromAttributes","valueTransformer","_value","find","slim","scopeDef","setters","directive","restrict","container","setter","$watch","newValue","oldValue","$rootScope","$window","$q","retVal","getCurrentPosition","deferred","defer","geolocation","$apply","coords","timestamp","resolve","reject","code","promise","watchPosition","watchId","$broadcast","clearWatch","env","assign","__env","app","constant","$httpProvider","withCredentials","$locationProvider","html5Mode","requireBase","controller","$scope","$timeout","$http","ENV","$geolocation","$cookies","digest","waitForRenderAndDoSomething","pendingRequests","range","metadata","signed_in","email_verified","signing","tng_uid","email","loading","sign_up","sign_in","auth","current_location","current_location_retrieved","timeout","maximumAge","enableHighAccuracy","console","log","$on","args","latitude","longitude","modalFunc","closeAuth","$","modal","authenticate","check","check_token","get_profile","user","uid","s_verified","catch","sign_out","Promise","API_URL","headers","X-TKNG-UID","X-TKNG-TKN","token","X-TKNG-EM","first_name","register_auth","signin_error","password","reset_input","signin_information","reset_error","signin","_$scope$signin_inform","signup_error","last_name","password_confirmation","signup_information","signup","_$scope$signup_inform","profile_error","gender","birth_date","address","suburb","post_code","profile_form","moment","format","caleran","singleDate","calendarCount","showHeader","showFooter","autoCloseOnSelect","maxDate","enableKeyboard","onafterselect","startDate","endDate","save_profile","phone","api_url","init","will_request","setRequestHeader","$location","NgMap","search","page","getMap","cars","carsLocations","reset_cars","carsCollectionCtrl","retrieve","current_page","last_page","pagination","prev","location_unregister","newVal","oldVal","changePage","parsedParams","parseParams","next_page_url","prev_page_url","distance","lat","long","pCount"],"mappings":"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AAA,IAAAC,EAAA,GAAAD,EAAA,IACA2a,EAAA,GAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAEA2a,EAAA,GAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IACA2a,EAAA,GAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IACA2a,EAAA,GAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IACA2a,EAAA,GAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAEA2a,EAAA,GAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,IACA2a,EAAA,GAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,IACA2a,EAAA,IAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IACA2a,EAAA,IAAA1a,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAEA2a,EAAA,IAAA1a,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,IACA2a,EAAA,IAAA1a,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,IACA2a,EAAA,IAAA1a,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,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","file":"../app/ng-min.js","sourcesContent":["\"use strict\";\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\r\n AngularJS v1.6.4\r\n (c) 2010-2017 Google, Inc. http://angularjs.org\r\n License: MIT\r\n*/\n(function (n, c) {\n\t'use strict';\n\tfunction l(b, a, g) {\n\t\tvar d = g.baseHref(),\n\t\t    k = b[0];return function (b, e, f) {\n\t\t\tvar g, h;f = f || {};h = f.expires;g = c.isDefined(f.path) ? f.path : d;c.isUndefined(e) && (h = \"Thu, 01 Jan 1970 00:00:00 GMT\", e = \"\");c.isString(h) && (h = new Date(h));e = encodeURIComponent(b) + \"=\" + encodeURIComponent(e);e = e + (g ? \";path=\" + g : \"\") + (f.domain ? \";domain=\" + f.domain : \"\");e += h ? \";expires=\" + h.toUTCString() : \"\";e += f.secure ? \";secure\" : \"\";f = e.length + 1;4096 < f && a.warn(\"Cookie '\" + b + \"' possibly not set or overflowed because it was too large (\" + f + \" > 4096 bytes)!\");k.cookie = e;\n\t\t};\n\t}c.module(\"ngCookies\", [\"ng\"]).info({ angularVersion: \"1.6.4\" }).provider(\"$cookies\", [function () {\n\t\tvar b = this.defaults = {};this.$get = [\"$$cookieReader\", \"$$cookieWriter\", function (a, g) {\n\t\t\treturn { get: function get(d) {\n\t\t\t\t\treturn a()[d];\n\t\t\t\t}, getObject: function getObject(d) {\n\t\t\t\t\treturn (d = this.get(d)) ? c.fromJson(d) : d;\n\t\t\t\t}, getAll: function getAll() {\n\t\t\t\t\treturn a();\n\t\t\t\t}, put: function put(d, a, m) {\n\t\t\t\t\tg(d, a, m ? c.extend({}, b, m) : b);\n\t\t\t\t}, putObject: function putObject(d, b, a) {\n\t\t\t\t\tthis.put(d, c.toJson(b), a);\n\t\t\t\t}, remove: function remove(a, k) {\n\t\t\t\t\tg(a, void 0, k ? c.extend({}, b, k) : b);\n\t\t\t\t} };\n\t\t}];\n\t}]);c.module(\"ngCookies\").factory(\"$cookieStore\", [\"$cookies\", function (b) {\n\t\treturn { get: function get(a) {\n\t\t\t\treturn b.getObject(a);\n\t\t\t}, put: function put(a, c) {\n\t\t\t\tb.putObject(a, c);\n\t\t\t}, remove: function remove(a) {\n\t\t\t\tb.remove(a);\n\t\t\t} };\n\t}]);l.$inject = [\"$document\", \"$log\", \"$browser\"];c.module(\"ngCookies\").provider(\"$$cookieWriter\", function () {\n\t\tthis.$get = l;\n\t});\n})(window, window.angular);\n\n\n/*\r\n * Slim v4.11.1 - Image Cropping Made Easy\r\n * Copyright (c) 2017 Rik Schennink - http://slimimagecropper.com\r\n */\n(function (angular) {\n\n\t// Slim Lib\n\tvar Slim = function () {\n\n\t\t// custom event polyfill for IE10\n\t\t(function () {\n\t\t\tif (typeof window.CustomEvent === 'function') return false;\n\n\t\t\tfunction CustomEvent(event, params) {\n\t\t\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\n\t\t\t\tvar evt = document.createEvent('CustomEvent');\n\t\t\t\tevt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t\t\t\treturn evt;\n\t\t\t}\n\n\t\t\tCustomEvent.prototype = window.Event.prototype;\n\n\t\t\twindow.CustomEvent = CustomEvent;\n\t\t})();\n\t\t/*\r\n  * JavaScript Load Image\r\n  * https://github.com/blueimp/JavaScript-Load-Image\r\n  *\r\n  * Copyright 2011, Sebastian Tschan\r\n  * https://blueimp.net\r\n  *\r\n  * Licensed under the MIT license:\r\n  * http://www.opensource.org/licenses/MIT\r\n  */\n\n\t\t/*global define, module, window, document, URL, webkitURL, FileReader */\n\n\t\t// Loads an image for a given File object.\n\t\t// Invokes the callback with an img or optional canvas\n\t\t// element (if supported by the browser) as parameter:\n\t\tvar loadImage = function loadImage(file, callback, options) {\n\t\t\tvar img = document.createElement('img');\n\t\t\tvar url;\n\t\t\tvar oUrl;\n\t\t\timg.onerror = callback;\n\t\t\timg.onload = function () {\n\t\t\t\tif (oUrl && !(options && options.noRevoke)) {\n\t\t\t\t\tloadImage.revokeObjectURL(oUrl);\n\t\t\t\t}\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(loadImage.scale(img, options));\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (loadImage.isInstanceOf('Blob', file) ||\n\t\t\t// Files are also Blob instances, but some browsers\n\t\t\t// (Firefox 3.6) support the File API but not Blobs:\n\t\t\tloadImage.isInstanceOf('File', file)) {\n\t\t\t\turl = oUrl = loadImage.createObjectURL(file);\n\t\t\t\t// Store the file type for resize processing:\n\t\t\t\timg._type = file.type;\n\t\t\t} else if (typeof file === 'string') {\n\t\t\t\turl = file;\n\t\t\t\tif (options && options.crossOrigin) {\n\t\t\t\t\timg.crossOrigin = options.crossOrigin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (url) {\n\t\t\t\timg.src = url;\n\t\t\t\treturn img;\n\t\t\t}\n\t\t\treturn loadImage.readFile(file, function (e) {\n\t\t\t\tvar target = e.target;\n\t\t\t\tif (target && target.result) {\n\t\t\t\t\timg.src = target.result;\n\t\t\t\t} else {\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\t// The check for URL.revokeObjectURL fixes an issue with Opera 12,\n\t\t// which provides URL.createObjectURL but doesn't properly implement it:\n\t\tvar urlAPI = window.createObjectURL && window || window.URL && URL.revokeObjectURL && URL || window.webkitURL && webkitURL;\n\n\t\tloadImage.isInstanceOf = function (type, obj) {\n\t\t\t// Cross-frame instanceof check\n\t\t\treturn Object.prototype.toString.call(obj) === '[object ' + type + ']';\n\t\t};\n\n\t\t// Transform image coordinates, allows to override e.g.\n\t\t// the canvas orientation based on the orientation option,\n\t\t// gets canvas, options passed as arguments:\n\t\tloadImage.transformCoordinates = function () {\n\t\t\treturn;\n\t\t};\n\n\t\t// Returns transformed options, allows to override e.g.\n\t\t// maxWidth, maxHeight and crop options based on the aspectRatio.\n\t\t// gets img, options passed as arguments:\n\t\tloadImage.getTransformedOptions = function (img, options) {\n\t\t\tvar aspectRatio = options.aspectRatio;\n\t\t\tvar newOptions;\n\t\t\tvar i;\n\t\t\tvar width;\n\t\t\tvar height;\n\t\t\tif (!aspectRatio) {\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\tnewOptions = {};\n\t\t\tfor (i in options) {\n\t\t\t\tif (options.hasOwnProperty(i)) {\n\t\t\t\t\tnewOptions[i] = options[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewOptions.crop = true;\n\t\t\twidth = img.naturalWidth || img.width;\n\t\t\theight = img.naturalHeight || img.height;\n\t\t\tif (width / height > aspectRatio) {\n\t\t\t\tnewOptions.maxWidth = height * aspectRatio;\n\t\t\t\tnewOptions.maxHeight = height;\n\t\t\t} else {\n\t\t\t\tnewOptions.maxWidth = width;\n\t\t\t\tnewOptions.maxHeight = width / aspectRatio;\n\t\t\t}\n\t\t\treturn newOptions;\n\t\t};\n\n\t\t// Canvas render method, allows to implement a different rendering algorithm:\n\t\tloadImage.renderImageToCanvas = function (canvas, img, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight) {\n\t\t\tcanvas.getContext('2d').drawImage(img, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight);\n\t\t\treturn canvas;\n\t\t};\n\n\t\t// This method is used to determine if the target image\n\t\t// should be a canvas element:\n\t\tloadImage.hasCanvasOption = function (options) {\n\t\t\treturn options.canvas || options.crop || !!options.aspectRatio;\n\t\t};\n\n\t\t// Scales and/or crops the given image (img or canvas HTML element)\n\t\t// using the given options.\n\t\t// Returns a canvas object if the browser supports canvas\n\t\t// and the hasCanvasOption method returns true or a canvas\n\t\t// object is passed as image, else the scaled image:\n\t\tloadImage.scale = function (img, options) {\n\t\t\toptions = options || {};\n\t\t\tvar canvas = document.createElement('canvas');\n\t\t\tvar useCanvas = img.getContext || loadImage.hasCanvasOption(options) && canvas.getContext;\n\t\t\tvar width = img.naturalWidth || img.width;\n\t\t\tvar height = img.naturalHeight || img.height;\n\t\t\tvar destWidth = width;\n\t\t\tvar destHeight = height;\n\t\t\tvar maxWidth;\n\t\t\tvar maxHeight;\n\t\t\tvar minWidth;\n\t\t\tvar minHeight;\n\t\t\tvar sourceWidth;\n\t\t\tvar sourceHeight;\n\t\t\tvar sourceX;\n\t\t\tvar sourceY;\n\t\t\tvar pixelRatio;\n\t\t\tvar downsamplingRatio;\n\t\t\tvar tmp;\n\t\t\tfunction scaleUp() {\n\t\t\t\tvar scale = Math.max((minWidth || destWidth) / destWidth, (minHeight || destHeight) / destHeight);\n\t\t\t\tif (scale > 1) {\n\t\t\t\t\tdestWidth *= scale;\n\t\t\t\t\tdestHeight *= scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction scaleDown() {\n\t\t\t\tvar scale = Math.min((maxWidth || destWidth) / destWidth, (maxHeight || destHeight) / destHeight);\n\t\t\t\tif (scale < 1) {\n\t\t\t\t\tdestWidth *= scale;\n\t\t\t\t\tdestHeight *= scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (useCanvas) {\n\t\t\t\toptions = loadImage.getTransformedOptions(img, options);\n\t\t\t\tsourceX = options.left || 0;\n\t\t\t\tsourceY = options.top || 0;\n\t\t\t\tif (options.sourceWidth) {\n\t\t\t\t\tsourceWidth = options.sourceWidth;\n\t\t\t\t\tif (options.right !== undefined && options.left === undefined) {\n\t\t\t\t\t\tsourceX = width - sourceWidth - options.right;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsourceWidth = width - sourceX - (options.right || 0);\n\t\t\t\t}\n\t\t\t\tif (options.sourceHeight) {\n\t\t\t\t\tsourceHeight = options.sourceHeight;\n\t\t\t\t\tif (options.bottom !== undefined && options.top === undefined) {\n\t\t\t\t\t\tsourceY = height - sourceHeight - options.bottom;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsourceHeight = height - sourceY - (options.bottom || 0);\n\t\t\t\t}\n\t\t\t\tdestWidth = sourceWidth;\n\t\t\t\tdestHeight = sourceHeight;\n\t\t\t}\n\t\t\tmaxWidth = options.maxWidth;\n\t\t\tmaxHeight = options.maxHeight;\n\t\t\tminWidth = options.minWidth;\n\t\t\tminHeight = options.minHeight;\n\t\t\tif (useCanvas && maxWidth && maxHeight && options.crop) {\n\t\t\t\tdestWidth = maxWidth;\n\t\t\t\tdestHeight = maxHeight;\n\t\t\t\ttmp = sourceWidth / sourceHeight - maxWidth / maxHeight;\n\t\t\t\tif (tmp < 0) {\n\t\t\t\t\tsourceHeight = maxHeight * sourceWidth / maxWidth;\n\t\t\t\t\tif (options.top === undefined && options.bottom === undefined) {\n\t\t\t\t\t\tsourceY = (height - sourceHeight) / 2;\n\t\t\t\t\t}\n\t\t\t\t} else if (tmp > 0) {\n\t\t\t\t\tsourceWidth = maxWidth * sourceHeight / maxHeight;\n\t\t\t\t\tif (options.left === undefined && options.right === undefined) {\n\t\t\t\t\t\tsourceX = (width - sourceWidth) / 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (options.contain || options.cover) {\n\t\t\t\t\tminWidth = maxWidth = maxWidth || minWidth;\n\t\t\t\t\tminHeight = maxHeight = maxHeight || minHeight;\n\t\t\t\t}\n\t\t\t\tif (options.cover) {\n\t\t\t\t\tscaleDown();\n\t\t\t\t\tscaleUp();\n\t\t\t\t} else {\n\t\t\t\t\tscaleUp();\n\t\t\t\t\tscaleDown();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (useCanvas) {\n\t\t\t\tpixelRatio = options.pixelRatio;\n\t\t\t\tif (pixelRatio > 1) {\n\t\t\t\t\tcanvas.style.width = destWidth + 'px';\n\t\t\t\t\tcanvas.style.height = destHeight + 'px';\n\t\t\t\t\tdestWidth *= pixelRatio;\n\t\t\t\t\tdestHeight *= pixelRatio;\n\t\t\t\t\tcanvas.getContext('2d').scale(pixelRatio, pixelRatio);\n\t\t\t\t}\n\t\t\t\tdownsamplingRatio = options.downsamplingRatio;\n\t\t\t\tif (downsamplingRatio > 0 && downsamplingRatio < 1 && destWidth < sourceWidth && destHeight < sourceHeight) {\n\t\t\t\t\twhile (sourceWidth * downsamplingRatio > destWidth) {\n\t\t\t\t\t\tcanvas.width = sourceWidth * downsamplingRatio;\n\t\t\t\t\t\tcanvas.height = sourceHeight * downsamplingRatio;\n\t\t\t\t\t\tloadImage.renderImageToCanvas(canvas, img, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, canvas.width, canvas.height);\n\t\t\t\t\t\tsourceWidth = canvas.width;\n\t\t\t\t\t\tsourceHeight = canvas.height;\n\t\t\t\t\t\timg = document.createElement('canvas');\n\t\t\t\t\t\timg.width = sourceWidth;\n\t\t\t\t\t\timg.height = sourceHeight;\n\t\t\t\t\t\tloadImage.renderImageToCanvas(img, canvas, 0, 0, sourceWidth, sourceHeight, 0, 0, sourceWidth, sourceHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcanvas.width = destWidth;\n\t\t\t\tcanvas.height = destHeight;\n\t\t\t\tloadImage.transformCoordinates(canvas, options);\n\t\t\t\treturn loadImage.renderImageToCanvas(canvas, img, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, destWidth, destHeight);\n\t\t\t}\n\t\t\timg.width = destWidth;\n\t\t\timg.height = destHeight;\n\t\t\treturn img;\n\t\t};\n\n\t\tloadImage.createObjectURL = function (file) {\n\t\t\treturn urlAPI ? urlAPI.createObjectURL(file) : false;\n\t\t};\n\n\t\tloadImage.revokeObjectURL = function (url) {\n\t\t\treturn urlAPI ? urlAPI.revokeObjectURL(url) : false;\n\t\t};\n\n\t\t// Loads a given File object via FileReader interface,\n\t\t// invokes the callback with the event object (load or error).\n\t\t// The result can be read via event.target.result:\n\t\tloadImage.readFile = function (file, callback, method) {\n\t\t\tif (window.FileReader) {\n\t\t\t\tvar fileReader = new FileReader();\n\t\t\t\tfileReader.onload = fileReader.onerror = callback;\n\t\t\t\tmethod = method || 'readAsDataURL';\n\t\t\t\tif (fileReader[method]) {\n\t\t\t\t\tfileReader[method](file);\n\t\t\t\t\treturn fileReader;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tvar originalHasCanvasOption = loadImage.hasCanvasOption;\n\t\tvar originalTransformCoordinates = loadImage.transformCoordinates;\n\t\tvar originalGetTransformedOptions = loadImage.getTransformedOptions;\n\n\t\t// This method is used to determine if the target image\n\t\t// should be a canvas element:\n\t\tloadImage.hasCanvasOption = function (options) {\n\t\t\treturn !!options.orientation || originalHasCanvasOption.call(loadImage, options);\n\t\t};\n\n\t\t// Transform image orientation based on\n\t\t// the given EXIF orientation option:\n\t\tloadImage.transformCoordinates = function (canvas, options) {\n\t\t\toriginalTransformCoordinates.call(loadImage, canvas, options);\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\tvar width = canvas.width;\n\t\t\tvar height = canvas.height;\n\t\t\tvar styleWidth = canvas.style.width;\n\t\t\tvar styleHeight = canvas.style.height;\n\t\t\tvar orientation = options.orientation;\n\t\t\tif (!orientation || orientation > 8) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (orientation > 4) {\n\t\t\t\tcanvas.width = height;\n\t\t\t\tcanvas.height = width;\n\t\t\t\tcanvas.style.width = styleHeight;\n\t\t\t\tcanvas.style.height = styleWidth;\n\t\t\t}\n\t\t\tswitch (orientation) {\n\t\t\t\tcase 2:\n\t\t\t\t\t// horizontal flip\n\t\t\t\t\tctx.translate(width, 0);\n\t\t\t\t\tctx.scale(-1, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t// 180° rotate left\n\t\t\t\t\tctx.translate(width, height);\n\t\t\t\t\tctx.rotate(Math.PI);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\t// vertical flip\n\t\t\t\t\tctx.translate(0, height);\n\t\t\t\t\tctx.scale(1, -1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\t// vertical flip + 90 rotate right\n\t\t\t\t\tctx.rotate(0.5 * Math.PI);\n\t\t\t\t\tctx.scale(1, -1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\t// 90° rotate right\n\t\t\t\t\tctx.rotate(0.5 * Math.PI);\n\t\t\t\t\tctx.translate(0, -height);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\t// horizontal flip + 90 rotate right\n\t\t\t\t\tctx.rotate(0.5 * Math.PI);\n\t\t\t\t\tctx.translate(width, -height);\n\t\t\t\t\tctx.scale(-1, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\t// 90° rotate left\n\t\t\t\t\tctx.rotate(-0.5 * Math.PI);\n\t\t\t\t\tctx.translate(-width, 0);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\t// Transforms coordinate and dimension options\n\t\t// based on the given orientation option:\n\t\tloadImage.getTransformedOptions = function (img, opts) {\n\t\t\tvar options = originalGetTransformedOptions.call(loadImage, img, opts);\n\t\t\tvar orientation = options.orientation;\n\t\t\tvar newOptions;\n\t\t\tvar i;\n\t\t\tif (!orientation || orientation > 8 || orientation === 1) {\n\t\t\t\treturn options;\n\t\t\t}\n\t\t\tnewOptions = {};\n\t\t\tfor (i in options) {\n\t\t\t\tif (options.hasOwnProperty(i)) {\n\t\t\t\t\tnewOptions[i] = options[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (options.orientation) {\n\t\t\t\tcase 2:\n\t\t\t\t\t// horizontal flip\n\t\t\t\t\tnewOptions.left = options.right;\n\t\t\t\t\tnewOptions.right = options.left;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t// 180° rotate left\n\t\t\t\t\tnewOptions.left = options.right;\n\t\t\t\t\tnewOptions.top = options.bottom;\n\t\t\t\t\tnewOptions.right = options.left;\n\t\t\t\t\tnewOptions.bottom = options.top;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\t// vertical flip\n\t\t\t\t\tnewOptions.top = options.bottom;\n\t\t\t\t\tnewOptions.bottom = options.top;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\t// vertical flip + 90 rotate right\n\t\t\t\t\tnewOptions.left = options.top;\n\t\t\t\t\tnewOptions.top = options.left;\n\t\t\t\t\tnewOptions.right = options.bottom;\n\t\t\t\t\tnewOptions.bottom = options.right;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\t// 90° rotate right\n\t\t\t\t\tnewOptions.left = options.top;\n\t\t\t\t\tnewOptions.top = options.right;\n\t\t\t\t\tnewOptions.right = options.bottom;\n\t\t\t\t\tnewOptions.bottom = options.left;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\t// horizontal flip + 90 rotate right\n\t\t\t\t\tnewOptions.left = options.bottom;\n\t\t\t\t\tnewOptions.top = options.right;\n\t\t\t\t\tnewOptions.right = options.top;\n\t\t\t\t\tnewOptions.bottom = options.left;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\t// 90° rotate left\n\t\t\t\t\tnewOptions.left = options.bottom;\n\t\t\t\t\tnewOptions.top = options.left;\n\t\t\t\t\tnewOptions.right = options.top;\n\t\t\t\t\tnewOptions.bottom = options.right;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (options.orientation > 4) {\n\t\t\t\tnewOptions.maxWidth = options.maxHeight;\n\t\t\t\tnewOptions.maxHeight = options.maxWidth;\n\t\t\t\tnewOptions.minWidth = options.minHeight;\n\t\t\t\tnewOptions.minHeight = options.minWidth;\n\t\t\t\tnewOptions.sourceWidth = options.sourceHeight;\n\t\t\t\tnewOptions.sourceHeight = options.sourceWidth;\n\t\t\t}\n\t\t\treturn newOptions;\n\t\t};\n\n\t\tvar hasblobSlice = window.Blob && (Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice);\n\n\t\tloadImage.blobSlice = hasblobSlice && function () {\n\t\t\tvar slice = this.slice || this.webkitSlice || this.mozSlice;\n\t\t\treturn slice.apply(this, arguments);\n\t\t};\n\n\t\tloadImage.metaDataParsers = {\n\t\t\tjpeg: {\n\t\t\t\t0xffe1: [] // APP1 marker\n\t\t\t}\n\n\t\t\t// Parses image meta data and calls the callback with an object argument\n\t\t\t// with the following properties:\n\t\t\t// * imageHead: The complete image head as ArrayBuffer (Uint8Array for IE10)\n\t\t\t// The options arguments accepts an object and supports the following properties:\n\t\t\t// * maxMetaDataSize: Defines the maximum number of bytes to parse.\n\t\t\t// * disableImageHead: Disables creating the imageHead property.\n\t\t};loadImage.parseMetaData = function (file, callback, options) {\n\t\t\toptions = options || {};\n\t\t\tvar that = this;\n\t\t\t// 256 KiB should contain all EXIF/ICC/IPTC segments:\n\t\t\tvar maxMetaDataSize = options.maxMetaDataSize || 262144;\n\t\t\tvar data = {};\n\t\t\tvar noMetaData = !(window.DataView && file && file.size >= 12 && file.type === 'image/jpeg' && loadImage.blobSlice);\n\t\t\tif (noMetaData || !loadImage.readFile(loadImage.blobSlice.call(file, 0, maxMetaDataSize), function (e) {\n\t\t\t\tif (e.target.error) {\n\t\t\t\t\t// FileReader error\n\t\t\t\t\t//console.log(e.target.error)\n\t\t\t\t\tcallback(data);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Note on endianness:\n\t\t\t\t// Since the marker and length bytes in JPEG files are always\n\t\t\t\t// stored in big endian order, we can leave the endian parameter\n\t\t\t\t// of the DataView methods undefined, defaulting to big endian.\n\t\t\t\tvar buffer = e.target.result;\n\t\t\t\tvar dataView = new DataView(buffer);\n\t\t\t\tvar offset = 2;\n\t\t\t\tvar maxOffset = dataView.byteLength - 4;\n\t\t\t\tvar headLength = offset;\n\t\t\t\tvar markerBytes;\n\t\t\t\tvar markerLength;\n\t\t\t\tvar parsers;\n\t\t\t\tvar i;\n\t\t\t\t// Check for the JPEG marker (0xffd8):\n\t\t\t\tif (dataView.getUint16(0) === 0xffd8) {\n\t\t\t\t\twhile (offset < maxOffset) {\n\t\t\t\t\t\tmarkerBytes = dataView.getUint16(offset);\n\t\t\t\t\t\t// Search for APPn (0xffeN) and COM (0xfffe) markers,\n\t\t\t\t\t\t// which contain application-specific meta-data like\n\t\t\t\t\t\t// Exif, ICC and IPTC data and text comments:\n\t\t\t\t\t\tif (markerBytes >= 0xffe0 && markerBytes <= 0xffef || markerBytes === 0xfffe) {\n\t\t\t\t\t\t\t// The marker bytes (2) are always followed by\n\t\t\t\t\t\t\t// the length bytes (2), indicating the length of the\n\t\t\t\t\t\t\t// marker segment, which includes the length bytes,\n\t\t\t\t\t\t\t// but not the marker bytes, so we add 2:\n\t\t\t\t\t\t\tmarkerLength = dataView.getUint16(offset + 2) + 2;\n\t\t\t\t\t\t\tif (offset + markerLength > dataView.byteLength) {\n\t\t\t\t\t\t\t\t//console.log('Invalid meta data: Invalid segment size.')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparsers = loadImage.metaDataParsers.jpeg[markerBytes];\n\t\t\t\t\t\t\tif (parsers) {\n\t\t\t\t\t\t\t\tfor (i = 0; i < parsers.length; i += 1) {\n\t\t\t\t\t\t\t\t\tparsers[i].call(that, dataView, offset, markerLength, data, options);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toffset += markerLength;\n\t\t\t\t\t\t\theadLength = offset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Not an APPn or COM marker, probably safe to\n\t\t\t\t\t\t\t// assume that this is the end of the meta data\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Meta length must be longer than JPEG marker (2)\n\t\t\t\t\t// plus APPn marker (2), followed by length bytes (2):\n\t\t\t\t\tif (!options.disableImageHead && headLength > 6) {\n\t\t\t\t\t\tif (buffer.slice) {\n\t\t\t\t\t\t\tdata.imageHead = buffer.slice(0, headLength);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Workaround for IE10, which does not yet\n\t\t\t\t\t\t\t// support ArrayBuffer.slice:\n\t\t\t\t\t\t\tdata.imageHead = new Uint8Array(buffer).subarray(0, headLength);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//console.log('Invalid JPEG file: Missing JPEG marker.')\n\t\t\t\t}\n\t\t\t\tcallback(data);\n\t\t\t}, 'readAsArrayBuffer')) {\n\t\t\t\tcallback(data);\n\t\t\t}\n\t\t};\n\n\t\tloadImage.ExifMap = function () {\n\t\t\treturn this;\n\t\t};\n\n\t\tloadImage.ExifMap.prototype.map = {\n\t\t\t'Orientation': 0x0112\n\t\t};\n\n\t\tloadImage.ExifMap.prototype.get = function (id) {\n\t\t\treturn this[id] || this[this.map[id]];\n\t\t};\n\n\t\tloadImage.getExifThumbnail = function (dataView, offset, length) {\n\t\t\tvar hexData, i, b;\n\t\t\tif (!length || offset + length > dataView.byteLength) {\n\t\t\t\t//console.log('Invalid Exif data: Invalid thumbnail data.')\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thexData = [];\n\t\t\tfor (i = 0; i < length; i += 1) {\n\t\t\t\tb = dataView.getUint8(offset + i);\n\t\t\t\thexData.push((b < 16 ? '0' : '') + b.toString(16));\n\t\t\t}\n\t\t\treturn 'data:image/jpeg,%' + hexData.join('%');\n\t\t};\n\n\t\tloadImage.exifTagTypes = {\n\t\t\t// byte, 8-bit unsigned int:\n\t\t\t1: {\n\t\t\t\tgetValue: function getValue(dataView, dataOffset) {\n\t\t\t\t\treturn dataView.getUint8(dataOffset);\n\t\t\t\t},\n\t\t\t\tsize: 1\n\t\t\t},\n\t\t\t// ascii, 8-bit byte:\n\t\t\t2: {\n\t\t\t\tgetValue: function getValue(dataView, dataOffset) {\n\t\t\t\t\treturn String.fromCharCode(dataView.getUint8(dataOffset));\n\t\t\t\t},\n\t\t\t\tsize: 1,\n\t\t\t\tascii: true\n\t\t\t},\n\t\t\t// short, 16 bit int:\n\t\t\t3: {\n\t\t\t\tgetValue: function getValue(dataView, dataOffset, littleEndian) {\n\t\t\t\t\treturn dataView.getUint16(dataOffset, littleEndian);\n\t\t\t\t},\n\t\t\t\tsize: 2\n\t\t\t},\n\t\t\t// long, 32 bit int:\n\t\t\t4: {\n\t\t\t\tgetValue: function getValue(dataView, dataOffset, littleEndian) {\n\t\t\t\t\treturn dataView.getUint32(dataOffset, littleEndian);\n\t\t\t\t},\n\t\t\t\tsize: 4\n\t\t\t},\n\t\t\t// rational = two long values, first is numerator, second is denominator:\n\t\t\t5: {\n\t\t\t\tgetValue: function getValue(dataView, dataOffset, littleEndian) {\n\t\t\t\t\treturn dataView.getUint32(dataOffset, littleEndian) / dataView.getUint32(dataOffset + 4, littleEndian);\n\t\t\t\t},\n\t\t\t\tsize: 8\n\t\t\t},\n\t\t\t// slong, 32 bit signed int:\n\t\t\t9: {\n\t\t\t\tgetValue: function getValue(dataView, dataOffset, littleEndian) {\n\t\t\t\t\treturn dataView.getInt32(dataOffset, littleEndian);\n\t\t\t\t},\n\t\t\t\tsize: 4\n\t\t\t},\n\t\t\t// srational, two slongs, first is numerator, second is denominator:\n\t\t\t10: {\n\t\t\t\tgetValue: function getValue(dataView, dataOffset, littleEndian) {\n\t\t\t\t\treturn dataView.getInt32(dataOffset, littleEndian) / dataView.getInt32(dataOffset + 4, littleEndian);\n\t\t\t\t},\n\t\t\t\tsize: 8\n\t\t\t}\n\t\t\t// undefined, 8-bit byte, value depending on field:\n\t\t};loadImage.exifTagTypes[7] = loadImage.exifTagTypes[1];\n\n\t\tloadImage.getExifValue = function (dataView, tiffOffset, offset, type, length, littleEndian) {\n\t\t\tvar tagType = loadImage.exifTagTypes[type];\n\t\t\tvar tagSize;\n\t\t\tvar dataOffset;\n\t\t\tvar values;\n\t\t\tvar i;\n\t\t\tvar str;\n\t\t\tvar c;\n\t\t\tif (!tagType) {\n\t\t\t\t//console.log('Invalid Exif data: Invalid tag type.')\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttagSize = tagType.size * length;\n\t\t\t// Determine if the value is contained in the dataOffset bytes,\n\t\t\t// or if the value at the dataOffset is a pointer to the actual data:\n\t\t\tdataOffset = tagSize > 4 ? tiffOffset + dataView.getUint32(offset + 8, littleEndian) : offset + 8;\n\t\t\tif (dataOffset + tagSize > dataView.byteLength) {\n\t\t\t\t//console.log('Invalid Exif data: Invalid data offset.')\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (length === 1) {\n\t\t\t\treturn tagType.getValue(dataView, dataOffset, littleEndian);\n\t\t\t}\n\t\t\tvalues = [];\n\t\t\tfor (i = 0; i < length; i += 1) {\n\t\t\t\tvalues[i] = tagType.getValue(dataView, dataOffset + i * tagType.size, littleEndian);\n\t\t\t}\n\t\t\tif (tagType.ascii) {\n\t\t\t\tstr = '';\n\t\t\t\t// Concatenate the chars:\n\t\t\t\tfor (i = 0; i < values.length; i += 1) {\n\t\t\t\t\tc = values[i];\n\t\t\t\t\t// Ignore the terminating NULL byte(s):\n\t\t\t\t\tif (c === \"\\0\") {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t}\n\t\t\treturn values;\n\t\t};\n\n\t\tloadImage.parseExifTag = function (dataView, tiffOffset, offset, littleEndian, data) {\n\t\t\tvar tag = dataView.getUint16(offset, littleEndian);\n\t\t\tdata.exif[tag] = loadImage.getExifValue(dataView, tiffOffset, offset, dataView.getUint16(offset + 2, littleEndian), // tag type\n\t\t\tdataView.getUint32(offset + 4, littleEndian), // tag length\n\t\t\tlittleEndian);\n\t\t};\n\n\t\tloadImage.parseExifTags = function (dataView, tiffOffset, dirOffset, littleEndian, data) {\n\t\t\tvar tagsNumber, dirEndOffset, i;\n\t\t\tif (dirOffset + 6 > dataView.byteLength) {\n\t\t\t\t//console.log('Invalid Exif data: Invalid directory offset.')\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttagsNumber = dataView.getUint16(dirOffset, littleEndian);\n\t\t\tdirEndOffset = dirOffset + 2 + 12 * tagsNumber;\n\t\t\tif (dirEndOffset + 4 > dataView.byteLength) {\n\t\t\t\t//console.log('Invalid Exif data: Invalid directory size.')\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (i = 0; i < tagsNumber; i += 1) {\n\t\t\t\tthis.parseExifTag(dataView, tiffOffset, dirOffset + 2 + 12 * i, // tag offset\n\t\t\t\tlittleEndian, data);\n\t\t\t}\n\t\t\t// Return the offset to the next directory:\n\t\t\treturn dataView.getUint32(dirEndOffset, littleEndian);\n\t\t};\n\n\t\tloadImage.parseExifData = function (dataView, offset, length, data, options) {\n\t\t\tif (options.disableExif) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar tiffOffset = offset + 10;\n\t\t\tvar littleEndian;\n\t\t\tvar dirOffset;\n\t\t\tvar thumbnailData;\n\t\t\t// Check for the ASCII code for \"Exif\" (0x45786966):\n\t\t\tif (dataView.getUint32(offset + 4) !== 0x45786966) {\n\t\t\t\t// No Exif data, might be XMP data instead\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (tiffOffset + 8 > dataView.byteLength) {\n\t\t\t\t//console.log('Invalid Exif data: Invalid segment size.')\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Check for the two null bytes:\n\t\t\tif (dataView.getUint16(offset + 8) !== 0x0000) {\n\t\t\t\t//console.log('Invalid Exif data: Missing byte alignment offset.')\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Check the byte alignment:\n\t\t\tswitch (dataView.getUint16(tiffOffset)) {\n\t\t\t\tcase 0x4949:\n\t\t\t\t\tlittleEndian = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x4D4D:\n\t\t\t\t\tlittleEndian = false;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//console.log('Invalid Exif data: Invalid byte alignment marker.')\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Check for the TIFF tag marker (0x002A):\n\t\t\tif (dataView.getUint16(tiffOffset + 2, littleEndian) !== 0x002A) {\n\t\t\t\t//console.log('Invalid Exif data: Missing TIFF marker.')\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Retrieve the directory offset bytes, usually 0x00000008 or 8 decimal:\n\t\t\tdirOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\t\t\t// Create the exif object to store the tags:\n\t\t\tdata.exif = new loadImage.ExifMap();\n\t\t\t// Parse the tags of the main image directory and retrieve the\n\t\t\t// offset to the next directory, usually the thumbnail directory:\n\t\t\tdirOffset = loadImage.parseExifTags(dataView, tiffOffset, tiffOffset + dirOffset, littleEndian, data);\n\t\t\tif (dirOffset && !options.disableExifThumbnail) {\n\t\t\t\tthumbnailData = { exif: {} };\n\t\t\t\tdirOffset = loadImage.parseExifTags(dataView, tiffOffset, tiffOffset + dirOffset, littleEndian, thumbnailData);\n\t\t\t\t// Check for JPEG Thumbnail offset:\n\t\t\t\tif (thumbnailData.exif[0x0201]) {\n\t\t\t\t\tdata.exif.Thumbnail = loadImage.getExifThumbnail(dataView, tiffOffset + thumbnailData.exif[0x0201], thumbnailData.exif[0x0202] // Thumbnail data length\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Check for Exif Sub IFD Pointer:\n\t\t\tif (data.exif[0x8769] && !options.disableExifSub) {\n\t\t\t\tloadImage.parseExifTags(dataView, tiffOffset, tiffOffset + data.exif[0x8769], // directory offset\n\t\t\t\tlittleEndian, data);\n\t\t\t}\n\t\t\t// Check for GPS Info IFD Pointer:\n\t\t\tif (data.exif[0x8825] && !options.disableExifGps) {\n\t\t\t\tloadImage.parseExifTags(dataView, tiffOffset, tiffOffset + data.exif[0x8825], // directory offset\n\t\t\t\tlittleEndian, data);\n\t\t\t}\n\t\t};\n\n\t\t// Registers the Exif parser for the APP1 JPEG meta data segment:\n\t\tloadImage.metaDataParsers.jpeg[0xffe1].push(loadImage.parseExifData);\n\t\tvar snabbt = function () {\n\n\t\t\tvar tickRequests = [];\n\t\t\tvar runningAnimations = [];\n\t\t\tvar completedAnimations = [];\n\t\t\tvar transformProperty = 'transform';\n\n\t\t\t// Find which vendor prefix to use\n\t\t\tvar styles = window.getComputedStyle(document.documentElement, '');\n\t\t\tvar vendorPrefix = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];\n\t\t\tif (vendorPrefix === 'webkit') transformProperty = 'webkitTransform';\n\n\t\t\t/* Entry point, only function to be called by user */\n\t\t\tvar snabbt = function snabbt(arg1, arg2, arg3) {\n\n\t\t\t\tvar elements = arg1;\n\n\t\t\t\t// If argument is an Array or a NodeList or other list type that can be iterable.\n\t\t\t\t// Loop through and start one animation for each element.\n\t\t\t\tif (elements.length !== undefined) {\n\t\t\t\t\tvar aggregateChainer = {\n\t\t\t\t\t\tchainers: [],\n\t\t\t\t\t\tthen: function then(opts) {\n\t\t\t\t\t\t\treturn this.snabbt(opts);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsnabbt: function snabbt(opts) {\n\t\t\t\t\t\t\tvar len = this.chainers.length;\n\t\t\t\t\t\t\tthis.chainers.forEach(function (chainer, index) {\n\t\t\t\t\t\t\t\tchainer.snabbt(preprocessOptions(opts, index, len));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn aggregateChainer;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetValue: function setValue(value) {\n\t\t\t\t\t\t\tthis.chainers.forEach(function (chainer) {\n\t\t\t\t\t\t\t\tchainer.setValue(value);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn aggregateChainer;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfinish: function finish() {\n\t\t\t\t\t\t\tthis.chainers.forEach(function (chainer) {\n\t\t\t\t\t\t\t\tchainer.finish();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn aggregateChainer;\n\t\t\t\t\t\t},\n\t\t\t\t\t\trollback: function rollback() {\n\t\t\t\t\t\t\tthis.chainers.forEach(function (chainer) {\n\t\t\t\t\t\t\t\tchainer.rollback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn aggregateChainer;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (var i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\t\t\tif (typeof arg2 == 'string') aggregateChainer.chainers.push(snabbtSingleElement(elements[i], arg2, preprocessOptions(arg3, i, len)));else aggregateChainer.chainers.push(snabbtSingleElement(elements[i], preprocessOptions(arg2, i, len), arg3));\n\t\t\t\t\t}\n\t\t\t\t\treturn aggregateChainer;\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof arg2 == 'string') return snabbtSingleElement(elements, arg2, preprocessOptions(arg3, 0, 1));else return snabbtSingleElement(elements, preprocessOptions(arg2, 0, 1), arg3);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar preprocessOptions = function preprocessOptions(options, index, len) {\n\t\t\t\tif (!options) return options;\n\t\t\t\tvar clone = cloneObject(options);\n\n\t\t\t\tif (isFunction(options.delay)) {\n\t\t\t\t\tclone.delay = options.delay(index, len);\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(options.callback)) {\n\t\t\t\t\tclone.complete = function () {\n\t\t\t\t\t\toptions.callback.call(this, index, len);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tvar hasAllDoneCallback = isFunction(options.allDone);\n\t\t\t\tvar hasCompleteCallback = isFunction(options.complete);\n\n\t\t\t\tif (hasCompleteCallback || hasAllDoneCallback) {\n\t\t\t\t\tclone.complete = function () {\n\t\t\t\t\t\tif (hasCompleteCallback) {\n\t\t\t\t\t\t\toptions.complete.call(this, index, len);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (hasAllDoneCallback && index == len - 1) {\n\t\t\t\t\t\t\toptions.allDone();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (isFunction(options.valueFeeder)) {\n\t\t\t\t\tclone.valueFeeder = function (i, matrix) {\n\t\t\t\t\t\treturn options.valueFeeder(i, matrix, index, len);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (isFunction(options.easing)) {\n\t\t\t\t\tclone.easing = function (i) {\n\t\t\t\t\t\treturn options.easing(i, index, len);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tvar properties = ['position', 'rotation', 'skew', 'rotationPost', 'scale', 'width', 'height', 'opacity', 'fromPosition', 'fromRotation', 'fromSkew', 'fromRotationPost', 'fromScale', 'fromWidth', 'fromHeight', 'fromOpacity', 'transformOrigin', 'duration', 'delay'];\n\n\t\t\t\tproperties.forEach(function (property) {\n\t\t\t\t\tif (isFunction(options[property])) {\n\t\t\t\t\t\tclone[property] = options[property](index, len);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn clone;\n\t\t\t};\n\n\t\t\tvar snabbtSingleElement = function snabbtSingleElement(element, arg2, arg3) {\n\n\t\t\t\tif (arg2 === 'attention') {\n\t\t\t\t\treturn setupAttentionAnimation(element, arg3);\n\t\t\t\t}\n\n\t\t\t\tif (arg2 === 'stop') {\n\t\t\t\t\treturn stopAnimation(element);\n\t\t\t\t}\n\n\t\t\t\tif (arg2 === 'detach') {\n\t\t\t\t\treturn detachChildren(element);\n\t\t\t\t}\n\n\t\t\t\tvar options = arg2;\n\n\t\t\t\t// Remove orphaned end states\n\t\t\t\tclearOphanedEndStates();\n\n\t\t\t\t// If there is a running or past completed animation with element, use that end state as start state\n\t\t\t\tvar currentState = currentAnimationState(element);\n\t\t\t\tvar start = currentState;\n\t\t\t\t// from has precendance over current animation state\n\t\t\t\tstart = stateFromOptions(options, start, true);\n\t\t\t\tvar end = cloneObject(currentState);\n\t\t\t\tend = stateFromOptions(options, end);\n\n\t\t\t\tvar animOptions = setupAnimationOptions(start, end, options);\n\t\t\t\tvar animation = createAnimation(animOptions);\n\n\t\t\t\trunningAnimations.push([element, animation]);\n\n\t\t\t\tanimation.updateElement(element, true);\n\t\t\t\tvar queue = [];\n\t\t\t\tvar chainer = {\n\t\t\t\t\tsnabbt: function snabbt(opts) {\n\t\t\t\t\t\tqueue.unshift(preprocessOptions(opts, 0, 1));\n\t\t\t\t\t\treturn chainer;\n\t\t\t\t\t},\n\t\t\t\t\tthen: function then(opts) {\n\t\t\t\t\t\treturn this.snabbt(opts);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfunction tick(time) {\n\t\t\t\t\tanimation.tick(time);\n\t\t\t\t\tanimation.updateElement(element);\n\t\t\t\t\tif (animation.isStopped()) return;\n\n\t\t\t\t\tif (!animation.completed()) return queueTick(tick);\n\n\t\t\t\t\tif (options.loop > 1 && !animation.isStopped()) {\n\t\t\t\t\t\t// Loop current animation\n\t\t\t\t\t\toptions.loop -= 1;\n\t\t\t\t\t\tanimation.restart();\n\t\t\t\t\t\tqueueTick(tick);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (options.complete) {\n\t\t\t\t\t\t\toptions.complete.call(element);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Start next animation in queue\n\t\t\t\t\t\tif (queue.length) {\n\t\t\t\t\t\t\toptions = queue.pop();\n\n\t\t\t\t\t\t\tstart = stateFromOptions(options, end, true);\n\t\t\t\t\t\t\tend = stateFromOptions(options, cloneObject(end));\n\t\t\t\t\t\t\toptions = setupAnimationOptions(start, end, options);\n\n\t\t\t\t\t\t\tanimation = createAnimation(options);\n\t\t\t\t\t\t\trunningAnimations.push([element, animation]);\n\n\t\t\t\t\t\t\tanimation.tick(time);\n\t\t\t\t\t\t\tqueueTick(tick);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tqueueTick(tick);\n\t\t\t\t// Manual animations are not chainable, instead an animation controller object is returned\n\t\t\t\t// with setValue, finish and rollback methods\n\t\t\t\tif (options.manual) return animation;\n\t\t\t\treturn chainer;\n\t\t\t};\n\n\t\t\tvar setupAttentionAnimation = function setupAttentionAnimation(element, options) {\n\t\t\t\tvar movement = stateFromOptions(options, createState({}));\n\t\t\t\toptions.movement = movement;\n\t\t\t\tvar animation = createAttentionAnimation(options);\n\n\t\t\t\trunningAnimations.push([element, animation]);\n\t\t\t\tfunction tick(time) {\n\t\t\t\t\tanimation.tick(time);\n\t\t\t\t\tanimation.updateElement(element);\n\t\t\t\t\tif (!animation.completed()) {\n\t\t\t\t\t\tqueueTick(tick);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (options.callback) {\n\t\t\t\t\t\t\toptions.callback(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (options.loop && options.loop > 1) {\n\t\t\t\t\t\t\toptions.loop--;\n\t\t\t\t\t\t\tanimation.restart();\n\t\t\t\t\t\t\tqueueTick(tick);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tqueueTick(tick);\n\t\t\t};\n\n\t\t\tvar stopAnimation = function stopAnimation(element) {\n\t\t\t\tfor (var i = 0, len = runningAnimations.length; i < len; ++i) {\n\t\t\t\t\tvar currentAnimation = runningAnimations[i];\n\t\t\t\t\tvar animatedElement = currentAnimation[0];\n\t\t\t\t\tvar animation = currentAnimation[1];\n\n\t\t\t\t\tif (animatedElement === element) {\n\t\t\t\t\t\tanimation.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar indexOfElement = function indexOfElement(arr, element) {\n\t\t\t\tfor (var i = 0, len = arr.length; i < len; ++i) {\n\t\t\t\t\tif (arr[i][0] === element) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t};\n\n\t\t\tvar detachChildren = function detachChildren(element) {\n\n\t\t\t\tvar elements = [];\n\t\t\t\tvar animations = runningAnimations.concat(completedAnimations);\n\t\t\t\tvar el;\n\t\t\t\tvar i;\n\t\t\t\tvar len = animations.length;\n\n\t\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\t\tel = animations[i][0];\n\t\t\t\t\tif (element.contains(el) || element === el) {\n\t\t\t\t\t\telements.push(el);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlen = elements.length;\n\t\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\t\tdetachElement(elements[i]);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar detachElement = function detachElement(element) {\n\n\t\t\t\t// stop animations\n\t\t\t\tstopAnimation(element);\n\n\t\t\t\t// remove\n\t\t\t\tvar index = indexOfElement(runningAnimations, element);\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\trunningAnimations.splice(index, 1);\n\t\t\t\t}\n\n\t\t\t\tindex = indexOfElement(completedAnimations, element);\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tcompletedAnimations.splice(index, 1);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar findAnimationState = function findAnimationState(animationList, element) {\n\t\t\t\tfor (var i = 0, len = animationList.length; i < len; ++i) {\n\t\t\t\t\tvar currentAnimation = animationList[i];\n\t\t\t\t\tvar animatedElement = currentAnimation[0];\n\t\t\t\t\tvar animation = currentAnimation[1];\n\n\t\t\t\t\tif (animatedElement === element) {\n\t\t\t\t\t\tvar state = animation.getCurrentState();\n\t\t\t\t\t\tanimation.stop();\n\t\t\t\t\t\treturn state;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar clearOphanedEndStates = function clearOphanedEndStates() {\n\t\t\t\tcompletedAnimations = completedAnimations.filter(function (animation) {\n\t\t\t\t\treturn findUltimateAncestor(animation[0]).body;\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar findUltimateAncestor = function findUltimateAncestor(node) {\n\t\t\t\tvar ancestor = node;\n\t\t\t\twhile (ancestor.parentNode) {\n\t\t\t\t\tancestor = ancestor.parentNode;\n\t\t\t\t}\n\t\t\t\treturn ancestor;\n\t\t\t};\n\n\t\t\t/**\r\n   * Returns the current state of element if there is an ongoing or previously finished\r\n   * animation releated to it. Will also call stop on the animation.\r\n   * TODO: The stopping of the animation is better put somewhere else\r\n   */\n\t\t\tvar currentAnimationState = function currentAnimationState(element) {\n\t\t\t\t// Check if a completed animation is stored for this element\n\t\t\t\tvar state = findAnimationState(runningAnimations, element);\n\t\t\t\tif (state) return state;\n\n\t\t\t\treturn findAnimationState(completedAnimations, element);\n\t\t\t};\n\n\t\t\t/**\r\n   * Parses an animation configuration object and returns a State instance\r\n   */\n\t\t\tvar stateFromOptions = function stateFromOptions(options, state, useFromPrefix) {\n\t\t\t\tif (!state) {\n\t\t\t\t\tstate = createState({\n\t\t\t\t\t\tposition: [0, 0, 0],\n\t\t\t\t\t\trotation: [0, 0, 0],\n\t\t\t\t\t\trotationPost: [0, 0, 0],\n\t\t\t\t\t\tscale: [1, 1],\n\t\t\t\t\t\tskew: [0, 0]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tvar position = 'position';\n\t\t\t\tvar rotation = 'rotation';\n\t\t\t\tvar skew = 'skew';\n\t\t\t\tvar rotationPost = 'rotationPost';\n\t\t\t\tvar scale = 'scale';\n\t\t\t\tvar scalePost = 'scalePost';\n\t\t\t\tvar width = 'width';\n\t\t\t\tvar height = 'height';\n\t\t\t\tvar opacity = 'opacity';\n\n\t\t\t\tif (useFromPrefix) {\n\t\t\t\t\tposition = 'fromPosition';\n\t\t\t\t\trotation = 'fromRotation';\n\t\t\t\t\tskew = 'fromSkew';\n\t\t\t\t\trotationPost = 'fromRotationPost';\n\t\t\t\t\tscale = 'fromScale';\n\t\t\t\t\tscalePost = 'fromScalePost';\n\t\t\t\t\twidth = 'fromWidth';\n\t\t\t\t\theight = 'fromHeight';\n\t\t\t\t\topacity = 'fromOpacity';\n\t\t\t\t}\n\n\t\t\t\tstate.position = optionOrDefault(options[position], state.position);\n\t\t\t\tstate.rotation = optionOrDefault(options[rotation], state.rotation);\n\t\t\t\tstate.rotationPost = optionOrDefault(options[rotationPost], state.rotationPost);\n\t\t\t\tstate.skew = optionOrDefault(options[skew], state.skew);\n\t\t\t\tstate.scale = optionOrDefault(options[scale], state.scale);\n\t\t\t\tstate.scalePost = optionOrDefault(options[scalePost], state.scalePost);\n\t\t\t\tstate.opacity = options[opacity];\n\t\t\t\tstate.width = options[width];\n\t\t\t\tstate.height = options[height];\n\n\t\t\t\treturn state;\n\t\t\t};\n\n\t\t\tvar setupAnimationOptions = function setupAnimationOptions(start, end, options) {\n\t\t\t\toptions.startState = start;\n\t\t\t\toptions.endState = end;\n\t\t\t\treturn options;\n\t\t\t};\n\n\t\t\tvar polyFillrAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n\t\t\t\treturn setTimeout(callback, 1000 / 60);\n\t\t\t};\n\n\t\t\tvar queueTick = function queueTick(func) {\n\t\t\t\tif (tickRequests.length === 0) polyFillrAF(tickAnimations);\n\t\t\t\ttickRequests.push(func);\n\t\t\t};\n\n\t\t\tvar tickAnimations = function tickAnimations(time) {\n\t\t\t\tvar len = tickRequests.length;\n\t\t\t\tfor (var i = 0; i < len; ++i) {\n\t\t\t\t\ttickRequests[i](time);\n\t\t\t\t}\n\t\t\t\ttickRequests.splice(0, len);\n\n\t\t\t\tvar finishedAnimations = runningAnimations.filter(function (animation) {\n\t\t\t\t\treturn animation[1].completed();\n\t\t\t\t});\n\n\t\t\t\t// See if there are any previously completed animations on the same element, if so, remove it before merging\n\t\t\t\tcompletedAnimations = completedAnimations.filter(function (animation) {\n\t\t\t\t\tfor (var i = 0, len = finishedAnimations.length; i < len; ++i) {\n\t\t\t\t\t\tif (animation[0] === finishedAnimations[i][0]) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\tcompletedAnimations = completedAnimations.concat(finishedAnimations);\n\n\t\t\t\trunningAnimations = runningAnimations.filter(function (animation) {\n\t\t\t\t\treturn !animation[1].completed();\n\t\t\t\t});\n\n\t\t\t\tif (tickRequests.length !== 0) polyFillrAF(tickAnimations);\n\t\t\t};\n\n\t\t\t// Class for handling animation between two states\n\t\t\tvar createAnimation = function createAnimation(options) {\n\t\t\t\tvar startState = options.startState;\n\t\t\t\tvar endState = options.endState;\n\t\t\t\tvar duration = optionOrDefault(options.duration, 500);\n\t\t\t\tvar delay = optionOrDefault(options.delay, 0);\n\t\t\t\tvar perspective = options.perspective;\n\t\t\t\tvar easing = createEaser(optionOrDefault(options.easing, 'linear'), options);\n\t\t\t\tvar currentState = duration === 0 ? endState.clone() : startState.clone();\n\t\t\t\tvar transformOrigin = options.transformOrigin;\n\t\t\t\tcurrentState.transformOrigin = options.transformOrigin;\n\n\t\t\t\tvar startTime = 0;\n\t\t\t\tvar currentTime = 0;\n\t\t\t\tvar stopped = false;\n\t\t\t\tvar started = false;\n\n\t\t\t\t// Manual related\n\t\t\t\tvar manual = options.manual;\n\t\t\t\tvar manualValue = 0;\n\t\t\t\tvar manualDelayFactor = delay / duration;\n\t\t\t\tvar manualCallback;\n\n\t\t\t\tvar tweener;\n\t\t\t\t// Setup tweener\n\t\t\t\tif (options.valueFeeder) {\n\t\t\t\t\ttweener = createValueFeederTweener(options.valueFeeder, startState, endState, currentState);\n\t\t\t\t} else {\n\t\t\t\t\ttweener = createStateTweener(startState, endState, currentState);\n\t\t\t\t}\n\n\t\t\t\t// Public api\n\t\t\t\treturn {\n\t\t\t\t\tstop: function stop() {\n\t\t\t\t\t\tstopped = true;\n\t\t\t\t\t},\n\t\t\t\t\tisStopped: function isStopped() {\n\t\t\t\t\t\treturn stopped;\n\t\t\t\t\t},\n\n\t\t\t\t\tfinish: function finish(callback) {\n\t\t\t\t\t\tmanual = false;\n\t\t\t\t\t\tvar manualDuration = duration * manualValue;\n\t\t\t\t\t\tstartTime = currentTime - manualDuration;\n\t\t\t\t\t\tmanualCallback = callback;\n\t\t\t\t\t\teasing.resetFrom = manualValue;\n\t\t\t\t\t},\n\n\t\t\t\t\trollback: function rollback(callback) {\n\t\t\t\t\t\tmanual = false;\n\t\t\t\t\t\ttweener.setReverse();\n\t\t\t\t\t\tvar manualDuration = duration * (1 - manualValue);\n\t\t\t\t\t\tstartTime = currentTime - manualDuration;\n\t\t\t\t\t\tmanualCallback = callback;\n\t\t\t\t\t\teasing.resetFrom = manualValue;\n\t\t\t\t\t},\n\n\t\t\t\t\trestart: function restart() {\n\t\t\t\t\t\t// Restart timer\n\t\t\t\t\t\tstartTime = undefined;\n\t\t\t\t\t\teasing.resetFrom(0);\n\t\t\t\t\t},\n\n\t\t\t\t\ttick: function tick(time) {\n\t\t\t\t\t\tif (stopped) return;\n\n\t\t\t\t\t\tif (manual) {\n\t\t\t\t\t\t\tcurrentTime = time;\n\t\t\t\t\t\t\tthis.updateCurrentTransform();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If first tick, set startTime\n\t\t\t\t\t\tif (!startTime) {\n\t\t\t\t\t\t\tstartTime = time;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (time - startTime > delay) {\n\t\t\t\t\t\t\tstarted = true;\n\t\t\t\t\t\t\tcurrentTime = time - delay;\n\n\t\t\t\t\t\t\tvar curr = Math.min(Math.max(0.0, currentTime - startTime), duration);\n\t\t\t\t\t\t\teasing.tick(curr / duration);\n\t\t\t\t\t\t\tthis.updateCurrentTransform();\n\t\t\t\t\t\t\tif (this.completed() && manualCallback) {\n\t\t\t\t\t\t\t\tmanualCallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tgetCurrentState: function getCurrentState() {\n\t\t\t\t\t\treturn currentState;\n\t\t\t\t\t},\n\n\t\t\t\t\tsetValue: function setValue(_manualValue) {\n\t\t\t\t\t\tstarted = true;\n\t\t\t\t\t\tmanualValue = Math.min(Math.max(_manualValue, 0.0001), 1 + manualDelayFactor);\n\t\t\t\t\t},\n\n\t\t\t\t\tupdateCurrentTransform: function updateCurrentTransform() {\n\t\t\t\t\t\tvar tweenValue = easing.getValue();\n\t\t\t\t\t\tif (manual) {\n\t\t\t\t\t\t\tvar val = Math.max(0.00001, manualValue - manualDelayFactor);\n\t\t\t\t\t\t\teasing.tick(val);\n\t\t\t\t\t\t\ttweenValue = easing.getValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttweener.tween(tweenValue);\n\t\t\t\t\t},\n\n\t\t\t\t\tcompleted: function completed() {\n\t\t\t\t\t\tif (stopped) return true;\n\t\t\t\t\t\tif (startTime === 0) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn easing.completed();\n\t\t\t\t\t},\n\n\t\t\t\t\tupdateElement: function updateElement(element, forceUpdate) {\n\t\t\t\t\t\tif (!started && !forceUpdate) return;\n\t\t\t\t\t\tvar matrix = tweener.asMatrix();\n\t\t\t\t\t\tvar properties = tweener.getProperties();\n\t\t\t\t\t\tupdateElementTransform(element, matrix, perspective);\n\t\t\t\t\t\tupdateElementProperties(element, properties);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t// ------------------------------\n\t\t\t// End Time animation\n\t\t\t// ------------------------------\n\n\t\t\t// ------------------------\n\t\t\t// -- AttentionAnimation --\n\t\t\t// ------------------------\n\n\t\t\tvar createAttentionAnimation = function createAttentionAnimation(options) {\n\t\t\t\tvar movement = options.movement;\n\t\t\t\toptions.initialVelocity = 0.1;\n\t\t\t\toptions.equilibriumPosition = 0;\n\t\t\t\tvar spring = createSpringEasing(options);\n\t\t\t\tvar stopped = false;\n\t\t\t\tvar tweenPosition = movement.position;\n\t\t\t\tvar tweenRotation = movement.rotation;\n\t\t\t\tvar tweenRotationPost = movement.rotationPost;\n\t\t\t\tvar tweenScale = movement.scale;\n\t\t\t\tvar tweenSkew = movement.skew;\n\n\t\t\t\tvar currentMovement = createState({\n\t\t\t\t\tposition: tweenPosition ? [0, 0, 0] : undefined,\n\t\t\t\t\trotation: tweenRotation ? [0, 0, 0] : undefined,\n\t\t\t\t\trotationPost: tweenRotationPost ? [0, 0, 0] : undefined,\n\t\t\t\t\tscale: tweenScale ? [0, 0] : undefined,\n\t\t\t\t\tskew: tweenSkew ? [0, 0] : undefined\n\t\t\t\t});\n\n\t\t\t\t// Public API\n\t\t\t\treturn {\n\t\t\t\t\tstop: function stop() {\n\t\t\t\t\t\tstopped = true;\n\t\t\t\t\t},\n\n\t\t\t\t\tisStopped: function isStopped(time) {\n\t\t\t\t\t\treturn stopped;\n\t\t\t\t\t},\n\n\t\t\t\t\ttick: function tick(time) {\n\t\t\t\t\t\tif (stopped) return;\n\t\t\t\t\t\tif (spring.equilibrium) return;\n\t\t\t\t\t\tspring.tick();\n\n\t\t\t\t\t\tthis.updateMovement();\n\t\t\t\t\t},\n\n\t\t\t\t\tupdateMovement: function updateMovement() {\n\t\t\t\t\t\tvar value = spring.getValue();\n\t\t\t\t\t\tif (tweenPosition) {\n\t\t\t\t\t\t\tcurrentMovement.position[0] = movement.position[0] * value;\n\t\t\t\t\t\t\tcurrentMovement.position[1] = movement.position[1] * value;\n\t\t\t\t\t\t\tcurrentMovement.position[2] = movement.position[2] * value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tweenRotation) {\n\t\t\t\t\t\t\tcurrentMovement.rotation[0] = movement.rotation[0] * value;\n\t\t\t\t\t\t\tcurrentMovement.rotation[1] = movement.rotation[1] * value;\n\t\t\t\t\t\t\tcurrentMovement.rotation[2] = movement.rotation[2] * value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tweenRotationPost) {\n\t\t\t\t\t\t\tcurrentMovement.rotationPost[0] = movement.rotationPost[0] * value;\n\t\t\t\t\t\t\tcurrentMovement.rotationPost[1] = movement.rotationPost[1] * value;\n\t\t\t\t\t\t\tcurrentMovement.rotationPost[2] = movement.rotationPost[2] * value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tweenScale) {\n\t\t\t\t\t\t\tcurrentMovement.scale[0] = 1 + movement.scale[0] * value;\n\t\t\t\t\t\t\tcurrentMovement.scale[1] = 1 + movement.scale[1] * value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tweenSkew) {\n\t\t\t\t\t\t\tcurrentMovement.skew[0] = movement.skew[0] * value;\n\t\t\t\t\t\t\tcurrentMovement.skew[1] = movement.skew[1] * value;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tupdateElement: function updateElement(element) {\n\t\t\t\t\t\tupdateElementTransform(element, currentMovement.asMatrix());\n\t\t\t\t\t\tupdateElementProperties(element, currentMovement.getProperties());\n\t\t\t\t\t},\n\n\t\t\t\t\tgetCurrentState: function getCurrentState() {\n\t\t\t\t\t\treturn currentMovement;\n\t\t\t\t\t},\n\n\t\t\t\t\tcompleted: function completed() {\n\t\t\t\t\t\treturn spring.equilibrium || stopped;\n\t\t\t\t\t},\n\n\t\t\t\t\trestart: function restart() {\n\t\t\t\t\t\t// Restart spring\n\t\t\t\t\t\tspring = createSpringEasing(options);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t/**********\r\n   * Easings *\r\n   ***********/\n\n\t\t\tvar linearEasing = function linearEasing(value) {\n\t\t\t\treturn value;\n\t\t\t};\n\n\t\t\tvar ease = function ease(value) {\n\t\t\t\treturn (Math.cos(value * Math.PI + Math.PI) + 1) / 2;\n\t\t\t};\n\n\t\t\tvar easeIn = function easeIn(value) {\n\t\t\t\treturn value * value;\n\t\t\t};\n\n\t\t\tvar easeOut = function easeOut(value) {\n\t\t\t\treturn -Math.pow(value - 1, 2) + 1;\n\t\t\t};\n\n\t\t\tvar createSpringEasing = function createSpringEasing(options) {\n\t\t\t\tvar position = optionOrDefault(options.startPosition, 0);\n\t\t\t\tvar equilibriumPosition = optionOrDefault(options.equilibriumPosition, 1);\n\t\t\t\tvar velocity = optionOrDefault(options.initialVelocity, 0);\n\t\t\t\tvar springConstant = optionOrDefault(options.springConstant, 0.8);\n\t\t\t\tvar deceleration = optionOrDefault(options.springDeceleration, 0.9);\n\t\t\t\tvar mass = optionOrDefault(options.springMass, 10);\n\n\t\t\t\tvar equilibrium = false;\n\n\t\t\t\t// Public API\n\t\t\t\treturn {\n\n\t\t\t\t\ttick: function tick(value) {\n\t\t\t\t\t\tif (value === 0.0) return;\n\t\t\t\t\t\tif (equilibrium) return;\n\t\t\t\t\t\tvar springForce = -(position - equilibriumPosition) * springConstant;\n\t\t\t\t\t\t// f = m * a\n\t\t\t\t\t\t// a = f / m\n\t\t\t\t\t\tvar a = springForce / mass;\n\t\t\t\t\t\t// s = v * t\n\t\t\t\t\t\t// t = 1 ( for now )\n\t\t\t\t\t\tvelocity += a;\n\t\t\t\t\t\tposition += velocity;\n\n\t\t\t\t\t\t// Deceleration\n\t\t\t\t\t\tvelocity *= deceleration;\n\n\t\t\t\t\t\tif (Math.abs(position - equilibriumPosition) < 0.001 && Math.abs(velocity) < 0.001) {\n\t\t\t\t\t\t\tequilibrium = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tresetFrom: function resetFrom(value) {\n\t\t\t\t\t\tposition = value;\n\t\t\t\t\t\tvelocity = 0;\n\t\t\t\t\t},\n\n\t\t\t\t\tgetValue: function getValue() {\n\t\t\t\t\t\tif (equilibrium) return equilibriumPosition;\n\t\t\t\t\t\treturn position;\n\t\t\t\t\t},\n\n\t\t\t\t\tcompleted: function completed() {\n\t\t\t\t\t\treturn equilibrium;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tvar EASING_FUNCS = {\n\t\t\t\t'linear': linearEasing,\n\t\t\t\t'ease': ease,\n\t\t\t\t'easeIn': easeIn,\n\t\t\t\t'easeOut': easeOut\n\t\t\t};\n\n\t\t\tvar createEaser = function createEaser(easerName, options) {\n\t\t\t\tif (easerName == 'spring') {\n\t\t\t\t\treturn createSpringEasing(options);\n\t\t\t\t}\n\t\t\t\tvar easeFunction = easerName;\n\t\t\t\tif (!isFunction(easerName)) {\n\t\t\t\t\teaseFunction = EASING_FUNCS[easerName];\n\t\t\t\t}\n\n\t\t\t\tvar easer = easeFunction;\n\t\t\t\tvar value = 0;\n\t\t\t\tvar lastValue;\n\n\t\t\t\t// Public API\n\t\t\t\treturn {\n\t\t\t\t\ttick: function tick(v) {\n\t\t\t\t\t\tvalue = easer(v);\n\t\t\t\t\t\tlastValue = v;\n\t\t\t\t\t},\n\n\t\t\t\t\tresetFrom: function resetFrom(value) {\n\t\t\t\t\t\tlastValue = 0;\n\t\t\t\t\t},\n\n\t\t\t\t\tgetValue: function getValue() {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t},\n\n\t\t\t\t\tcompleted: function completed() {\n\t\t\t\t\t\tif (lastValue >= 1) {\n\t\t\t\t\t\t\treturn lastValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t/***\r\n   * Matrix related\r\n   */\n\n\t\t\tvar assignTranslate = function assignTranslate(matrix, x, y, z) {\n\t\t\t\tmatrix[0] = 1;\n\t\t\t\tmatrix[1] = 0;\n\t\t\t\tmatrix[2] = 0;\n\t\t\t\tmatrix[3] = 0;\n\t\t\t\tmatrix[4] = 0;\n\t\t\t\tmatrix[5] = 1;\n\t\t\t\tmatrix[6] = 0;\n\t\t\t\tmatrix[7] = 0;\n\t\t\t\tmatrix[8] = 0;\n\t\t\t\tmatrix[9] = 0;\n\t\t\t\tmatrix[10] = 1;\n\t\t\t\tmatrix[11] = 0;\n\t\t\t\tmatrix[12] = x;\n\t\t\t\tmatrix[13] = y;\n\t\t\t\tmatrix[14] = z;\n\t\t\t\tmatrix[15] = 1;\n\t\t\t};\n\n\t\t\tvar assignRotateX = function assignRotateX(matrix, rad) {\n\t\t\t\tmatrix[0] = 1;\n\t\t\t\tmatrix[1] = 0;\n\t\t\t\tmatrix[2] = 0;\n\t\t\t\tmatrix[3] = 0;\n\t\t\t\tmatrix[4] = 0;\n\t\t\t\tmatrix[5] = Math.cos(rad);\n\t\t\t\tmatrix[6] = -Math.sin(rad);\n\t\t\t\tmatrix[7] = 0;\n\t\t\t\tmatrix[8] = 0;\n\t\t\t\tmatrix[9] = Math.sin(rad);\n\t\t\t\tmatrix[10] = Math.cos(rad);\n\t\t\t\tmatrix[11] = 0;\n\t\t\t\tmatrix[12] = 0;\n\t\t\t\tmatrix[13] = 0;\n\t\t\t\tmatrix[14] = 0;\n\t\t\t\tmatrix[15] = 1;\n\t\t\t};\n\n\t\t\tvar assignRotateY = function assignRotateY(matrix, rad) {\n\t\t\t\tmatrix[0] = Math.cos(rad);\n\t\t\t\tmatrix[1] = 0;\n\t\t\t\tmatrix[2] = Math.sin(rad);\n\t\t\t\tmatrix[3] = 0;\n\t\t\t\tmatrix[4] = 0;\n\t\t\t\tmatrix[5] = 1;\n\t\t\t\tmatrix[6] = 0;\n\t\t\t\tmatrix[7] = 0;\n\t\t\t\tmatrix[8] = -Math.sin(rad);\n\t\t\t\tmatrix[9] = 0;\n\t\t\t\tmatrix[10] = Math.cos(rad);\n\t\t\t\tmatrix[11] = 0;\n\t\t\t\tmatrix[12] = 0;\n\t\t\t\tmatrix[13] = 0;\n\t\t\t\tmatrix[14] = 0;\n\t\t\t\tmatrix[15] = 1;\n\t\t\t};\n\n\t\t\tvar assignRotateZ = function assignRotateZ(matrix, rad) {\n\t\t\t\tmatrix[0] = Math.cos(rad);\n\t\t\t\tmatrix[1] = -Math.sin(rad);\n\t\t\t\tmatrix[2] = 0;\n\t\t\t\tmatrix[3] = 0;\n\t\t\t\tmatrix[4] = Math.sin(rad);\n\t\t\t\tmatrix[5] = Math.cos(rad);\n\t\t\t\tmatrix[6] = 0;\n\t\t\t\tmatrix[7] = 0;\n\t\t\t\tmatrix[8] = 0;\n\t\t\t\tmatrix[9] = 0;\n\t\t\t\tmatrix[10] = 1;\n\t\t\t\tmatrix[11] = 0;\n\t\t\t\tmatrix[12] = 0;\n\t\t\t\tmatrix[13] = 0;\n\t\t\t\tmatrix[14] = 0;\n\t\t\t\tmatrix[15] = 1;\n\t\t\t};\n\n\t\t\tvar assignSkew = function assignSkew(matrix, ax, ay) {\n\t\t\t\tmatrix[0] = 1;\n\t\t\t\tmatrix[1] = Math.tan(ax);\n\t\t\t\tmatrix[2] = 0;\n\t\t\t\tmatrix[3] = 0;\n\t\t\t\tmatrix[4] = Math.tan(ay);\n\t\t\t\tmatrix[5] = 1;\n\t\t\t\tmatrix[6] = 0;\n\t\t\t\tmatrix[7] = 0;\n\t\t\t\tmatrix[8] = 0;\n\t\t\t\tmatrix[9] = 0;\n\t\t\t\tmatrix[10] = 1;\n\t\t\t\tmatrix[11] = 0;\n\t\t\t\tmatrix[12] = 0;\n\t\t\t\tmatrix[13] = 0;\n\t\t\t\tmatrix[14] = 0;\n\t\t\t\tmatrix[15] = 1;\n\t\t\t};\n\n\t\t\tvar assignScale = function assignScale(matrix, x, y) {\n\t\t\t\tmatrix[0] = x;\n\t\t\t\tmatrix[1] = 0;\n\t\t\t\tmatrix[2] = 0;\n\t\t\t\tmatrix[3] = 0;\n\t\t\t\tmatrix[4] = 0;\n\t\t\t\tmatrix[5] = y;\n\t\t\t\tmatrix[6] = 0;\n\t\t\t\tmatrix[7] = 0;\n\t\t\t\tmatrix[8] = 0;\n\t\t\t\tmatrix[9] = 0;\n\t\t\t\tmatrix[10] = 1;\n\t\t\t\tmatrix[11] = 0;\n\t\t\t\tmatrix[12] = 0;\n\t\t\t\tmatrix[13] = 0;\n\t\t\t\tmatrix[14] = 0;\n\t\t\t\tmatrix[15] = 1;\n\t\t\t};\n\n\t\t\tvar assignIdentity = function assignIdentity(matrix) {\n\t\t\t\tmatrix[0] = 1;\n\t\t\t\tmatrix[1] = 0;\n\t\t\t\tmatrix[2] = 0;\n\t\t\t\tmatrix[3] = 0;\n\t\t\t\tmatrix[4] = 0;\n\t\t\t\tmatrix[5] = 1;\n\t\t\t\tmatrix[6] = 0;\n\t\t\t\tmatrix[7] = 0;\n\t\t\t\tmatrix[8] = 0;\n\t\t\t\tmatrix[9] = 0;\n\t\t\t\tmatrix[10] = 1;\n\t\t\t\tmatrix[11] = 0;\n\t\t\t\tmatrix[12] = 0;\n\t\t\t\tmatrix[13] = 0;\n\t\t\t\tmatrix[14] = 0;\n\t\t\t\tmatrix[15] = 1;\n\t\t\t};\n\n\t\t\tvar copyArray = function copyArray(a, b) {\n\t\t\t\tb[0] = a[0];\n\t\t\t\tb[1] = a[1];\n\t\t\t\tb[2] = a[2];\n\t\t\t\tb[3] = a[3];\n\t\t\t\tb[4] = a[4];\n\t\t\t\tb[5] = a[5];\n\t\t\t\tb[6] = a[6];\n\t\t\t\tb[7] = a[7];\n\t\t\t\tb[8] = a[8];\n\t\t\t\tb[9] = a[9];\n\t\t\t\tb[10] = a[10];\n\t\t\t\tb[11] = a[11];\n\t\t\t\tb[12] = a[12];\n\t\t\t\tb[13] = a[13];\n\t\t\t\tb[14] = a[14];\n\t\t\t\tb[15] = a[15];\n\t\t\t};\n\n\t\t\tvar createMatrix = function createMatrix() {\n\t\t\t\tvar data = new Float32Array(16);\n\t\t\t\tvar a = new Float32Array(16);\n\t\t\t\tvar b = new Float32Array(16);\n\t\t\t\tassignIdentity(data);\n\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\n\t\t\t\t\tasCSS: function asCSS() {\n\t\t\t\t\t\tvar css = 'matrix3d(';\n\t\t\t\t\t\tfor (var i = 0; i < 15; ++i) {\n\t\t\t\t\t\t\tif (Math.abs(data[i]) < 0.0001) css += '0,';else css += data[i].toFixed(10) + ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Math.abs(data[15]) < 0.0001) css += '0)';else css += data[15].toFixed(10) + ')';\n\t\t\t\t\t\treturn css;\n\t\t\t\t\t},\n\n\t\t\t\t\tclear: function clear() {\n\t\t\t\t\t\tassignIdentity(data);\n\t\t\t\t\t},\n\n\t\t\t\t\ttranslate: function translate(x, y, z) {\n\t\t\t\t\t\tcopyArray(data, a);\n\t\t\t\t\t\tassignTranslate(b, x, y, z);\n\t\t\t\t\t\tassignedMatrixMultiplication(a, b, data);\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\trotateX: function rotateX(radians) {\n\t\t\t\t\t\tcopyArray(data, a);\n\t\t\t\t\t\tassignRotateX(b, radians);\n\t\t\t\t\t\tassignedMatrixMultiplication(a, b, data);\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\trotateY: function rotateY(radians) {\n\t\t\t\t\t\tcopyArray(data, a);\n\t\t\t\t\t\tassignRotateY(b, radians);\n\t\t\t\t\t\tassignedMatrixMultiplication(a, b, data);\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\trotateZ: function rotateZ(radians) {\n\t\t\t\t\t\tcopyArray(data, a);\n\t\t\t\t\t\tassignRotateZ(b, radians);\n\t\t\t\t\t\tassignedMatrixMultiplication(a, b, data);\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\tscale: function scale(x, y) {\n\t\t\t\t\t\tcopyArray(data, a);\n\t\t\t\t\t\tassignScale(b, x, y);\n\t\t\t\t\t\tassignedMatrixMultiplication(a, b, data);\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\tskew: function skew(ax, ay) {\n\t\t\t\t\t\tcopyArray(data, a);\n\t\t\t\t\t\tassignSkew(b, ax, ay);\n\t\t\t\t\t\tassignedMatrixMultiplication(a, b, data);\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tvar assignedMatrixMultiplication = function assignedMatrixMultiplication(a, b, res) {\n\t\t\t\t// Unrolled loop\n\t\t\t\tres[0] = a[0] * b[0] + a[1] * b[4] + a[2] * b[8] + a[3] * b[12];\n\t\t\t\tres[1] = a[0] * b[1] + a[1] * b[5] + a[2] * b[9] + a[3] * b[13];\n\t\t\t\tres[2] = a[0] * b[2] + a[1] * b[6] + a[2] * b[10] + a[3] * b[14];\n\t\t\t\tres[3] = a[0] * b[3] + a[1] * b[7] + a[2] * b[11] + a[3] * b[15];\n\n\t\t\t\tres[4] = a[4] * b[0] + a[5] * b[4] + a[6] * b[8] + a[7] * b[12];\n\t\t\t\tres[5] = a[4] * b[1] + a[5] * b[5] + a[6] * b[9] + a[7] * b[13];\n\t\t\t\tres[6] = a[4] * b[2] + a[5] * b[6] + a[6] * b[10] + a[7] * b[14];\n\t\t\t\tres[7] = a[4] * b[3] + a[5] * b[7] + a[6] * b[11] + a[7] * b[15];\n\n\t\t\t\tres[8] = a[8] * b[0] + a[9] * b[4] + a[10] * b[8] + a[11] * b[12];\n\t\t\t\tres[9] = a[8] * b[1] + a[9] * b[5] + a[10] * b[9] + a[11] * b[13];\n\t\t\t\tres[10] = a[8] * b[2] + a[9] * b[6] + a[10] * b[10] + a[11] * b[14];\n\t\t\t\tres[11] = a[8] * b[3] + a[9] * b[7] + a[10] * b[11] + a[11] * b[15];\n\n\t\t\t\tres[12] = a[12] * b[0] + a[13] * b[4] + a[14] * b[8] + a[15] * b[12];\n\t\t\t\tres[13] = a[12] * b[1] + a[13] * b[5] + a[14] * b[9] + a[15] * b[13];\n\t\t\t\tres[14] = a[12] * b[2] + a[13] * b[6] + a[14] * b[10] + a[15] * b[14];\n\t\t\t\tres[15] = a[12] * b[3] + a[13] * b[7] + a[14] * b[11] + a[15] * b[15];\n\n\t\t\t\treturn res;\n\t\t\t};\n\n\t\t\tvar createState = function createState(config) {\n\t\t\t\t// Caching of matrix and properties so we don't have to create new ones everytime they are needed\n\t\t\t\tvar matrix = createMatrix();\n\t\t\t\tvar properties = {\n\t\t\t\t\topacity: undefined,\n\t\t\t\t\twidth: undefined,\n\t\t\t\t\theight: undefined\n\t\t\t\t};\n\n\t\t\t\t// Public API\n\t\t\t\treturn {\n\t\t\t\t\tposition: config.position,\n\t\t\t\t\trotation: config.rotation,\n\t\t\t\t\trotationPost: config.rotationPost,\n\t\t\t\t\tskew: config.skew,\n\t\t\t\t\tscale: config.scale,\n\t\t\t\t\tscalePost: config.scalePost,\n\t\t\t\t\topacity: config.opacity,\n\t\t\t\t\twidth: config.width,\n\t\t\t\t\theight: config.height,\n\n\t\t\t\t\tclone: function clone() {\n\t\t\t\t\t\treturn createState({\n\t\t\t\t\t\t\tposition: this.position ? this.position.slice(0) : undefined,\n\t\t\t\t\t\t\trotation: this.rotation ? this.rotation.slice(0) : undefined,\n\t\t\t\t\t\t\trotationPost: this.rotationPost ? this.rotationPost.slice(0) : undefined,\n\t\t\t\t\t\t\tskew: this.skew ? this.skew.slice(0) : undefined,\n\t\t\t\t\t\t\tscale: this.scale ? this.scale.slice(0) : undefined,\n\t\t\t\t\t\t\tscalePost: this.scalePost ? this.scalePost.slice(0) : undefined,\n\t\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\t\topacity: this.opacity\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tasMatrix: function asMatrix() {\n\t\t\t\t\t\tvar m = matrix;\n\t\t\t\t\t\tm.clear();\n\n\t\t\t\t\t\tif (this.transformOrigin) m.translate(-this.transformOrigin[0], -this.transformOrigin[1], -this.transformOrigin[2]);\n\n\t\t\t\t\t\tif (this.scale) {\n\t\t\t\t\t\t\tm.scale(this.scale[0], this.scale[1]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.skew) {\n\t\t\t\t\t\t\tm.skew(this.skew[0], this.skew[1]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.rotation) {\n\t\t\t\t\t\t\tm.rotateX(this.rotation[0]);\n\t\t\t\t\t\t\tm.rotateY(this.rotation[1]);\n\t\t\t\t\t\t\tm.rotateZ(this.rotation[2]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.position) {\n\t\t\t\t\t\t\tm.translate(this.position[0], this.position[1], this.position[2]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.rotationPost) {\n\t\t\t\t\t\t\tm.rotateX(this.rotationPost[0]);\n\t\t\t\t\t\t\tm.rotateY(this.rotationPost[1]);\n\t\t\t\t\t\t\tm.rotateZ(this.rotationPost[2]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.scalePost) {\n\t\t\t\t\t\t\tm.scale(this.scalePost[0], this.scalePost[1]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.transformOrigin) m.translate(this.transformOrigin[0], this.transformOrigin[1], this.transformOrigin[2]);\n\t\t\t\t\t\treturn m;\n\t\t\t\t\t},\n\n\t\t\t\t\tgetProperties: function getProperties() {\n\t\t\t\t\t\tproperties.opacity = this.opacity;\n\t\t\t\t\t\tproperties.width = this.width + 'px';\n\t\t\t\t\t\tproperties.height = this.height + 'px';\n\t\t\t\t\t\treturn properties;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t// ------------------\n\t\t\t// -- StateTweener -- \n\t\t\t// -------------------\n\n\t\t\tvar createStateTweener = function createStateTweener(startState, endState, resultState) {\n\t\t\t\tvar start = startState;\n\t\t\t\tvar end = endState;\n\t\t\t\tvar result = resultState;\n\n\t\t\t\tvar tweenPosition = end.position !== undefined;\n\t\t\t\tvar tweenRotation = end.rotation !== undefined;\n\t\t\t\tvar tweenRotationPost = end.rotationPost !== undefined;\n\t\t\t\tvar tweenScale = end.scale !== undefined;\n\t\t\t\tvar tweenSkew = end.skew !== undefined;\n\t\t\t\tvar tweenWidth = end.width !== undefined;\n\t\t\t\tvar tweenHeight = end.height !== undefined;\n\t\t\t\tvar tweenOpacity = end.opacity !== undefined;\n\n\t\t\t\t// Public API\n\t\t\t\treturn {\n\n\t\t\t\t\ttween: function tween(tweenValue) {\n\n\t\t\t\t\t\tif (tweenPosition) {\n\t\t\t\t\t\t\tvar dX = end.position[0] - start.position[0];\n\t\t\t\t\t\t\tvar dY = end.position[1] - start.position[1];\n\t\t\t\t\t\t\tvar dZ = end.position[2] - start.position[2];\n\t\t\t\t\t\t\tresult.position[0] = start.position[0] + tweenValue * dX;\n\t\t\t\t\t\t\tresult.position[1] = start.position[1] + tweenValue * dY;\n\t\t\t\t\t\t\tresult.position[2] = start.position[2] + tweenValue * dZ;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tweenRotation) {\n\t\t\t\t\t\t\tvar dAX = end.rotation[0] - start.rotation[0];\n\t\t\t\t\t\t\tvar dAY = end.rotation[1] - start.rotation[1];\n\t\t\t\t\t\t\tvar dAZ = end.rotation[2] - start.rotation[2];\n\t\t\t\t\t\t\tresult.rotation[0] = start.rotation[0] + tweenValue * dAX;\n\t\t\t\t\t\t\tresult.rotation[1] = start.rotation[1] + tweenValue * dAY;\n\t\t\t\t\t\t\tresult.rotation[2] = start.rotation[2] + tweenValue * dAZ;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tweenRotationPost) {\n\t\t\t\t\t\t\tvar dBX = end.rotationPost[0] - start.rotationPost[0];\n\t\t\t\t\t\t\tvar dBY = end.rotationPost[1] - start.rotationPost[1];\n\t\t\t\t\t\t\tvar dBZ = end.rotationPost[2] - start.rotationPost[2];\n\t\t\t\t\t\t\tresult.rotationPost[0] = start.rotationPost[0] + tweenValue * dBX;\n\t\t\t\t\t\t\tresult.rotationPost[1] = start.rotationPost[1] + tweenValue * dBY;\n\t\t\t\t\t\t\tresult.rotationPost[2] = start.rotationPost[2] + tweenValue * dBZ;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tweenSkew) {\n\t\t\t\t\t\t\tvar dSX = end.scale[0] - start.scale[0];\n\t\t\t\t\t\t\tvar dSY = end.scale[1] - start.scale[1];\n\n\t\t\t\t\t\t\tresult.scale[0] = start.scale[0] + tweenValue * dSX;\n\t\t\t\t\t\t\tresult.scale[1] = start.scale[1] + tweenValue * dSY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tweenScale) {\n\t\t\t\t\t\t\tvar dSkewX = end.skew[0] - start.skew[0];\n\t\t\t\t\t\t\tvar dSkewY = end.skew[1] - start.skew[1];\n\n\t\t\t\t\t\t\tresult.skew[0] = start.skew[0] + tweenValue * dSkewX;\n\t\t\t\t\t\t\tresult.skew[1] = start.skew[1] + tweenValue * dSkewY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tweenWidth) {\n\t\t\t\t\t\t\tvar dWidth = end.width - start.width;\n\t\t\t\t\t\t\tresult.width = start.width + tweenValue * dWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tweenHeight) {\n\t\t\t\t\t\t\tvar dHeight = end.height - start.height;\n\t\t\t\t\t\t\tresult.height = start.height + tweenValue * dHeight;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tweenOpacity) {\n\t\t\t\t\t\t\tvar dOpacity = end.opacity - start.opacity;\n\t\t\t\t\t\t\tresult.opacity = start.opacity + tweenValue * dOpacity;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tasMatrix: function asMatrix() {\n\t\t\t\t\t\treturn result.asMatrix();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetProperties: function getProperties() {\n\t\t\t\t\t\treturn result.getProperties();\n\t\t\t\t\t},\n\n\t\t\t\t\tsetReverse: function setReverse() {\n\t\t\t\t\t\tvar oldStart = start;\n\t\t\t\t\t\tstart = end;\n\t\t\t\t\t\tend = oldStart;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t// ------------------------\n\t\t\t// -- ValueFeederTweener -- \n\t\t\t// ------------------------\n\n\t\t\tvar createValueFeederTweener = function createValueFeederTweener(valueFeeder, startState, endState, resultState) {\n\t\t\t\tvar currentMatrix = valueFeeder(0, createMatrix());\n\t\t\t\tvar start = startState;\n\t\t\t\tvar end = endState;\n\t\t\t\tvar result = resultState;\n\t\t\t\tvar reverse = false;\n\n\t\t\t\t// Public API\n\t\t\t\treturn {\n\n\t\t\t\t\ttween: function tween(tweenValue) {\n\t\t\t\t\t\tif (reverse) tweenValue = 1 - tweenValue;\n\t\t\t\t\t\tcurrentMatrix.clear();\n\t\t\t\t\t\tcurrentMatrix = valueFeeder(tweenValue, currentMatrix);\n\n\t\t\t\t\t\tvar dWidth = end.width - start.width;\n\t\t\t\t\t\tvar dHeight = end.height - start.height;\n\t\t\t\t\t\tvar dOpacity = end.opacity - start.opacity;\n\n\t\t\t\t\t\tif (end.width !== undefined) result.width = start.width + tweenValue * dWidth;\n\t\t\t\t\t\tif (end.height !== undefined) result.height = start.height + tweenValue * dHeight;\n\t\t\t\t\t\tif (end.opacity !== undefined) result.opacity = start.opacity + tweenValue * dOpacity;\n\t\t\t\t\t},\n\n\t\t\t\t\tasMatrix: function asMatrix() {\n\t\t\t\t\t\treturn currentMatrix;\n\t\t\t\t\t},\n\n\t\t\t\t\tgetProperties: function getProperties() {\n\t\t\t\t\t\treturn result.getProperties();\n\t\t\t\t\t},\n\n\t\t\t\t\tsetReverse: function setReverse() {\n\t\t\t\t\t\treverse = true;\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tvar optionOrDefault = function optionOrDefault(option, def) {\n\t\t\t\tif (typeof option == 'undefined') {\n\t\t\t\t\treturn def;\n\t\t\t\t}\n\t\t\t\treturn option;\n\t\t\t};\n\n\t\t\tvar updateElementTransform = function updateElementTransform(element, matrix, perspective) {\n\t\t\t\tvar cssPerspective = '';\n\t\t\t\tif (perspective) {\n\t\t\t\t\tcssPerspective = 'perspective(' + perspective + 'px) ';\n\t\t\t\t}\n\t\t\t\tvar cssMatrix = matrix.asCSS();\n\t\t\t\telement.style[transformProperty] = cssPerspective + cssMatrix;\n\t\t\t};\n\n\t\t\tvar updateElementProperties = function updateElementProperties(element, properties) {\n\t\t\t\tfor (var key in properties) {\n\t\t\t\t\telement.style[key] = properties[key];\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar isFunction = function isFunction(object) {\n\t\t\t\treturn typeof object === \"function\";\n\t\t\t};\n\n\t\t\tvar cloneObject = function cloneObject(object) {\n\t\t\t\tif (!object) return object;\n\t\t\t\tvar clone = {};\n\t\t\t\tfor (var key in object) {\n\t\t\t\t\tclone[key] = object[key];\n\t\t\t\t}\n\t\t\t\treturn clone;\n\t\t\t};\n\n\t\t\tsnabbt.createMatrix = createMatrix;\n\t\t\tsnabbt.setElementTransform = updateElementTransform;\n\t\t\treturn snabbt;\n\t\t}();\n\t\tvar stackBlur = function () {\n\n\t\t\tvar mul_table = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\n\n\t\t\tvar shg_table = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n\n\t\t\tfunction getImageDataFromCanvas(canvas, top_x, top_y, width, height) {\n\t\t\t\tif (typeof canvas == 'string') canvas = document.getElementById(canvas);else if (!canvas instanceof HTMLCanvasElement) return;\n\n\t\t\t\tvar context = canvas.getContext('2d');\n\t\t\t\tvar imageData;\n\n\t\t\t\ttry {\n\t\t\t\t\ttry {\n\t\t\t\t\t\timageData = context.getImageData(top_x, top_y, width, height);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(\"unable to access local image data: \" + e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(\"unable to access image data: \" + e);\n\t\t\t\t}\n\n\t\t\t\treturn imageData;\n\t\t\t}\n\n\t\t\tfunction processCanvasRGBA(canvas, top_x, top_y, width, height, radius) {\n\t\t\t\tif (isNaN(radius) || radius < 1) return;\n\t\t\t\tradius |= 0;\n\n\t\t\t\tvar imageData = getImageDataFromCanvas(canvas, top_x, top_y, width, height);\n\n\t\t\t\timageData = processImageDataRGBA(imageData, top_x, top_y, width, height, radius);\n\n\t\t\t\tcanvas.getContext('2d').putImageData(imageData, top_x, top_y);\n\t\t\t}\n\n\t\t\tfunction processImageDataRGBA(imageData, top_x, top_y, width, height, radius) {\n\t\t\t\tvar pixels = imageData.data;\n\n\t\t\t\tvar x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n\n\t\t\t\tvar div = radius + radius + 1;\n\t\t\t\tvar w4 = width << 2;\n\t\t\t\tvar widthMinus1 = width - 1;\n\t\t\t\tvar heightMinus1 = height - 1;\n\t\t\t\tvar radiusPlus1 = radius + 1;\n\t\t\t\tvar sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n\n\t\t\t\tvar stackStart = new BlurStack();\n\t\t\t\tvar stack = stackStart;\n\t\t\t\tfor (i = 1; i < div; i++) {\n\t\t\t\t\tstack = stack.next = new BlurStack();\n\t\t\t\t\tif (i == radiusPlus1) var stackEnd = stack;\n\t\t\t\t}\n\t\t\t\tstack.next = stackStart;\n\t\t\t\tvar stackIn = null;\n\t\t\t\tvar stackOut = null;\n\n\t\t\t\tyw = yi = 0;\n\n\t\t\t\tvar mul_sum = mul_table[radius];\n\t\t\t\tvar shg_sum = shg_table[radius];\n\n\t\t\t\tfor (y = 0; y < height; y++) {\n\t\t\t\t\tr_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\n\t\t\t\t\tr_out_sum = radiusPlus1 * (pr = pixels[yi]);\n\t\t\t\t\tg_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n\t\t\t\t\tb_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n\t\t\t\t\ta_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n\t\t\t\t\tr_sum += sumFactor * pr;\n\t\t\t\t\tg_sum += sumFactor * pg;\n\t\t\t\t\tb_sum += sumFactor * pb;\n\t\t\t\t\ta_sum += sumFactor * pa;\n\n\t\t\t\t\tstack = stackStart;\n\n\t\t\t\t\tfor (i = 0; i < radiusPlus1; i++) {\n\t\t\t\t\t\tstack.r = pr;\n\t\t\t\t\t\tstack.g = pg;\n\t\t\t\t\t\tstack.b = pb;\n\t\t\t\t\t\tstack.a = pa;\n\t\t\t\t\t\tstack = stack.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 1; i < radiusPlus1; i++) {\n\t\t\t\t\t\tp = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n\t\t\t\t\t\tr_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n\t\t\t\t\t\tg_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n\t\t\t\t\t\tb_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n\t\t\t\t\t\ta_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n\n\t\t\t\t\t\tr_in_sum += pr;\n\t\t\t\t\t\tg_in_sum += pg;\n\t\t\t\t\t\tb_in_sum += pb;\n\t\t\t\t\t\ta_in_sum += pa;\n\n\t\t\t\t\t\tstack = stack.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tstackIn = stackStart;\n\t\t\t\t\tstackOut = stackEnd;\n\t\t\t\t\tfor (x = 0; x < width; x++) {\n\t\t\t\t\t\tpixels[yi + 3] = pa = a_sum * mul_sum >> shg_sum;\n\t\t\t\t\t\tif (pa != 0) {\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpixels[yi] = (r_sum * mul_sum >> shg_sum) * pa;\n\t\t\t\t\t\t\tpixels[yi + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n\t\t\t\t\t\t\tpixels[yi + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tr_sum -= r_out_sum;\n\t\t\t\t\t\tg_sum -= g_out_sum;\n\t\t\t\t\t\tb_sum -= b_out_sum;\n\t\t\t\t\t\ta_sum -= a_out_sum;\n\n\t\t\t\t\t\tr_out_sum -= stackIn.r;\n\t\t\t\t\t\tg_out_sum -= stackIn.g;\n\t\t\t\t\t\tb_out_sum -= stackIn.b;\n\t\t\t\t\t\ta_out_sum -= stackIn.a;\n\n\t\t\t\t\t\tp = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n\n\t\t\t\t\t\tr_in_sum += stackIn.r = pixels[p];\n\t\t\t\t\t\tg_in_sum += stackIn.g = pixels[p + 1];\n\t\t\t\t\t\tb_in_sum += stackIn.b = pixels[p + 2];\n\t\t\t\t\t\ta_in_sum += stackIn.a = pixels[p + 3];\n\n\t\t\t\t\t\tr_sum += r_in_sum;\n\t\t\t\t\t\tg_sum += g_in_sum;\n\t\t\t\t\t\tb_sum += b_in_sum;\n\t\t\t\t\t\ta_sum += a_in_sum;\n\n\t\t\t\t\t\tstackIn = stackIn.next;\n\n\t\t\t\t\t\tr_out_sum += pr = stackOut.r;\n\t\t\t\t\t\tg_out_sum += pg = stackOut.g;\n\t\t\t\t\t\tb_out_sum += pb = stackOut.b;\n\t\t\t\t\t\ta_out_sum += pa = stackOut.a;\n\n\t\t\t\t\t\tr_in_sum -= pr;\n\t\t\t\t\t\tg_in_sum -= pg;\n\t\t\t\t\t\tb_in_sum -= pb;\n\t\t\t\t\t\ta_in_sum -= pa;\n\n\t\t\t\t\t\tstackOut = stackOut.next;\n\n\t\t\t\t\t\tyi += 4;\n\t\t\t\t\t}\n\t\t\t\t\tyw += width;\n\t\t\t\t}\n\n\t\t\t\tfor (x = 0; x < width; x++) {\n\t\t\t\t\tg_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\n\t\t\t\t\tyi = x << 2;\n\t\t\t\t\tr_out_sum = radiusPlus1 * (pr = pixels[yi]);\n\t\t\t\t\tg_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n\t\t\t\t\tb_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n\t\t\t\t\ta_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n\t\t\t\t\tr_sum += sumFactor * pr;\n\t\t\t\t\tg_sum += sumFactor * pg;\n\t\t\t\t\tb_sum += sumFactor * pb;\n\t\t\t\t\ta_sum += sumFactor * pa;\n\n\t\t\t\t\tstack = stackStart;\n\n\t\t\t\t\tfor (i = 0; i < radiusPlus1; i++) {\n\t\t\t\t\t\tstack.r = pr;\n\t\t\t\t\t\tstack.g = pg;\n\t\t\t\t\t\tstack.b = pb;\n\t\t\t\t\t\tstack.a = pa;\n\t\t\t\t\t\tstack = stack.next;\n\t\t\t\t\t}\n\n\t\t\t\t\typ = width;\n\n\t\t\t\t\tfor (i = 1; i <= radius; i++) {\n\t\t\t\t\t\tyi = yp + x << 2;\n\n\t\t\t\t\t\tr_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n\t\t\t\t\t\tg_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n\t\t\t\t\t\tb_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n\t\t\t\t\t\ta_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n\n\t\t\t\t\t\tr_in_sum += pr;\n\t\t\t\t\t\tg_in_sum += pg;\n\t\t\t\t\t\tb_in_sum += pb;\n\t\t\t\t\t\ta_in_sum += pa;\n\n\t\t\t\t\t\tstack = stack.next;\n\n\t\t\t\t\t\tif (i < heightMinus1) {\n\t\t\t\t\t\t\typ += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tyi = x;\n\t\t\t\t\tstackIn = stackStart;\n\t\t\t\t\tstackOut = stackEnd;\n\t\t\t\t\tfor (y = 0; y < height; y++) {\n\t\t\t\t\t\tp = yi << 2;\n\t\t\t\t\t\tpixels[p + 3] = pa = a_sum * mul_sum >> shg_sum;\n\t\t\t\t\t\tif (pa > 0) {\n\t\t\t\t\t\t\tpa = 255 / pa;\n\t\t\t\t\t\t\tpixels[p] = (r_sum * mul_sum >> shg_sum) * pa;\n\t\t\t\t\t\t\tpixels[p + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n\t\t\t\t\t\t\tpixels[p + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tr_sum -= r_out_sum;\n\t\t\t\t\t\tg_sum -= g_out_sum;\n\t\t\t\t\t\tb_sum -= b_out_sum;\n\t\t\t\t\t\ta_sum -= a_out_sum;\n\n\t\t\t\t\t\tr_out_sum -= stackIn.r;\n\t\t\t\t\t\tg_out_sum -= stackIn.g;\n\t\t\t\t\t\tb_out_sum -= stackIn.b;\n\t\t\t\t\t\ta_out_sum -= stackIn.a;\n\n\t\t\t\t\t\tp = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n\n\t\t\t\t\t\tr_sum += r_in_sum += stackIn.r = pixels[p];\n\t\t\t\t\t\tg_sum += g_in_sum += stackIn.g = pixels[p + 1];\n\t\t\t\t\t\tb_sum += b_in_sum += stackIn.b = pixels[p + 2];\n\t\t\t\t\t\ta_sum += a_in_sum += stackIn.a = pixels[p + 3];\n\n\t\t\t\t\t\tstackIn = stackIn.next;\n\n\t\t\t\t\t\tr_out_sum += pr = stackOut.r;\n\t\t\t\t\t\tg_out_sum += pg = stackOut.g;\n\t\t\t\t\t\tb_out_sum += pb = stackOut.b;\n\t\t\t\t\t\ta_out_sum += pa = stackOut.a;\n\n\t\t\t\t\t\tr_in_sum -= pr;\n\t\t\t\t\t\tg_in_sum -= pg;\n\t\t\t\t\t\tb_in_sum -= pb;\n\t\t\t\t\t\ta_in_sum -= pa;\n\n\t\t\t\t\t\tstackOut = stackOut.next;\n\n\t\t\t\t\t\tyi += width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn imageData;\n\t\t\t}\n\n\t\t\tfunction BlurStack() {\n\t\t\t\tthis.r = 0;\n\t\t\t\tthis.g = 0;\n\t\t\t\tthis.b = 0;\n\t\t\t\tthis.a = 0;\n\t\t\t\tthis.next = null;\n\t\t\t}\n\n\t\t\treturn processCanvasRGBA;\n\t\t}();\n\t\t// canvas to blob polyfill\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob#Polyfill\n\t\tif (!HTMLCanvasElement.prototype.toBlob) {\n\t\t\tObject.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n\t\t\t\tvalue: function value(callback, type, quality) {\n\n\t\t\t\t\tvar binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n\t\t\t\t\t    len = binStr.length,\n\t\t\t\t\t    arr = new Uint8Array(len);\n\n\t\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\t\tarr[i] = binStr.charCodeAt(i);\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(new Blob([arr], { type: type || 'image/png' }));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t'use strict';\n\n\t\tvar _createClass = function () {\n\t\t\tfunction defineProperties(target, props) {\n\t\t\t\tfor (var i = 0; i < props.length; i++) {\n\t\t\t\t\tvar descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n\t\t\t\t}\n\t\t\t}return function (Constructor, protoProps, staticProps) {\n\t\t\t\tif (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n\t\t\t};\n\t\t}();\n\n\t\tvar _arguments = arguments;\n\n\t\tvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\t\t\treturn typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n\t\t} : function (obj) {\n\t\t\treturn obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n\t\t};\n\n\t\tfunction _classCallCheck(instance, Constructor) {\n\t\t\tif (!(instance instanceof Constructor)) {\n\t\t\t\tthrow new TypeError(\"Cannot call a class as a function\");\n\t\t\t}\n\t\t}\n\n\t\tvar copyString = function copyString(str) {\n\t\t\treturn str + '';\n\t\t};\n\n\t\tvar getDataset = function getDataset(el) {\n\n\t\t\tif (typeof el.dataset === 'undefined') {\n\t\t\t\tvar res = {};\n\t\t\t\tvar attr;\n\t\t\t\tvar attrName;\n\t\t\t\tvar attrs = el.attributes;\n\t\t\t\tfor (attr in attrs) {\n\t\t\t\t\tif (attrs.hasOwnProperty(attr) && attrs[attr].name && /^data-[a-z_\\-\\d]*$/i.test(attrs[attr].name)) {\n\t\t\t\t\t\tattrName = toCamelCase(attrs[attr].name.substr(5));\n\t\t\t\t\t\tres[attrName] = attrs[attr].value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t}\n\t\t\treturn el.dataset;\n\t\t};\n\n\t\tvar toCamelCase = function toCamelCase(str) {\n\t\t\treturn str.replace(/\\-./g, function (substr) {\n\t\t\t\treturn substr.charAt(1).toUpperCase();\n\t\t\t});\n\t\t};\n\n\t\tvar getElementAttributes = function getElementAttributes(el) {\n\t\t\t// is a for loop on purpose as this should still function when Slim not supported\n\t\t\tvar result = [];\n\t\t\tvar attributes = Array.prototype.slice.call(el.attributes);\n\t\t\tvar l = attributes.length;\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: attributes[i].name,\n\t\t\t\t\tvalue: attributes[i].value\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\n\t\t// helper method\n\t\tvar getOffsetByEvent = function getOffsetByEvent(e) {\n\t\t\treturn {\n\t\t\t\tx: typeof e.offsetX === 'undefined' ? e.layerX : e.offsetX,\n\t\t\t\ty: typeof e.offsetY === 'undefined' ? e.layerY : e.offsetY\n\t\t\t};\n\t\t};\n\n\t\t// merge two objects together\n\t\tvar mergeOptions = function mergeOptions(base, additives) {\n\n\t\t\tvar key;\n\t\t\tvar options = {};\n\t\t\tvar optionsToMerge = additives || {};\n\n\t\t\tfor (key in base) {\n\t\t\t\tif (!base.hasOwnProperty(key)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\toptions[key] = typeof optionsToMerge[key] === 'undefined' ? base[key] : optionsToMerge[key];\n\t\t\t}\n\n\t\t\treturn options;\n\t\t};\n\n\t\t// keys\n\t\tvar Key = {\n\t\t\tESC: 27,\n\t\t\tRETURN: 13\n\t\t};\n\n\t\t// pointer events\n\t\tvar Events = {\n\t\t\tDOWN: ['touchstart', 'pointerdown', 'mousedown'],\n\t\t\tMOVE: ['touchmove', 'pointermove', 'mousemove'],\n\t\t\tUP: ['touchend', 'touchcancel', 'pointerup', 'mouseup']\n\t\t};\n\n\t\tvar MimeTypes = {\n\t\t\t'jpeg': 'image/jpeg',\n\t\t\t'jpg': 'image/jpeg',\n\t\t\t'jpe': 'image/jpeg',\n\t\t\t'png': 'image/png',\n\t\t\t'gif': 'image/gif',\n\t\t\t'bmp': 'image/bmp'\n\t\t};\n\n\t\tvar ImageExtensionsRegex = /(\\.png|\\.bmp|\\.gif|\\.jpg|\\.jpe|\\.jpg|\\.jpeg)$/;\n\n\t\tvar CanvasExportExtensions = /(jpe|jpg|jpeg|png)/;\n\n\t\t// shortcuts\n\t\tvar create = function create(name, className) {\n\t\t\tvar node = document.createElement(name);\n\t\t\tif (className) {\n\t\t\t\tnode.className = className;\n\t\t\t}\n\t\t\treturn node;\n\t\t};\n\n\t\t// events\n\t\tvar addEvents = function addEvents(obj, events, scope) {\n\t\t\tevents.forEach(function (event) {\n\t\t\t\tobj.addEventListener(event, scope, false);\n\t\t\t});\n\t\t};\n\n\t\tvar removeEvents = function removeEvents(obj, events, scope) {\n\t\t\tevents.forEach(function (event) {\n\t\t\t\tobj.removeEventListener(event, scope, false);\n\t\t\t});\n\t\t};\n\n\t\tvar getEventOffset = function getEventOffset(e) {\n\n\t\t\tvar event = e.changedTouches ? e.changedTouches[0] : e;\n\n\t\t\t// no event found, quit!\n\t\t\tif (!event) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// get offset from events\n\t\t\treturn {\n\t\t\t\tx: event.pageX,\n\t\t\t\ty: event.pageY\n\t\t\t};\n\t\t};\n\n\t\tvar rotate = function rotate(rect, angle) {\n\n\t\t\tvar cx = .5;\n\t\t\tvar cy = .5;\n\n\t\t\tvar radians = Math.PI / 180 * angle;\n\t\t\tvar cos = Math.cos(radians);\n\t\t\tvar sin = Math.sin(radians);\n\n\t\t\tvar x1 = rect.x;\n\t\t\tvar y1 = rect.y;\n\t\t\tvar x2 = rect.x + rect.width;\n\t\t\tvar y2 = rect.y + rect.height;\n\n\t\t\tvar rx1 = cos * (x1 - cx) + sin * (y1 - cy) + cx;\n\t\t\tvar ry1 = cos * (y1 - cy) - sin * (x1 - cx) + cy;\n\n\t\t\tvar rx2 = cos * (x2 - cx) + sin * (y2 - cy) + cx;\n\t\t\tvar ry2 = cos * (y2 - cy) - sin * (x2 - cx) + cy;\n\n\t\t\tif (rx1 <= rx2) {\n\t\t\t\trect.x = rx1;\n\t\t\t\trect.width = rx2 - rx1;\n\t\t\t} else {\n\t\t\t\trect.x = rx2;\n\t\t\t\trect.width = rx1 - rx2;\n\t\t\t}\n\n\t\t\tif (ry1 <= ry2) {\n\t\t\t\trect.y = ry1;\n\t\t\t\trect.height = ry2 - ry1;\n\t\t\t} else {\n\t\t\t\trect.y = ry2;\n\t\t\t\trect.height = ry1 - ry2;\n\t\t\t}\n\t\t};\n\n\t\tvar getEventOffsetScroll = function getEventOffsetScroll(e) {\n\t\t\tvar offset = getEventOffset(e);\n\t\t\toffset.x -= window.pageXOffset || document.documentElement.scrollLeft;\n\t\t\toffset.y -= window.pageYOffset || document.documentElement.scrollTop;\n\t\t\treturn offset;\n\t\t};\n\n\t\tvar lowercaseFirstLetter = function lowercaseFirstLetter(string) {\n\t\t\treturn string.charAt(0).toLowerCase() + string.slice(1);\n\t\t};\n\n\t\tvar capitalizeFirstLetter = function capitalizeFirstLetter(string) {\n\t\t\treturn string.charAt(0).toUpperCase() + string.slice(1);\n\t\t};\n\n\t\tvar last = function last(array) {\n\t\t\treturn array[array.length - 1];\n\t\t};\n\n\t\tvar limit = function limit(value, min, max) {\n\t\t\treturn Math.max(min, Math.min(max, value));\n\t\t};\n\n\t\tvar inArray = function inArray(needle, arr) {\n\t\t\t// is for loop so we can use this method on older browsers to render fallback message\n\t\t\tif (!arr) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\tif (arr[i] === needle) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tvar send = function send(url, data, requestDecorator, progress, success, err) {\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\t// if progress callback defined handle progress events\n\t\t\tif (progress) {\n\t\t\t\txhr.upload.addEventListener('progress', function (e) {\n\t\t\t\t\tprogress(e.loaded, e.total);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// open the request\n\t\t\txhr.open('POST', url, true);\n\n\t\t\t// if request decorator defined pass XMLHttpRequest instance to decorator\n\t\t\tif (requestDecorator) {\n\t\t\t\trequestDecorator(xhr);\n\t\t\t}\n\n\t\t\t// handle state changes\n\t\t\txhr.onreadystatechange = function () {\n\n\t\t\t\tif (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {\n\n\t\t\t\t\tvar text = xhr.responseText;\n\n\t\t\t\t\t// if no data returned from server assume success\n\t\t\t\t\tif (!text.length) {\n\t\t\t\t\t\tsuccess();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// catch possible PHP content length problem\n\t\t\t\t\tif (text.indexOf('Content-Length') !== -1) {\n\t\t\t\t\t\terr('file-too-big');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if data returned it should be in suggested JSON format\n\t\t\t\t\tvar obj = void 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tobj = JSON.parse(xhr.responseText);\n\t\t\t\t\t} catch (e) {}\n\n\t\t\t\t\t// if is failure response\n\t\t\t\t\tif ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj.status === 'failure') {\n\t\t\t\t\t\terr(obj.message);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tsuccess(obj || text);\n\t\t\t\t} else if (xhr.readyState === 4) {\n\n\t\t\t\t\tvar _obj = void 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\t_obj = JSON.parse(xhr.responseText);\n\t\t\t\t\t} catch (e) {}\n\n\t\t\t\t\t// if is clean failure response\n\t\t\t\t\tif ((typeof _obj === 'undefined' ? 'undefined' : _typeof(_obj)) === 'object' && _obj.status === 'failure') {\n\t\t\t\t\t\terr(_obj.message);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\terr('fail');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// do request\n\t\t\txhr.send(data);\n\t\t};\n\n\t\tvar resetTransforms = function resetTransforms(element) {\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telement.style.webkitTransform = '';\n\t\t\telement.style.transform = '';\n\t\t};\n\n\t\tvar bytesToMegaBytes = function bytesToMegaBytes(b) {\n\t\t\treturn b / 1000000;\n\t\t};\n\n\t\tvar megaBytesToBytes = function megaBytesToBytes(mb) {\n\t\t\treturn mb * 1000000;\n\t\t};\n\n\t\tvar getCommonMimeTypes = function getCommonMimeTypes() {\n\t\t\tvar types = [];\n\t\t\tvar type = void 0;\n\t\t\tvar mimeType = void 0;\n\t\t\tfor (type in MimeTypes) {\n\t\t\t\tif (!MimeTypes.hasOwnProperty(type)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tmimeType = MimeTypes[type];\n\t\t\t\tif (types.indexOf(mimeType) == -1) {\n\t\t\t\t\ttypes.push(mimeType);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn types;\n\t\t};\n\n\t\tvar isJPEGMimeType = function isJPEGMimeType(type) {\n\t\t\treturn type === 'image/jpeg';\n\t\t};\n\n\t\tvar getExtensionByMimeType = function getExtensionByMimeType(mimetype) {\n\t\t\tvar type = void 0;\n\t\t\tfor (type in MimeTypes) {\n\t\t\t\tif (!MimeTypes.hasOwnProperty(type)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (MimeTypes[type] === mimetype) {\n\t\t\t\t\treturn type;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn mimetype;\n\t\t};\n\n\t\tvar getMimeTypeFromResponseType = function getMimeTypeFromResponseType(responseType) {\n\t\t\tvar type = void 0;\n\t\t\tfor (type in MimeTypes) {\n\t\t\t\tif (!MimeTypes.hasOwnProperty(type)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (responseType.indexOf(MimeTypes[type]) !== -1) {\n\t\t\t\t\treturn MimeTypes[type];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tvar getFileName = function getFileName(path) {\n\t\t\treturn path.split('/').pop().split('?').shift();\n\t\t};\n\n\t\tvar leftPad = function leftPad(value) {\n\t\t\tvar padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t\t\treturn (padding + value).slice(-padding.length);\n\t\t};\n\n\t\tvar getDateString = function getDateString(date) {\n\t\t\treturn date.getFullYear() + '-' + leftPad(date.getMonth() + 1, '00') + '-' + leftPad(date.getDate(), '00') + '_' + leftPad(date.getHours(), '00') + '-' + leftPad(date.getMinutes(), '00') + '-' + leftPad(date.getSeconds(), '00');\n\t\t};\n\n\t\tvar getFileNameByFile = function getFileNameByFile(file) {\n\t\t\tif (typeof file.name === 'undefined') {\n\t\t\t\treturn getDateString(new Date()) + '.' + getExtensionByMimeType(getFileTypeByFile(file));\n\t\t\t}\n\t\t\treturn file.name;\n\t\t};\n\n\t\tvar getFileTypeByFile = function getFileTypeByFile(file) {\n\t\t\treturn file.type || 'image/jpeg';\n\t\t};\n\n\t\tvar getFileNameWithoutExtension = function getFileNameWithoutExtension(path) {\n\t\t\tif (typeof path !== 'string') {\n\t\t\t\treturn getDateString(new Date());\n\t\t\t}\n\t\t\tvar name = getFileName(path);\n\t\t\treturn name.split('.').shift();\n\t\t};\n\n\t\tvar blobToFile = function blobToFile(blob, name) {\n\t\t\tif ('lastModified' in File.prototype) {\n\t\t\t\tblob.lastModified = new Date();\n\t\t\t} else {\n\t\t\t\tblob.lastModifiedDate = new Date();\n\t\t\t}\n\t\t\tblob.name = name;\n\t\t\treturn blob;\n\t\t};\n\n\t\tvar resourceIsFetchURL = function resourceIsFetchURL(resource) {\n\t\t\treturn (/^fetch\\//.test(resource)\n\t\t\t);\n\t\t};\n\n\t\tvar resourceIsBase64Data = function resourceIsBase64Data(resource) {\n\t\t\treturn (/^data:image/.test(resource)\n\t\t\t);\n\t\t};\n\n\t\tvar loadRemoteURL = function loadRemoteURL(fetcher, url, err, cb) {\n\n\t\t\tfetcher = '' + fetcher + (fetcher.indexOf('?') !== -1 ? '&' : '?') + 'url=' + url;\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', fetcher, true);\n\t\t\txhr.responseType = 'json';\n\t\t\txhr.onload = function () {\n\n\t\t\t\tif (this.response.status === 'failure') {\n\t\t\t\t\terr(this.response.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tloadURL(this.response.body, cb);\n\t\t\t};\n\n\t\t\txhr.send();\n\t\t};\n\n\t\tvar loadURL = function loadURL(url, cb) {\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, true);\n\t\t\txhr.responseType = 'blob';\n\t\t\txhr.onload = function (e) {\n\n\t\t\t\tvar name = getFileName(url);\n\t\t\t\tvar type = getMimeTypeFromResponseType(this.response.type);\n\n\t\t\t\tif (!ImageExtensionsRegex.test(name)) {\n\t\t\t\t\tname += '.' + getExtensionByMimeType(type);\n\t\t\t\t}\n\n\t\t\t\t// get as file\n\t\t\t\tvar file = blobToFile(this.response, name);\n\n\t\t\t\t// need to set correct type\n\t\t\t\tcb(cloneFile(file, type));\n\t\t\t};\n\n\t\t\txhr.send();\n\t\t};\n\n\t\tvar base64ToByteString = function base64ToByteString(dataURI) {\n\n\t\t\t// get data part of string (remove data:image/jpeg...,)\n\t\t\tvar dataPart = dataURI.split(',')[1];\n\n\t\t\t// remove any whitespace as that causes InvalidCharacterError in IE\n\t\t\tvar dataPartCleaned = dataPart.replace(/\\s/g, '');\n\n\t\t\t// to bytestring\n\t\t\treturn atob(dataPartCleaned);\n\t\t};\n\n\t\tvar base64ToArrayBuffer = function base64ToArrayBuffer(dataURI) {\n\n\t\t\tvar byteString = base64ToByteString(dataURI);\n\t\t\tvar ab = new ArrayBuffer(byteString.length);\n\t\t\tvar ia = new Uint8Array(ab);\n\n\t\t\tfor (var i = 0; i < byteString.length; i++) {\n\t\t\t\tia[i] = byteString.charCodeAt(i);\n\t\t\t}\n\t\t\treturn ab;\n\t\t};\n\n\t\tvar base64ToBlob = function base64ToBlob(dataURI, filename) {\n\n\t\t\tvar byteString = base64ToByteString(dataURI);\n\t\t\tvar ab = new ArrayBuffer(byteString.length);\n\t\t\tvar ia = new Uint8Array(ab);\n\n\t\t\tfor (var i = 0; i < byteString.length; i++) {\n\t\t\t\tia[i] = byteString.charCodeAt(i);\n\t\t\t}\n\n\t\t\tvar mimeType = getMimeTypeFromDataURI(dataURI);\n\n\t\t\tif (typeof filename === 'undefined') {\n\t\t\t\tfilename = getDateString(new Date()) + '.' + getExtensionByMimeType(mimeType);\n\t\t\t}\n\n\t\t\treturn blobToFile(createBlob(ab, mimeType), filename);\n\t\t};\n\n\t\tvar createBlob = function createBlob(data, mimeType) {\n\n\t\t\tvar BB = window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n\t\t\tif (BB) {\n\t\t\t\tvar bb = new BB();\n\t\t\t\tbb.append(data);\n\t\t\t\treturn bb.getBlob(mimeType);\n\t\t\t}\n\n\t\t\treturn new Blob([data], {\n\t\t\t\ttype: mimeType\n\t\t\t});\n\t\t};\n\n\t\tvar arrayBufferConcat = function arrayBufferConcat(buffers) {\n\t\t\tvar length = 0;\n\t\t\tvar buffer = null;\n\n\t\t\tfor (var i in buffers) {\n\t\t\t\tif (!_arguments.hasOwnProperty(i)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbuffer = buffers[i];\n\t\t\t\tlength += buffer.byteLength;\n\t\t\t}\n\n\t\t\tvar joined = new Uint8Array(length);\n\t\t\tvar offset = 0;\n\n\t\t\tfor (var _i in buffers) {\n\t\t\t\tif (!_arguments.hasOwnProperty(_i)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbuffer = buffers[_i];\n\t\t\t\tjoined.set(new Uint8Array(buffer), offset);\n\t\t\t\toffset += buffer.byteLength;\n\t\t\t}\n\n\t\t\treturn joined.buffer;\n\t\t};\n\n\t\tvar getImageAsCanvas = function getImageAsCanvas(src, size, callback) {\n\n\t\t\t// only cross origin when it's not base64 data, to prevent errors in Safari\n\t\t\t// http://stackoverflow.com/questions/31643096/why-does-safari-throw-cors-error-when-setting-base64-data-on-a-crossorigin-an\n\t\t\tvar crossOrigin = typeof src === 'string' ? src.indexOf('data:image') !== 0 : true;\n\n\t\t\tloadImage.parseMetaData(src, function (meta) {\n\n\t\t\t\tvar options = {\n\t\t\t\t\tcanvas: true,\n\t\t\t\t\tcrossOrigin: crossOrigin\n\t\t\t\t};\n\n\t\t\t\tif (size) {\n\t\t\t\t\toptions.maxWidth = size.width;\n\t\t\t\t\toptions.maxHeight = size.height;\n\t\t\t\t}\n\n\t\t\t\tif (meta.exif) {\n\t\t\t\t\toptions.orientation = meta.exif.get('Orientation');\n\t\t\t\t}\n\n\t\t\t\tloadImage(src, function (res) {\n\n\t\t\t\t\tif (res.type === 'error') {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(res, meta);\n\t\t\t\t}, options);\n\t\t\t});\n\t\t};\n\n\t\tvar getAutoCropRect = function getAutoCropRect(width, height, ratioOut) {\n\n\t\t\tvar x,\n\t\t\t    y,\n\t\t\t    w,\n\t\t\t    h,\n\t\t\t    ratioIn = height / width;\n\n\t\t\t// if input is portrait and required is landscape\n\t\t\t// width is portrait width, height is width times outputRatio\n\t\t\tif (ratioIn < ratioOut) {\n\t\t\t\th = height;\n\t\t\t\tw = h / ratioOut;\n\t\t\t\tx = (width - w) * .5;\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\t// if input is landscape and required is portrait\n\t\t\t// height is landscape height, width is height divided by outputRatio\n\t\t\telse {\n\t\t\t\t\tw = width;\n\t\t\t\t\th = w * ratioOut;\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = (height - h) * .5;\n\t\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\theight: h,\n\t\t\t\twidth: w\n\t\t\t};\n\t\t};\n\n\t\tvar transformCanvas = function transformCanvas(canvas) {\n\t\t\tvar transforms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\tvar cb = arguments[2];\n\n\t\t\tvar result = create('canvas');\n\n\t\t\tvar rotation = transforms.rotation,\n\t\t\t    crop = transforms.crop,\n\t\t\t    size = transforms.size,\n\t\t\t    filters = transforms.filters,\n\t\t\t    minSize = transforms.minSize;\n\n\t\t\t// do crop transforms\n\n\t\t\tif (crop) {\n\n\t\t\t\t// do crop\n\t\t\t\tvar isTilted = rotation % 180 !== 0;\n\t\t\t\tvar space = {\n\t\t\t\t\twidth: isTilted ? canvas.height : canvas.width,\n\t\t\t\t\theight: isTilted ? canvas.width : canvas.height\n\t\t\t\t};\n\n\t\t\t\t// limit crop to size of canvas else safari might return transparent image\n\t\t\t\tif (crop.x < 0) {\n\t\t\t\t\tcrop.x = 0;\n\t\t\t\t}\n\n\t\t\t\tif (crop.y < 0) {\n\t\t\t\t\tcrop.y = 0;\n\t\t\t\t}\n\n\t\t\t\tif (crop.width > space.width) {\n\t\t\t\t\tcrop.width = space.width;\n\t\t\t\t}\n\n\t\t\t\tif (crop.height > space.height) {\n\t\t\t\t\tcrop.height = space.height;\n\t\t\t\t}\n\n\t\t\t\tif (crop.y + crop.height > space.height) {\n\t\t\t\t\tcrop.y = Math.max(0, space.height - crop.height);\n\t\t\t\t}\n\n\t\t\t\tif (crop.x + crop.width > space.width) {\n\t\t\t\t\tcrop.x = Math.max(0, space.width - crop.width);\n\t\t\t\t}\n\n\t\t\t\t// crop offsets in percentages\n\t\t\t\tvar px = crop.x / space.width;\n\t\t\t\tvar py = crop.y / space.height;\n\t\t\t\tvar pw = crop.width / space.width;\n\t\t\t\tvar ph = crop.height / space.height;\n\n\t\t\t\t// resize canvas to the final crop result size\n\t\t\t\tresult.width = crop.width;\n\t\t\t\tresult.height = crop.height;\n\n\t\t\t\t// draw the crop\n\t\t\t\tvar ctx = result.getContext('2d');\n\n\t\t\t\tif (rotation === 90) {\n\n\t\t\t\t\tctx.translate(result.width * .5, result.height * .5);\n\t\t\t\t\tctx.rotate(-90 * Math.PI / 180);\n\t\t\t\t\tctx.drawImage(canvas,\n\n\t\t\t\t\t// source rectangle (crop area)\n\t\t\t\t\t(1 - py) * canvas.width - canvas.width * ph, crop.x, crop.height, crop.width,\n\n\t\t\t\t\t// target area (cover)\n\t\t\t\t\t-result.height * .5, -result.width * .5, result.height, result.width);\n\t\t\t\t} else if (rotation === 180) {\n\n\t\t\t\t\tctx.translate(result.width * .5, result.height * .5);\n\t\t\t\t\tctx.rotate(-180 * Math.PI / 180);\n\t\t\t\t\tctx.drawImage(canvas,\n\n\t\t\t\t\t// source rectangle (crop area)\n\t\t\t\t\t(1 - (px + pw)) * space.width, (1 - (py + ph)) * space.height, pw * space.width, ph * space.height,\n\n\t\t\t\t\t// target area (cover)\n\t\t\t\t\t-result.width * .5, -result.height * .5, result.width, result.height);\n\t\t\t\t} else if (rotation === 270) {\n\n\t\t\t\t\tctx.translate(result.width * .5, result.height * .5);\n\t\t\t\t\tctx.rotate(-270 * Math.PI / 180);\n\t\t\t\t\tctx.drawImage(canvas,\n\n\t\t\t\t\t// source rectangle (crop area)\n\t\t\t\t\tcrop.y, (1 - px) * canvas.height - canvas.height * pw, crop.height, crop.width,\n\n\t\t\t\t\t// target area (cover)\n\t\t\t\t\t-result.height * .5, -result.width * .5, result.height, result.width);\n\t\t\t\t} else {\n\n\t\t\t\t\tctx.drawImage(canvas,\n\n\t\t\t\t\t// source rectangle (crop area)\n\t\t\t\t\tcrop.x, crop.y, crop.width, crop.height,\n\n\t\t\t\t\t// target area (cover)\n\t\t\t\t\t0, 0, result.width, result.height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// do size transforms\n\t\t\tif (size) {\n\n\t\t\t\tvar scalarX = size.width / result.width;\n\t\t\t\tvar scalarY = size.height / result.height;\n\t\t\t\tvar scalar = Math.min(scalarX, scalarY);\n\n\t\t\t\tscaleCanvas(result, scalar, size, minSize);\n\n\t\t\t\t// sharpen result\n\t\t\t\tif (filters.sharpen > 0) {\n\t\t\t\t\tfilter(result, sharpen(filters.sharpen));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcb(result);\n\t\t};\n\n\t\tfunction scaleCanvas(canvas, scalar, bounds, min) {\n\n\t\t\t// if not scaling down, bail out\n\t\t\tif (scalar >= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar targetWidth = Math.max(min.width, Math.min(bounds.width, Math.round(canvas.width * scalar)));\n\t\t\tvar targetHeight = Math.max(min.height, Math.min(bounds.height, Math.round(canvas.height * scalar)));\n\t\t\tvar w = canvas.width;\n\t\t\tvar h = canvas.height;\n\t\t\tvar tmp = canvas;\n\t\t\tvar c = void 0;\n\t\t\tvar ctx = void 0;\n\n\t\t\twhile (w > targetWidth && h > targetHeight) {\n\n\t\t\t\tc = document.createElement('canvas');\n\t\t\t\tw = Math.round(tmp.width * .5);\n\t\t\t\th = Math.round(tmp.height * .5);\n\n\t\t\t\tif (w < targetWidth) {\n\t\t\t\t\tw = targetWidth;\n\t\t\t\t}\n\n\t\t\t\tif (h < targetHeight) {\n\t\t\t\t\th = targetHeight;\n\t\t\t\t}\n\n\t\t\t\tc.width = w;\n\t\t\t\tc.height = h;\n\t\t\t\tctx = c.getContext('2d');\n\t\t\t\tctx.drawImage(tmp, 0, 0, w, h);\n\n\t\t\t\ttmp = cloneCanvas(c);\n\t\t\t}\n\n\t\t\tcanvas.width = targetWidth;\n\t\t\tcanvas.height = targetHeight;\n\n\t\t\tctx = canvas.getContext('2d');\n\t\t\tctx.drawImage(tmp, 0, 0, targetWidth, targetHeight);\n\t\t}\n\n\t\tvar getPixels = function getPixels(canvas) {\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\treturn ctx.getImageData(0, 0, canvas.width, canvas.height);\n\t\t};\n\n\t\tvar filter = function filter(canvas, _filter) {\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\tctx.putImageData(_filter(getPixels(canvas), canvas.width, canvas.height), 0, 0);\n\t\t};\n\n\t\tvar createImageData = function createImageData(w, h, pixels) {\n\t\t\tvar c = document.createElement('canvas');\n\t\t\tc.width = w;\n\t\t\tc.height = h;\n\t\t\tvar ctx = c.getContext('2d');\n\t\t\tvar data = ctx.createImageData(c.width, c.height);\n\t\t\tif (pixels) {\n\t\t\t\tdata.set(pixels.data);\n\t\t\t}\n\t\t\treturn data;\n\t\t};\n\n\t\tvar sharpen = function sharpen(mix) {\n\n\t\t\treturn function (pixels, w, h) {\n\n\t\t\t\tvar weights = [0, -1, 0, -1, 5, -1, 0, -1, 0],\n\t\t\t\t    katet = Math.round(Math.sqrt(weights.length)),\n\t\t\t\t    half = katet * 0.5 | 0,\n\t\t\t\t    dstData = createImageData(w, h),\n\t\t\t\t    dstBuff = dstData.data,\n\t\t\t\t    srcBuff = pixels.data,\n\t\t\t\t    y = h,\n\t\t\t\t    x = void 0;\n\n\t\t\t\twhile (y--) {\n\n\t\t\t\t\tx = w;\n\n\t\t\t\t\twhile (x--) {\n\n\t\t\t\t\t\tvar sy = y,\n\t\t\t\t\t\t    sx = x,\n\t\t\t\t\t\t    dstOff = (y * w + x) * 4,\n\t\t\t\t\t\t    r = 0,\n\t\t\t\t\t\t    g = 0,\n\t\t\t\t\t\t    b = 0,\n\t\t\t\t\t\t    a = 0;\n\n\t\t\t\t\t\tfor (var cy = 0; cy < katet; cy++) {\n\t\t\t\t\t\t\tfor (var cx = 0; cx < katet; cx++) {\n\n\t\t\t\t\t\t\t\tvar scy = sy + cy - half;\n\t\t\t\t\t\t\t\tvar scx = sx + cx - half;\n\n\t\t\t\t\t\t\t\tif (scy >= 0 && scy < h && scx >= 0 && scx < w) {\n\n\t\t\t\t\t\t\t\t\tvar srcOff = (scy * w + scx) * 4;\n\t\t\t\t\t\t\t\t\tvar wt = weights[cy * katet + cx];\n\n\t\t\t\t\t\t\t\t\tr += srcBuff[srcOff] * wt;\n\t\t\t\t\t\t\t\t\tg += srcBuff[srcOff + 1] * wt;\n\t\t\t\t\t\t\t\t\tb += srcBuff[srcOff + 2] * wt;\n\t\t\t\t\t\t\t\t\ta += srcBuff[srcOff + 3] * wt;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdstBuff[dstOff] = r * mix + srcBuff[dstOff] * (1 - mix);\n\t\t\t\t\t\tdstBuff[dstOff + 1] = g * mix + srcBuff[dstOff + 1] * (1 - mix);\n\t\t\t\t\t\tdstBuff[dstOff + 2] = b * mix + srcBuff[dstOff + 2] * (1 - mix);\n\t\t\t\t\t\tdstBuff[dstOff + 3] = srcBuff[dstOff + 3];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn dstData;\n\t\t\t};\n\t\t};\n\n\t\tvar sizeDist = function sizeDist(rect, canvas) {\n\n\t\t\tvar dx = Math.abs(rect.width - canvas.width);\n\t\t\tvar dy = Math.abs(rect.height - canvas.height);\n\n\t\t\treturn Math.max(dx, dy);\n\t\t};\n\n\t\tvar cloneCanvas = function cloneCanvas(original) {\n\t\t\treturn cloneCanvasScaled(original, 1);\n\t\t};\n\n\t\tvar cloneCanvasScaled = function cloneCanvasScaled(original, scalar) {\n\n\t\t\tif (!original) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar duplicate = document.createElement('canvas');\n\t\t\tvar ctx = duplicate.getContext('2d');\n\t\t\tduplicate.width = original.width;\n\t\t\tduplicate.height = original.height;\n\t\t\tctx.drawImage(original, 0, 0);\n\t\t\tif (scalar > 0 && scalar != 1) {\n\t\t\t\tscaleCanvas(duplicate, scalar, {\n\t\t\t\t\twidth: Math.round(original.width * scalar),\n\t\t\t\t\theight: Math.round(original.height * scalar)\n\t\t\t\t}, {\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn duplicate;\n\t\t};\n\n\t\tvar canvasHasDimensions = function canvasHasDimensions(canvas) {\n\t\t\treturn canvas.width && canvas.height;\n\t\t};\n\n\t\tvar copyCanvas = function copyCanvas(original, destination) {\n\n\t\t\tvar ctx = destination.getContext('2d');\n\t\t\tif (canvasHasDimensions(destination)) {\n\t\t\t\tctx.drawImage(original, 0, 0, destination.width, destination.height);\n\t\t\t} else {\n\t\t\t\tdestination.width = original.width;\n\t\t\t\tdestination.height = original.height;\n\t\t\t\tctx.drawImage(original, 0, 0);\n\t\t\t}\n\t\t};\n\n\t\tvar clearCanvas = function clearCanvas(canvas) {\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t};\n\n\t\tvar blurCanvas = function blurCanvas(canvas) {\n\t\t\tstackBlur(canvas, 0, 0, canvas.width, canvas.height, 3);\n\t\t};\n\n\t\tvar covers = function covers(image, rect) {\n\t\t\treturn parseInt(image.width, 10) >= rect.width && parseInt(image.height, 10) >= rect.height;\n\t\t};\n\n\t\tvar scaleRect = function scaleRect(rect, w, h) {\n\t\t\treturn {\n\t\t\t\tx: rect.x * w,\n\t\t\t\ty: rect.y * h,\n\t\t\t\twidth: rect.width * w,\n\t\t\t\theight: rect.height * h\n\t\t\t};\n\t\t};\n\n\t\tvar divideRect = function divideRect(rect, w, h) {\n\t\t\treturn {\n\t\t\t\tx: rect.x / w,\n\t\t\t\ty: rect.y / h,\n\t\t\t\twidth: rect.width / w,\n\t\t\t\theight: rect.height / h\n\t\t\t};\n\t\t};\n\n\t\tvar resetFileInput = function resetFileInput(input) {\n\n\t\t\t// no value, no need to reset\n\t\t\tif (!input || input.value === '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// for modern browsers\n\t\t\t\tinput.value = '';\n\t\t\t} catch (err) {}\n\n\t\t\t// for IE10\n\t\t\tif (input.value) {\n\n\t\t\t\t// quickly append input to temp form and reset form\n\t\t\t\tvar form = document.createElement('form');\n\t\t\t\tvar parentNode = input.parentNode;\n\t\t\t\tvar ref = input.nextSibling;\n\t\t\t\tform.appendChild(input);\n\t\t\t\tform.reset();\n\n\t\t\t\t// re-inject input where it originally was\n\t\t\t\tif (ref) {\n\t\t\t\t\tparentNode.insertBefore(input, ref);\n\t\t\t\t} else {\n\t\t\t\t\tparentNode.appendChild(input);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar clone = function clone(obj) {\n\t\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) {\n\t\t\t\treturn JSON.parse(JSON.stringify(obj));\n\t\t\t}\n\t\t\treturn obj;\n\t\t};\n\n\t\tvar cloneFile = function cloneFile(file) {\n\t\t\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\t\tif (!file) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar dupe = file.slice(0, file.size, type || file.type);\n\t\t\tdupe.name = file.name;\n\n\t\t\tif ('lastModified' in File.prototype && file.lastModified) {\n\t\t\t\tdupe.lastModified = new Date(file.lastModified);\n\t\t\t} else if (file.lastModifiedDate) {\n\t\t\t\tdupe.lastModifiedDate = new Date(file.lastModifiedDate);\n\t\t\t}\n\t\t\treturn dupe;\n\t\t};\n\n\t\tvar cloneData = function cloneData(obj) {\n\t\t\tvar dupe = clone(obj);\n\t\t\tdupe.input.file = cloneFile(obj.input.file);\n\t\t\tdupe.output.image = cloneCanvas(obj.output.image);\n\t\t\treturn dupe;\n\t\t};\n\n\t\t/**\r\n   * @param image\r\n   * @param type\r\n   * @param jpegCompression - value between 0 and 100 or undefined/null to use default compression\r\n   * @returns {*}\r\n   */\n\t\tvar toDataURL = function toDataURL(image, type, jpegCompression) {\n\t\t\tif (!image || !type) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn image.toDataURL(type, isJPEGMimeType(type) && typeof jpegCompression === 'number' ? jpegCompression / 100 : undefined);\n\t\t};\n\n\t\tvar getMimeTypeFromDataURI = function getMimeTypeFromDataURI(dataUri) {\n\t\t\tif (!dataUri) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar matches = dataUri.substr(0, 16).match(/^.+;/);\n\t\t\tif (matches.length) {\n\t\t\t\treturn matches[0].substring(5, matches[0].length - 1);\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tvar flattenData = function flattenData(obj) {\n\t\t\tvar props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\t\t\tvar jpegCompression = arguments[2];\n\t\t\tvar forcedType = arguments[3];\n\t\t\tvar async = arguments[4];\n\n\t\t\tvar data = {\n\t\t\t\tserver: clone(obj.server),\n\t\t\t\tmeta: clone(obj.meta),\n\t\t\t\tinput: {\n\t\t\t\t\tname: obj.input.name,\n\t\t\t\t\ttype: obj.input.type,\n\t\t\t\t\tsize: obj.input.size,\n\t\t\t\t\twidth: obj.input.width,\n\t\t\t\t\theight: obj.input.height,\n\t\t\t\t\tfield: obj.input.field\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (inArray('input', props) && !async) {\n\t\t\t\tdata.input.image = toDataURL(obj.input.image, obj.input.type);\n\t\t\t}\n\n\t\t\tif (inArray('output', props)) {\n\n\t\t\t\tdata.output = {\n\t\t\t\t\tname: forcedType ? getFileNameWithoutExtension(obj.input.name) + '.' + forcedType : obj.input.name,\n\t\t\t\t\ttype: MimeTypes[forcedType] || obj.input.type,\n\t\t\t\t\twidth: obj.output.width,\n\t\t\t\t\theight: obj.output.height\n\t\t\t\t};\n\n\t\t\t\tdata.output.image = toDataURL(obj.output.image, data.output.type, jpegCompression);\n\t\t\t\tdata.output.type = getMimeTypeFromDataURI(data.output.image);\n\n\t\t\t\t// browser problem:\n\t\t\t\t// if output is of type png and input was of type jpeg we need to fix extension of filename\n\t\t\t\t// so instead of testing the above situation we just always fix extension when handling PNGs\n\t\t\t\tif (data.output.type === 'image/png') {\n\t\t\t\t\tdata.output.name = getFileNameWithoutExtension(data.input.name) + '.png';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (inArray('actions', props)) {\n\t\t\t\tdata.actions = clone(obj.actions);\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar downloadCanvas = function downloadCanvas(data, jpegCompression, forcedType) {\n\n\t\t\tvar canvas = data.output.image;\n\t\t\tvar filename = forcedType ? getFileNameWithoutExtension(data.input.name) + '.' + forcedType : data.input.name;\n\t\t\tvar type = MimeTypes[forcedType] || data.input.type;\n\n\t\t\t// browser problem:\n\t\t\t// if output is of type png and input was of type jpeg we need to fix extension of filename\n\t\t\t// so instead of testing the above situation we just always fix extension when handling PNGs\n\t\t\tif (type === 'image/png') {\n\t\t\t\tfilename = getFileNameWithoutExtension(data.input.name) + '.png';\n\t\t\t}\n\n\t\t\tcanvas.toBlob(function (blob) {\n\n\t\t\t\tif ('msSaveBlob' in window.navigator) {\n\t\t\t\t\twindow.navigator.msSaveBlob(blob, filename);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar url = (window.URL || window.webkitURL).createObjectURL(blob);\n\n\t\t\t\t// setup hidden link\n\t\t\t\tvar link = create('a');\n\t\t\t\tlink.style.display = 'none';\n\t\t\t\tlink.download = filename;\n\t\t\t\tlink.href = url;\n\n\t\t\t\t// attach to DOM otherwise this does not work in Firefox\n\t\t\t\tdocument.body.appendChild(link);\n\n\t\t\t\t// fire click\n\t\t\t\tlink.click();\n\n\t\t\t\t// delay on remove otherwise does not work in Firefox\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tdocument.body.removeChild(link);\n\t\t\t\t\t(window.URL || window.webkitURL).revokeObjectURL(url);\n\t\t\t\t}, 0);\n\t\t\t}, type, typeof jpegCompression === 'number' ? jpegCompression / 100 : undefined);\n\t\t};\n\n\t\tvar toggleDisplayBySelector = function toggleDisplayBySelector(selector, enabled, root) {\n\t\t\tvar node = root.querySelector(selector);\n\t\t\tif (!node) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode.style.display = enabled ? '' : 'none';\n\t\t};\n\n\t\tvar nodeListToArray = function nodeListToArray(nl) {\n\t\t\treturn Array.prototype.slice.call(nl);\n\t\t};\n\n\t\tvar removeElement = function removeElement(el) {\n\t\t\tel.parentNode.removeChild(el);\n\t\t};\n\n\t\tvar wrap = function wrap(element) {\n\t\t\tvar wrapper = create('div');\n\t\t\tif (element.parentNode) {\n\t\t\t\tif (element.nextSibling) {\n\t\t\t\t\telement.parentNode.insertBefore(wrapper, element.nextSibling);\n\t\t\t\t} else {\n\t\t\t\t\telement.parentNode.appendChild(wrapper);\n\t\t\t\t}\n\t\t\t}\n\t\t\twrapper.appendChild(element);\n\t\t\treturn wrapper;\n\t\t};\n\n\t\tvar polarToCartesian = function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n\t\t\tvar angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n\t\t\treturn {\n\t\t\t\tx: centerX + radius * Math.cos(angleInRadians),\n\t\t\t\ty: centerY + radius * Math.sin(angleInRadians)\n\t\t\t};\n\t\t};\n\n\t\tvar describeArc = function describeArc(x, y, radius, startAngle, endAngle) {\n\n\t\t\tvar start = polarToCartesian(x, y, radius, endAngle);\n\t\t\tvar end = polarToCartesian(x, y, radius, startAngle);\n\n\t\t\tvar arcSweep = endAngle - startAngle <= 180 ? '0' : '1';\n\n\t\t\tvar d = ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\n\n\t\t\treturn d;\n\t\t};\n\n\t\tvar percentageArc = function percentageArc(x, y, radius, p) {\n\t\t\treturn describeArc(x, y, radius, 0, p * 360);\n\t\t};\n\t\tvar CropArea = function () {\n\n\t\t\tvar resizers = {\n\t\t\t\t'n': function n(rect, offset, space, ratio) {\n\n\t\t\t\t\tvar t, r, b, l, w, h, p, d;\n\n\t\t\t\t\t// bottom is fixed\n\t\t\t\t\tb = rect.y + rect.height;\n\n\t\t\t\t\t// intended top\n\t\t\t\t\tt = limit(offset.y, 0, b);\n\n\t\t\t\t\t// if is too small vertically\n\t\t\t\t\tif (b - t < space.min.height) {\n\t\t\t\t\t\tt = b - space.min.height;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if should scale by ratio, pick width by ratio of new height\n\t\t\t\t\tw = ratio ? (b - t) / ratio : rect.width;\n\n\t\t\t\t\t// check if has fallen below min width or height\n\t\t\t\t\tif (w < space.min.width) {\n\t\t\t\t\t\tw = space.min.width;\n\t\t\t\t\t\tt = b - w * ratio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add half to left and half to right edge\n\t\t\t\t\tp = (w - rect.width) * .5;\n\t\t\t\t\tl = rect.x - p;\n\t\t\t\t\tr = rect.x + rect.width + p;\n\n\t\t\t\t\t// check if any of the edges has moved out of the available space, if so,\n\t\t\t\t\t// set max size of rectangle from original position\n\t\t\t\t\tif (l < 0 || r > space.width) {\n\n\t\t\t\t\t\t// smallest distance to edge of space\n\t\t\t\t\t\td = Math.min(rect.x, space.width - (rect.x + rect.width));\n\n\t\t\t\t\t\t// new left and right offsets\n\t\t\t\t\t\tl = rect.x - d;\n\t\t\t\t\t\tr = rect.x + rect.width + d;\n\n\t\t\t\t\t\t// resulting width\n\t\t\t\t\t\tw = r - l;\n\n\t\t\t\t\t\t// resulting height based on ratio\n\t\t\t\t\t\th = w * ratio;\n\n\t\t\t\t\t\t// new top position\n\t\t\t\t\t\tt = b - h;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: l,\n\t\t\t\t\t\ty: t,\n\t\t\t\t\t\twidth: r - l,\n\t\t\t\t\t\theight: b - t\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t's': function s(rect, offset, space, ratio) {\n\n\t\t\t\t\tvar t, r, b, l, w, h, p, d;\n\n\t\t\t\t\t// top is fixed\n\t\t\t\t\tt = rect.y;\n\n\t\t\t\t\t// intended bottom\n\t\t\t\t\tb = limit(offset.y, t, space.height);\n\n\t\t\t\t\t// if is too small vertically\n\t\t\t\t\tif (b - t < space.min.height) {\n\t\t\t\t\t\tb = t + space.min.height;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if should scale by ratio, pick width by ratio of new height\n\t\t\t\t\tw = ratio ? (b - t) / ratio : rect.width;\n\n\t\t\t\t\t// check if has fallen below min width or height\n\t\t\t\t\tif (w < space.min.width) {\n\t\t\t\t\t\tw = space.min.width;\n\t\t\t\t\t\tb = t + w * ratio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add half to left and half to right edge\n\t\t\t\t\tp = (w - rect.width) * .5;\n\t\t\t\t\tl = rect.x - p;\n\t\t\t\t\tr = rect.x + rect.width + p;\n\n\t\t\t\t\t// check if any of the edges has moved out of the available space, if so,\n\t\t\t\t\t// set max size of rectangle from original position\n\t\t\t\t\tif (l < 0 || r > space.width) {\n\n\t\t\t\t\t\t// smallest distance to edge of space\n\t\t\t\t\t\td = Math.min(rect.x, space.width - (rect.x + rect.width));\n\n\t\t\t\t\t\t// new left and right offsets\n\t\t\t\t\t\tl = rect.x - d;\n\t\t\t\t\t\tr = rect.x + rect.width + d;\n\n\t\t\t\t\t\t// resulting width\n\t\t\t\t\t\tw = r - l;\n\n\t\t\t\t\t\t// resulting height based on ratio\n\t\t\t\t\t\th = w * ratio;\n\n\t\t\t\t\t\t// new bottom position\n\t\t\t\t\t\tb = t + h;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: l,\n\t\t\t\t\t\ty: t,\n\t\t\t\t\t\twidth: r - l,\n\t\t\t\t\t\theight: b - t\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t'e': function e(rect, offset, space, ratio) {\n\n\t\t\t\t\tvar t, r, b, l, w, h, p, d;\n\n\t\t\t\t\t// left is fixed\n\t\t\t\t\tl = rect.x;\n\n\t\t\t\t\t// intended right edge\n\t\t\t\t\tr = limit(offset.x, l, space.width);\n\n\t\t\t\t\t// if is too small vertically\n\t\t\t\t\tif (r - l < space.min.width) {\n\t\t\t\t\t\tr = l + space.min.width;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if should scale by ratio, pick height by ratio of new width\n\t\t\t\t\th = ratio ? (r - l) * ratio : rect.height;\n\n\t\t\t\t\t// check if has fallen below min width or height\n\t\t\t\t\tif (h < space.min.height) {\n\t\t\t\t\t\th = space.min.height;\n\t\t\t\t\t\tr = l + h / ratio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add half to top and bottom\n\t\t\t\t\tp = (h - rect.height) * .5;\n\t\t\t\t\tt = rect.y - p;\n\t\t\t\t\tb = rect.y + rect.height + p;\n\n\t\t\t\t\t// check if any of the edges has moved out of the available space, if so,\n\t\t\t\t\t// set max size of rectangle from original position\n\t\t\t\t\tif (t < 0 || b > space.height) {\n\n\t\t\t\t\t\t// smallest distance to edge of space\n\t\t\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\n\n\t\t\t\t\t\t// new top and bottom offsets\n\t\t\t\t\t\tt = rect.y - d;\n\t\t\t\t\t\tb = rect.y + rect.height + d;\n\n\t\t\t\t\t\t// resulting height\n\t\t\t\t\t\th = b - t;\n\n\t\t\t\t\t\t// resulting width based on ratio\n\t\t\t\t\t\tw = h / ratio;\n\n\t\t\t\t\t\t// new right position\n\t\t\t\t\t\tr = l + w;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: l,\n\t\t\t\t\t\ty: t,\n\t\t\t\t\t\twidth: r - l,\n\t\t\t\t\t\theight: b - t\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t'w': function w(rect, offset, space, ratio) {\n\n\t\t\t\t\tvar t, r, b, l, w, h, p, d;\n\n\t\t\t\t\t// right is fixed\n\t\t\t\t\tr = rect.x + rect.width;\n\n\t\t\t\t\t// intended left edge\n\t\t\t\t\tl = limit(offset.x, 0, r);\n\n\t\t\t\t\t// if is too small vertically\n\t\t\t\t\tif (r - l < space.min.width) {\n\t\t\t\t\t\tl = r - space.min.width;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if should scale by ratio, pick height by ratio of new width\n\t\t\t\t\th = ratio ? (r - l) * ratio : rect.height;\n\n\t\t\t\t\t// check if has fallen below min width or height\n\t\t\t\t\tif (h < space.min.height) {\n\t\t\t\t\t\th = space.min.height;\n\t\t\t\t\t\tl = r - h / ratio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add half to top and bottom\n\t\t\t\t\tp = (h - rect.height) * .5;\n\t\t\t\t\tt = rect.y - p;\n\t\t\t\t\tb = rect.y + rect.height + p;\n\n\t\t\t\t\t// check if any of the edges has moved out of the available space, if so,\n\t\t\t\t\t// set max size of rectangle from original position\n\t\t\t\t\tif (t < 0 || b > space.height) {\n\n\t\t\t\t\t\t// smallest distance to edge of space\n\t\t\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\n\n\t\t\t\t\t\t// new top and bottom offsets\n\t\t\t\t\t\tt = rect.y - d;\n\t\t\t\t\t\tb = rect.y + rect.height + d;\n\n\t\t\t\t\t\t// resulting height\n\t\t\t\t\t\th = b - t;\n\n\t\t\t\t\t\t// resulting width based on ratio\n\t\t\t\t\t\tw = h / ratio;\n\n\t\t\t\t\t\t// new right position\n\t\t\t\t\t\tl = r - w;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: l,\n\t\t\t\t\t\ty: t,\n\t\t\t\t\t\twidth: r - l,\n\t\t\t\t\t\theight: b - t\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t'ne': function ne(rect, offset, space, ratio) {\n\n\t\t\t\t\tvar t, r, b, l, w, h, d;\n\n\t\t\t\t\t// left and bottom are fixed\n\t\t\t\t\tl = rect.x;\n\t\t\t\t\tb = rect.y + rect.height;\n\n\t\t\t\t\t// intended right edge\n\t\t\t\t\tr = limit(offset.x, l, space.width);\n\n\t\t\t\t\t// if is too small vertically\n\t\t\t\t\tif (r - l < space.min.width) {\n\t\t\t\t\t\tr = l + space.min.width;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if should scale by ratio, pick height by ratio of new width\n\t\t\t\t\th = ratio ? (r - l) * ratio : limit(b - offset.y, space.min.height, b);\n\n\t\t\t\t\t// check if has fallen below min width or height\n\t\t\t\t\tif (h < space.min.height) {\n\t\t\t\t\t\th = space.min.height;\n\t\t\t\t\t\tr = l + h / ratio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add height difference with original height to top\n\t\t\t\t\tt = rect.y - (h - rect.height);\n\n\t\t\t\t\t// check if any of the edges has moved out of the available space, if so,\n\t\t\t\t\t// set max size of rectangle from original position\n\t\t\t\t\tif (t < 0 || b > space.height) {\n\n\t\t\t\t\t\t// smallest distance to edge of space\n\t\t\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\n\n\t\t\t\t\t\t// new top and bottom offsets\n\t\t\t\t\t\tt = rect.y - d;\n\n\t\t\t\t\t\t// resulting height\n\t\t\t\t\t\th = b - t;\n\n\t\t\t\t\t\t// resulting width based on ratio\n\t\t\t\t\t\tw = h / ratio;\n\n\t\t\t\t\t\t// new right position\n\t\t\t\t\t\tr = l + w;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: l,\n\t\t\t\t\t\ty: t,\n\t\t\t\t\t\twidth: r - l,\n\t\t\t\t\t\theight: b - t\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t'se': function se(rect, offset, space, ratio) {\n\n\t\t\t\t\tvar t, r, b, l, w, h, d;\n\n\t\t\t\t\t// left and top are fixed\n\t\t\t\t\tl = rect.x;\n\t\t\t\t\tt = rect.y;\n\n\t\t\t\t\t// intended right edge\n\t\t\t\t\tr = limit(offset.x, l, space.width);\n\n\t\t\t\t\t// if is too small vertically\n\t\t\t\t\tif (r - l < space.min.width) {\n\t\t\t\t\t\tr = l + space.min.width;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if should scale by ratio, pick height by ratio of new width\n\t\t\t\t\th = ratio ? (r - l) * ratio : limit(offset.y - rect.y, space.min.height, space.height - t);\n\n\t\t\t\t\t// check if has fallen below min width or height\n\t\t\t\t\tif (h < space.min.height) {\n\t\t\t\t\t\th = space.min.height;\n\t\t\t\t\t\tr = l + h / ratio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add height difference with original height to bottom\n\t\t\t\t\tb = rect.y + rect.height + (h - rect.height);\n\n\t\t\t\t\t// check if any of the edges has moved out of the available space, if so,\n\t\t\t\t\t// set max size of rectangle from original position\n\t\t\t\t\tif (t < 0 || b > space.height) {\n\n\t\t\t\t\t\t// smallest distance to edge of space\n\t\t\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\n\n\t\t\t\t\t\t// new bottom offset\n\t\t\t\t\t\tb = rect.y + rect.height + d;\n\n\t\t\t\t\t\t// resulting height\n\t\t\t\t\t\th = b - t;\n\n\t\t\t\t\t\t// resulting width based on ratio\n\t\t\t\t\t\tw = h / ratio;\n\n\t\t\t\t\t\t// new right position\n\t\t\t\t\t\tr = l + w;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: l,\n\t\t\t\t\t\ty: t,\n\t\t\t\t\t\twidth: r - l,\n\t\t\t\t\t\theight: b - t\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t'sw': function sw(rect, offset, space, ratio) {\n\n\t\t\t\t\tvar t, r, b, l, w, h, d;\n\n\t\t\t\t\t// right and top are fixed\n\t\t\t\t\tr = rect.x + rect.width;\n\t\t\t\t\tt = rect.y;\n\n\t\t\t\t\t// intended left edge\n\t\t\t\t\tl = limit(offset.x, 0, r);\n\n\t\t\t\t\t// if is too small vertically\n\t\t\t\t\tif (r - l < space.min.width) {\n\t\t\t\t\t\tl = r - space.min.width;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if should scale by ratio, pick height by ratio of new width\n\t\t\t\t\th = ratio ? (r - l) * ratio : limit(offset.y - rect.y, space.min.height, space.height - t);\n\n\t\t\t\t\t// check if has fallen below min width or height\n\t\t\t\t\tif (h < space.min.height) {\n\t\t\t\t\t\th = space.min.height;\n\t\t\t\t\t\tl = r - h / ratio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add height difference with original height to bottom\n\t\t\t\t\tb = rect.y + rect.height + (h - rect.height);\n\n\t\t\t\t\t// check if any of the edges has moved out of the available space, if so,\n\t\t\t\t\t// set max size of rectangle from original position\n\t\t\t\t\tif (t < 0 || b > space.height) {\n\n\t\t\t\t\t\t// smallest distance to edge of space\n\t\t\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\n\n\t\t\t\t\t\t// new bottom offset\n\t\t\t\t\t\tb = rect.y + rect.height + d;\n\n\t\t\t\t\t\t// resulting height\n\t\t\t\t\t\th = b - t;\n\n\t\t\t\t\t\t// resulting width based on ratio\n\t\t\t\t\t\tw = h / ratio;\n\n\t\t\t\t\t\t// new left position\n\t\t\t\t\t\tl = r - w;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: l,\n\t\t\t\t\t\ty: t,\n\t\t\t\t\t\twidth: r - l,\n\t\t\t\t\t\theight: b - t\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t'nw': function nw(rect, offset, space, ratio) {\n\n\t\t\t\t\tvar t, r, b, l, w, h, d;\n\n\t\t\t\t\t// right and bottom are fixed\n\t\t\t\t\tr = rect.x + rect.width;\n\t\t\t\t\tb = rect.y + rect.height;\n\n\t\t\t\t\t// intended left edge\n\t\t\t\t\tl = limit(offset.x, 0, r);\n\n\t\t\t\t\t// if is too small vertically\n\t\t\t\t\tif (r - l < space.min.width) {\n\t\t\t\t\t\tl = r - space.min.width;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if should scale by ratio, pick height by ratio of new width\n\t\t\t\t\th = ratio ? (r - l) * ratio : limit(b - offset.y, space.min.height, b);\n\n\t\t\t\t\t// check if has fallen below min width or height\n\t\t\t\t\tif (h < space.min.height) {\n\t\t\t\t\t\th = space.min.height;\n\t\t\t\t\t\tl = r - h / ratio;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add height difference with original height to bottom\n\t\t\t\t\tt = rect.y - (h - rect.height);\n\n\t\t\t\t\t// check if any of the edges has moved out of the available space, if so,\n\t\t\t\t\t// set max size of rectangle from original position\n\t\t\t\t\tif (t < 0 || b > space.height) {\n\n\t\t\t\t\t\t// smallest distance to edge of space\n\t\t\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\n\n\t\t\t\t\t\t// new bottom offset\n\t\t\t\t\t\tt = rect.y - d;\n\n\t\t\t\t\t\t// resulting height\n\t\t\t\t\t\th = b - t;\n\n\t\t\t\t\t\t// resulting width based on ratio\n\t\t\t\t\t\tw = h / ratio;\n\n\t\t\t\t\t\t// new left position\n\t\t\t\t\t\tl = r - w;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: l,\n\t\t\t\t\t\ty: t,\n\t\t\t\t\t\twidth: r - l,\n\t\t\t\t\t\theight: b - t\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t/**\r\n    * CropArea\r\n    */\n\t\t\treturn function () {\n\t\t\t\tfunction CropArea() {\n\t\t\t\t\tvar element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.createElement('div');\n\n\t\t\t\t\t_classCallCheck(this, CropArea);\n\n\t\t\t\t\tthis._element = element;\n\n\t\t\t\t\tthis._interaction = null;\n\n\t\t\t\t\tthis._minWidth = 0;\n\t\t\t\t\tthis._minHeight = 0;\n\n\t\t\t\t\tthis._ratio = null;\n\n\t\t\t\t\tthis._rect = {\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\theight: 0\n\t\t\t\t\t};\n\n\t\t\t\t\tthis._space = {\n\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\theight: 0\n\t\t\t\t\t};\n\n\t\t\t\t\tthis._rectChanged = false;\n\n\t\t\t\t\tthis._init();\n\t\t\t\t}\n\n\t\t\t\t_createClass(CropArea, [{\n\t\t\t\t\tkey: '_init',\n\t\t\t\t\tvalue: function _init() {\n\n\t\t\t\t\t\tthis._element.className = 'slim-crop-area';\n\n\t\t\t\t\t\t// lines\n\t\t\t\t\t\tvar lines = create('div', 'grid');\n\t\t\t\t\t\tthis._element.appendChild(lines);\n\n\t\t\t\t\t\t// corner & edge resize buttons\n\t\t\t\t\t\tfor (var handler in resizers) {\n\t\t\t\t\t\t\tif (!resizers.hasOwnProperty(handler)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar _btn = create('button', handler);\n\t\t\t\t\t\t\tthis._element.appendChild(_btn);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar btn = create('button', 'c');\n\t\t\t\t\t\tthis._element.appendChild(btn);\n\n\t\t\t\t\t\taddEvents(document, Events.DOWN, this);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'reset',\n\t\t\t\t\tvalue: function reset() {\n\n\t\t\t\t\t\tthis._interaction = null;\n\n\t\t\t\t\t\tthis._rect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\theight: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis._rectChanged = true;\n\n\t\t\t\t\t\tthis._redraw();\n\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'rescale',\n\t\t\t\t\tvalue: function rescale(scale) {\n\n\t\t\t\t\t\t// no rescale\n\t\t\t\t\t\tif (scale === 1) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._interaction = null;\n\n\t\t\t\t\t\tthis._rectChanged = true;\n\n\t\t\t\t\t\tthis._rect.x *= scale;\n\t\t\t\t\t\tthis._rect.y *= scale;\n\t\t\t\t\t\tthis._rect.width *= scale;\n\t\t\t\t\t\tthis._rect.height *= scale;\n\n\t\t\t\t\t\tthis._redraw();\n\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'limit',\n\t\t\t\t\tvalue: function limit(width, height) {\n\t\t\t\t\t\tthis._space.width = width;\n\t\t\t\t\t\tthis._space.height = height;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'offset',\n\t\t\t\t\tvalue: function offset(x, y) {\n\t\t\t\t\t\tthis._space.x = x;\n\t\t\t\t\t\tthis._space.y = y;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'resize',\n\t\t\t\t\tvalue: function resize(x, y, width, height) {\n\n\t\t\t\t\t\tthis._interaction = null;\n\n\t\t\t\t\t\tthis._rect = {\n\t\t\t\t\t\t\tx: limit(x, 0, this._space.width - this._minWidth),\n\t\t\t\t\t\t\ty: limit(y, 0, this._space.height - this._minHeight),\n\t\t\t\t\t\t\twidth: limit(width, this._minWidth, this._space.width),\n\t\t\t\t\t\t\theight: limit(height, this._minHeight, this._space.height)\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis._rectChanged = true;\n\n\t\t\t\t\t\tthis._redraw();\n\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'handleEvent',\n\t\t\t\t\tvalue: function handleEvent(e) {\n\n\t\t\t\t\t\tswitch (e.type) {\n\n\t\t\t\t\t\t\tcase 'touchstart':\n\t\t\t\t\t\t\tcase 'pointerdown':\n\t\t\t\t\t\t\tcase 'mousedown':\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis._onStartDrag(e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'touchmove':\n\t\t\t\t\t\t\tcase 'pointermove':\n\t\t\t\t\t\t\tcase 'mousemove':\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis._onDrag(e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'touchend':\n\t\t\t\t\t\t\tcase 'touchcancel':\n\t\t\t\t\t\t\tcase 'pointerup':\n\t\t\t\t\t\t\tcase 'mouseup':\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis._onStopDrag(e);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onStartDrag',\n\t\t\t\t\tvalue: function _onStartDrag(e) {\n\n\t\t\t\t\t\t// is not my event?\n\t\t\t\t\t\tif (!this._element.contains(e.target)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t// listen to drag related events\n\t\t\t\t\t\taddEvents(document, Events.MOVE, this);\n\t\t\t\t\t\taddEvents(document, Events.UP, this);\n\n\t\t\t\t\t\tthis._interaction = {\n\t\t\t\t\t\t\ttype: e.target.className,\n\t\t\t\t\t\t\toffset: getEventOffsetScroll(e)\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis._interaction.offset.x -= this._rect.x;\n\t\t\t\t\t\tthis._interaction.offset.y -= this._rect.y;\n\n\t\t\t\t\t\t// now dragging\n\t\t\t\t\t\tthis._element.setAttribute('data-dragging', 'true');\n\n\t\t\t\t\t\t// start the redraw update loop\n\t\t\t\t\t\tthis._redraw();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onDrag',\n\t\t\t\t\tvalue: function _onDrag(e) {\n\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t// get local offset for this event\n\t\t\t\t\t\tvar offset = getEventOffsetScroll(e);\n\t\t\t\t\t\tvar type = this._interaction.type;\n\n\t\t\t\t\t\t// drag\n\t\t\t\t\t\tif (type === 'c') {\n\n\t\t\t\t\t\t\tthis._rect.x = limit(offset.x - this._interaction.offset.x, 0, this._space.width - this._rect.width);\n\t\t\t\t\t\t\tthis._rect.y = limit(offset.y - this._interaction.offset.y, 0, this._space.height - this._rect.height);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// resize\n\t\t\t\t\t\telse if (resizers[type]) {\n\t\t\t\t\t\t\t\tthis._rect = resizers[type](this._rect, {\n\t\t\t\t\t\t\t\t\tx: offset.x - this._space.x,\n\t\t\t\t\t\t\t\t\ty: offset.y - this._space.y\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\t\t\twidth: this._space.width,\n\t\t\t\t\t\t\t\t\theight: this._space.height,\n\t\t\t\t\t\t\t\t\tmin: {\n\t\t\t\t\t\t\t\t\t\twidth: this._minWidth,\n\t\t\t\t\t\t\t\t\t\theight: this._minHeight\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, this._ratio);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._rectChanged = true;\n\n\t\t\t\t\t\t// dispatch\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('input'));\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onStopDrag',\n\t\t\t\t\tvalue: function _onStopDrag(e) {\n\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t// stop listening to drag related events\n\t\t\t\t\t\tremoveEvents(document, Events.MOVE, this);\n\t\t\t\t\t\tremoveEvents(document, Events.UP, this);\n\n\t\t\t\t\t\t// no longer interacting, so no need to redraw\n\t\t\t\t\t\tthis._interaction = null;\n\n\t\t\t\t\t\t// now dragging\n\t\t\t\t\t\tthis._element.setAttribute('data-dragging', 'false');\n\n\t\t\t\t\t\t// fire change event\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_redraw',\n\t\t\t\t\tvalue: function _redraw() {\n\t\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\t\tif (this._rectChanged) {\n\n\t\t\t\t\t\t\tvar transform = 'translate(' + this._rect.x + 'px,' + this._rect.y + 'px);';\n\t\t\t\t\t\t\tthis._element.style.cssText = '\\n\\t\\t\\t\\t\\t-webkit-transform: ' + transform + ';\\n\\t\\t\\t\\t\\ttransform: ' + transform + ';\\n\\t\\t\\t\\t\\twidth:' + this._rect.width + 'px;\\n\\t\\t\\t\\t\\theight:' + this._rect.height + 'px;\\n\\t\\t\\t\\t';\n\n\t\t\t\t\t\t\tthis._rectChanged = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if no longer interacting with crop area stop here\n\t\t\t\t\t\tif (!this._interaction) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// redraw\n\t\t\t\t\t\trequestAnimationFrame(function () {\n\t\t\t\t\t\t\treturn _this._redraw();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'destroy',\n\t\t\t\t\tvalue: function destroy() {\n\n\t\t\t\t\t\tthis._interaction = false;\n\t\t\t\t\t\tthis._rectChanged = false;\n\n\t\t\t\t\t\tremoveEvents(document, Events.DOWN, this);\n\t\t\t\t\t\tremoveEvents(document, Events.MOVE, this);\n\t\t\t\t\t\tremoveEvents(document, Events.UP, this);\n\n\t\t\t\t\t\tremoveElement(this._element);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'element',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._element;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'space',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._space;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'area',\n\t\t\t\t\tget: function get() {\n\n\t\t\t\t\t\tvar x = this._rect.x / this._space.width;\n\t\t\t\t\t\tvar y = this._rect.y / this._space.height;\n\t\t\t\t\t\tvar width = this._rect.width / this._space.width;\n\t\t\t\t\t\tvar height = this._rect.height / this._space.height;\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tx: x,\n\t\t\t\t\t\t\ty: y,\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: height\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'dirty',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._rect.x !== 0 || this._rect.y !== 0 || this._rect.width !== 0 || this._rect.height !== 0;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'minWidth',\n\t\t\t\t\tset: function set(value) {\n\t\t\t\t\t\tthis._minWidth = value;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'minHeight',\n\t\t\t\t\tset: function set(value) {\n\t\t\t\t\t\tthis._minHeight = value;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'ratio',\n\t\t\t\t\tset: function set(value) {\n\t\t\t\t\t\tthis._ratio = value;\n\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn CropArea;\n\t\t\t}();\n\t\t}();\n\t\tvar ImageEditor = function () {\n\n\t\t\t/**\r\n    * ImageEditor\r\n    * @param element\r\n    * @param options\r\n    * @constructor\r\n    */\n\n\t\t\tvar CropAreaEvents = ['input', 'change'];\n\n\t\t\tvar ImageEditor = function () {\n\t\t\t\tfunction ImageEditor() {\n\t\t\t\t\tvar element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.createElement('div');\n\t\t\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\t\t\t_classCallCheck(this, ImageEditor);\n\n\t\t\t\t\tthis._element = element;\n\t\t\t\t\tthis._options = mergeOptions(ImageEditor.options(), options);\n\n\t\t\t\t\tthis._ratio = null;\n\t\t\t\t\tthis._output = null;\n\n\t\t\t\t\tthis._input = null;\n\n\t\t\t\t\tthis._preview = null;\n\t\t\t\t\tthis._previewBlurred = null;\n\n\t\t\t\t\tthis._blurredPreview = false;\n\n\t\t\t\t\tthis._cropper = null;\n\t\t\t\t\tthis._straightCrop = null;\n\t\t\t\t\tthis._previewWrapper = null;\n\t\t\t\t\tthis._currentWindowSize = {};\n\n\t\t\t\t\tthis._btnGroup = null;\n\t\t\t\t\tthis._maskFrame = null;\n\n\t\t\t\t\tthis._dirty = false;\n\n\t\t\t\t\tthis._wrapperRotation = 0;\n\t\t\t\t\tthis._wrapperScale = 1.0;\n\n\t\t\t\t\tthis._init();\n\t\t\t\t}\n\n\t\t\t\t_createClass(ImageEditor, [{\n\t\t\t\t\tkey: '_init',\n\t\t\t\t\tvalue: function _init() {\n\t\t\t\t\t\tvar _this2 = this;\n\n\t\t\t\t\t\tthis._element.className = 'slim-image-editor';\n\n\t\t\t\t\t\t// container\n\t\t\t\t\t\tthis._container = create('div', 'slim-container');\n\n\t\t\t\t\t\t// wrapper\n\t\t\t\t\t\tthis._wrapper = create('div', 'slim-wrapper');\n\n\t\t\t\t\t\t// photo crop mark container\n\t\t\t\t\t\tthis._stage = create('div', 'slim-stage');\n\t\t\t\t\t\tthis._container.appendChild(this._stage);\n\n\t\t\t\t\t\t// create crop marks\n\t\t\t\t\t\tthis._cropper = new CropArea();\n\t\t\t\t\t\tCropAreaEvents.forEach(function (e) {\n\t\t\t\t\t\t\t_this2._cropper.element.addEventListener(e, _this2);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._stage.appendChild(this._cropper.element);\n\n\t\t\t\t\t\t// canvas ghost\n\t\t\t\t\t\tthis._previewWrapper = create('div', 'slim-image-editor-preview slim-crop-preview');\n\t\t\t\t\t\tthis._previewBlurred = create('canvas', 'slim-crop-blur');\n\t\t\t\t\t\tthis._previewWrapper.appendChild(this._previewBlurred);\n\t\t\t\t\t\tthis._wrapper.appendChild(this._previewWrapper);\n\n\t\t\t\t\t\tthis._previewMask = create('div', 'slim-crop-mask');\n\t\t\t\t\t\tthis._preview = create('img');\n\t\t\t\t\t\tthis._previewMask.appendChild(this._preview);\n\t\t\t\t\t\t//this._previewWrapper.appendChild(this._preview);\n\t\t\t\t\t\tthis._cropper.element.appendChild(this._previewMask);\n\n\t\t\t\t\t\t// buttons\n\t\t\t\t\t\tthis._btnGroup = create('div', 'slim-editor-btn-group');\n\t\t\t\t\t\tImageEditor.Buttons.forEach(function (c) {\n\t\t\t\t\t\t\tvar prop = capitalizeFirstLetter(c);\n\t\t\t\t\t\t\tvar label = _this2._options['button' + prop + 'Label'];\n\t\t\t\t\t\t\tvar title = _this2._options['button' + prop + 'Title'];\n\t\t\t\t\t\t\tvar className = _this2._options['button' + prop + 'ClassName'];\n\t\t\t\t\t\t\tvar btn = create('button', 'slim-editor-btn slim-btn-' + c + (className ? ' ' + className : ''));\n\t\t\t\t\t\t\tbtn.innerHTML = label;\n\t\t\t\t\t\t\tbtn.title = title || label;\n\t\t\t\t\t\t\tbtn.type = 'button';\n\t\t\t\t\t\t\tbtn.setAttribute('data-action', c);\n\t\t\t\t\t\t\tbtn.addEventListener('click', _this2);\n\t\t\t\t\t\t\t_this2._btnGroup.appendChild(btn);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// utils\n\t\t\t\t\t\tthis._utilsGroup = create('div', 'slim-editor-utils-group');\n\n\t\t\t\t\t\t// create rotation button\n\t\t\t\t\t\tvar btn = create('button', 'slim-editor-utils-btn slim-btn-rotate' + (this._options.buttonRotateClassName ? ' ' + this._options.buttonRotateClassName : ''));\n\t\t\t\t\t\tbtn.setAttribute('data-action', 'rotate');\n\t\t\t\t\t\tbtn.addEventListener('click', this);\n\t\t\t\t\t\tbtn.title = this._options.buttonRotateTitle;\n\t\t\t\t\t\tthis._utilsGroup.appendChild(btn);\n\n\t\t\t\t\t\tthis._container.appendChild(this._wrapper);\n\n\t\t\t\t\t\tthis._element.appendChild(this._container);\n\t\t\t\t\t\tthis._element.appendChild(this._utilsGroup);\n\t\t\t\t\t\tthis._element.appendChild(this._btnGroup);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'dirty',\n\t\t\t\t\tvalue: function dirty() {\n\t\t\t\t\t\tthis._dirty = true;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'handleEvent',\n\t\t\t\t\tvalue: function handleEvent(e) {\n\n\t\t\t\t\t\tswitch (e.type) {\n\t\t\t\t\t\t\tcase 'click':\n\t\t\t\t\t\t\t\tthis._onClick(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'change':\n\t\t\t\t\t\t\t\tthis._onGridChange(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'input':\n\t\t\t\t\t\t\t\tthis._onGridInput(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'keydown':\n\t\t\t\t\t\t\t\tthis._onKeyDown(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'resize':\n\t\t\t\t\t\t\t\tthis._onResize(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onKeyDown',\n\t\t\t\t\tvalue: function _onKeyDown(e) {\n\n\t\t\t\t\t\tswitch (e.keyCode) {\n\t\t\t\t\t\t\tcase Key.RETURN:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis._confirm();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase Key.ESC:\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis._cancel();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onClick',\n\t\t\t\t\tvalue: function _onClick(e) {\n\n\t\t\t\t\t\tif (e.target.classList.contains('slim-btn-cancel')) {\n\t\t\t\t\t\t\tthis._cancel();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (e.target.classList.contains('slim-btn-confirm')) {\n\t\t\t\t\t\t\tthis._confirm();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (e.target.classList.contains('slim-btn-rotate')) {\n\t\t\t\t\t\t\tthis._rotate();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onResize',\n\t\t\t\t\tvalue: function _onResize() {\n\n\t\t\t\t\t\t// remember window size\n\t\t\t\t\t\tthis._currentWindowSize = {\n\t\t\t\t\t\t\twidth: window.innerWidth,\n\t\t\t\t\t\t\theight: window.innerHeight\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// redraw the image editor based on new dimensions\n\t\t\t\t\t\tthis._redraw();\n\n\t\t\t\t\t\tthis._redrawCropper(this._cropper.area);\n\n\t\t\t\t\t\tthis._updateWrapperScale();\n\n\t\t\t\t\t\t// apply rotation and scale\n\t\t\t\t\t\tthis._redrawWrapper();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_redrawWrapper',\n\t\t\t\t\tvalue: function _redrawWrapper() {\n\t\t\t\t\t\tvar matrix = snabbt.createMatrix();\n\t\t\t\t\t\tmatrix.scale(this._wrapperScale, this._wrapperScale);\n\t\t\t\t\t\tmatrix.rotateZ(this._wrapperRotation * (Math.PI / 180));\n\t\t\t\t\t\tsnabbt.setElementTransform(this._previewWrapper, matrix);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onGridInput',\n\t\t\t\t\tvalue: function _onGridInput() {\n\n\t\t\t\t\t\tthis._redrawCropMask();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onGridChange',\n\t\t\t\t\tvalue: function _onGridChange() {\n\n\t\t\t\t\t\tthis._redrawCropMask();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_updateWrapperRotation',\n\t\t\t\t\tvalue: function _updateWrapperRotation() {\n\n\t\t\t\t\t\tif (this._options.minSize.width > this._input.height || this._options.minSize.height > this._input.width) {\n\t\t\t\t\t\t\tthis._wrapperRotation += 180;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._wrapperRotation += 90;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_updateWrapperScale',\n\t\t\t\t\tvalue: function _updateWrapperScale() {\n\n\t\t\t\t\t\t// test if is tilted\n\t\t\t\t\t\tvar isTilted = this._wrapperRotation % 180 !== 0;\n\n\t\t\t\t\t\t// if tilted determine correct scale factor\n\t\t\t\t\t\tif (isTilted) {\n\n\t\t\t\t\t\t\t// maximum size\n\t\t\t\t\t\t\tvar maxWidth = this._container.offsetWidth;\n\t\t\t\t\t\t\tvar maxHeight = this._container.offsetHeight;\n\n\t\t\t\t\t\t\t// get wrapper size\n\t\t\t\t\t\t\tvar wrapperWidth = this._wrapper.offsetHeight;\n\t\t\t\t\t\t\tvar wrapperHeight = this._wrapper.offsetWidth;\n\n\t\t\t\t\t\t\tvar scalar = maxWidth / wrapperWidth;\n\t\t\t\t\t\t\tif (scalar * wrapperHeight > maxHeight) {\n\t\t\t\t\t\t\t\tscalar = maxHeight / wrapperHeight;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._wrapperScale = scalar;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._wrapperScale = 1.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\r\n      * Action handlers\r\n      */\n\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_cancel',\n\t\t\t\t\tvalue: function _cancel() {\n\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('cancel'));\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_confirm',\n\t\t\t\t\tvalue: function _confirm() {\n\n\t\t\t\t\t\tvar isTilted = this._wrapperRotation % 180 !== 0;\n\t\t\t\t\t\tvar area = this._cropper.area;\n\n\t\t\t\t\t\tvar result = scaleRect(area, isTilted ? this._input.height : this._input.width, isTilted ? this._input.width : this._input.height);\n\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('confirm', {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\trotation: this._wrapperRotation % 360,\n\t\t\t\t\t\t\t\tcrop: result\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_rotate',\n\t\t\t\t\tvalue: function _rotate() {\n\t\t\t\t\t\tvar _this3 = this;\n\n\t\t\t\t\t\t// rotate!\n\t\t\t\t\t\tthis._updateWrapperRotation();\n\n\t\t\t\t\t\t// only pass current rect if is 1:1 or free\n\t\t\t\t\t\tvar rect = this.ratio === 1 || this._ratio === null ? this._cropper.area : null;\n\t\t\t\t\t\tif (rect) {\n\t\t\t\t\t\t\trotate(rect, 90);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// wrapper might also need to be scaled\n\t\t\t\t\t\tthis._updateWrapperScale();\n\n\t\t\t\t\t\t// hide the cropper\n\t\t\t\t\t\tthis._hideCropper();\n\n\t\t\t\t\t\t// rotation effect\n\t\t\t\t\t\tsnabbt(this._previewWrapper, {\n\t\t\t\t\t\t\trotation: [0, 0, this._wrapperRotation * (Math.PI / 180)],\n\t\t\t\t\t\t\tscale: [this._wrapperScale, this._wrapperScale],\n\t\t\t\t\t\t\teasing: 'spring',\n\t\t\t\t\t\t\tspringConstant: .8,\n\t\t\t\t\t\t\tspringDeceleration: .65,\n\t\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\t\t// redraws auto cropper\n\t\t\t\t\t\t\t\t_this3._redrawCropper(rect);\n\n\t\t\t\t\t\t\t\t// shows the cropper\n\t\t\t\t\t\t\t\t_this3._showCropper();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_showCropper',\n\t\t\t\t\tvalue: function _showCropper() {\n\n\t\t\t\t\t\tsnabbt(this._stage, {\n\t\t\t\t\t\t\teasing: 'ease',\n\t\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\topacity: 1.0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_hideCropper',\n\t\t\t\t\tvalue: function _hideCropper() {\n\n\t\t\t\t\t\tsnabbt(this._stage, {\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\topacity: 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_redrawCropMask',\n\t\t\t\t\tvalue: function _redrawCropMask() {\n\t\t\t\t\t\tvar _this4 = this;\n\n\t\t\t\t\t\t// get rotation\n\t\t\t\t\t\tvar rotation = this._wrapperRotation % 360;\n\n\t\t\t\t\t\t// get scale\n\t\t\t\t\t\tvar scale = this._wrapperScale;\n\n\t\t\t\t\t\t// get image size\n\t\t\t\t\t\tvar canvas = {\n\t\t\t\t\t\t\twidth: this._wrapper.offsetWidth,\n\t\t\t\t\t\t\theight: this._wrapper.offsetHeight\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// get default mask cropper area\n\t\t\t\t\t\tvar mask = this._cropper.area;\n\t\t\t\t\t\tvar preview = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (rotation === 0) {\n\t\t\t\t\t\t\tpreview.x = -mask.x;\n\t\t\t\t\t\t\tpreview.y = -mask.y;\n\t\t\t\t\t\t} else if (rotation === 90) {\n\t\t\t\t\t\t\tpreview.x = -(1 - mask.y);\n\t\t\t\t\t\t\tpreview.y = -mask.x;\n\t\t\t\t\t\t} else if (rotation === 180) {\n\t\t\t\t\t\t\tpreview.x = -(1 - mask.x);\n\t\t\t\t\t\t\tpreview.y = -(1 - mask.y);\n\t\t\t\t\t\t} else if (rotation === 270) {\n\t\t\t\t\t\t\tpreview.x = -mask.y;\n\t\t\t\t\t\t\tpreview.y = -(1 - mask.x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// scale rect to fit canvas\n\t\t\t\t\t\tpreview.x *= canvas.width;\n\t\t\t\t\t\tpreview.y *= canvas.height;\n\n\t\t\t\t\t\t// update on next frame (so it's in sync with crop area redraw)\n\t\t\t\t\t\tcancelAnimationFrame(this._maskFrame);\n\t\t\t\t\t\tthis._maskFrame = requestAnimationFrame(function () {\n\n\t\t\t\t\t\t\tvar transform = 'scale(' + scale + ') rotate(' + -rotation + 'deg) translate(' + preview.x + 'px, ' + preview.y + 'px);';\n\t\t\t\t\t\t\t_this4._preview.style.cssText = '\\n\\t\\t\\t\\t\\twidth: ' + _this4._previewSize.width + 'px;\\n\\t\\t\\t\\t\\theight: ' + _this4._previewSize.height + 'px;\\n\\t\\t\\t\\t\\t-webkit-transform: ' + transform + ';\\n\\t\\t\\t\\t\\ttransform: ' + transform + ';\\n\\t\\t\\t\\t';\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'open',\n\t\t\t\t\tvalue: function open(image, ratio, crop, rotation, complete) {\n\t\t\t\t\t\tvar _this5 = this;\n\n\t\t\t\t\t\t// test if is same image\n\t\t\t\t\t\tif (this._input && !this._dirty && this._ratio === ratio) {\n\t\t\t\t\t\t\tcomplete();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// remember current window size\n\t\t\t\t\t\tthis._currentWindowSize = {\n\t\t\t\t\t\t\twidth: window.innerWidth,\n\t\t\t\t\t\t\theight: window.innerHeight\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// reset dirty value\n\t\t\t\t\t\tthis._dirty = false;\n\n\t\t\t\t\t\t// reset rotation\n\t\t\t\t\t\tthis._wrapperRotation = rotation || 0;\n\n\t\t\t\t\t\t// we'll always have to blur the preview of a newly opened image\n\t\t\t\t\t\tthis._blurredPreview = false;\n\n\t\t\t\t\t\t// set ratio\n\t\t\t\t\t\tthis._ratio = ratio;\n\n\t\t\t\t\t\t// reset preview size\n\t\t\t\t\t\tthis._previewSize = null;\n\n\t\t\t\t\t\t// hide editor\n\t\t\t\t\t\tthis._element.style.opacity = '0';\n\n\t\t\t\t\t\t// set as new input image\n\t\t\t\t\t\tthis._input = image;\n\n\t\t\t\t\t\t// calculate crop\n\t\t\t\t\t\tvar tilted = rotation % 180 !== 0;\n\t\t\t\t\t\tvar relativeCrop = divideRect(crop, tilted ? image.height : image.width, tilted ? image.width : image.height);\n\n\t\t\t\t\t\t// preview has now loaded\n\t\t\t\t\t\tthis._preview.onload = function () {\n\n\t\t\t\t\t\t\t// reset onload listener\n\t\t\t\t\t\t\t_this5._preview.onload = null;\n\n\t\t\t\t\t\t\t// setup cropper\n\t\t\t\t\t\t\t_this5._cropper.ratio = _this5.ratio;\n\n\t\t\t\t\t\t\t// redraw view (for first time)\n\t\t\t\t\t\t\t_this5._redraw();\n\n\t\t\t\t\t\t\t// redraw cropper\n\t\t\t\t\t\t\t_this5._redrawCropper(relativeCrop);\n\n\t\t\t\t\t\t\t// done\n\t\t\t\t\t\t\tcomplete();\n\n\t\t\t\t\t\t\t// fade in\n\t\t\t\t\t\t\t_this5._element.style.opacity = '';\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// load lower resolution preview image\n\t\t\t\t\t\tthis._preview.src = cloneCanvasScaled(this._input, Math.min(this._container.offsetWidth / this._input.width, this._container.offsetHeight / this._input.height)).toDataURL();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_redrawCropper',\n\t\t\t\t\tvalue: function _redrawCropper(rect) {\n\n\t\t\t\t\t\tvar isTilted = this._wrapperRotation % 180 !== 0;\n\n\t\t\t\t\t\t// image ratio\n\t\t\t\t\t\tvar imageRatio = isTilted ? this._input.height / this._input.width : this._input.width / this._input.height;\n\n\t\t\t\t\t\t// get dimensions of image wrapper\n\t\t\t\t\t\tvar width = this._wrapper.offsetWidth;\n\t\t\t\t\t\tvar height = this._wrapper.offsetHeight;\n\n\t\t\t\t\t\t// get space\n\t\t\t\t\t\tvar maxWidth = this._container.offsetWidth;\n\t\t\t\t\t\tvar maxHeight = this._container.offsetHeight;\n\n\t\t\t\t\t\t// rescale wrapper\n\t\t\t\t\t\tthis._updateWrapperScale();\n\n\t\t\t\t\t\t// position cropper container to fit wrapper\n\t\t\t\t\t\tvar sw = this._wrapperScale * (isTilted ? height : width);\n\t\t\t\t\t\tvar sh = this._wrapperScale * (isTilted ? width : height);\n\t\t\t\t\t\tvar sx = isTilted ? (maxWidth - sw) * .5 : this._wrapper.offsetLeft;\n\t\t\t\t\t\tvar sy = isTilted ? (maxHeight - sh) * .5 : this._wrapper.offsetTop;\n\n\t\t\t\t\t\tthis._stage.style.cssText = '\\n\\t\\t\\t\\tleft:' + sx + 'px;\\n\\t\\t\\t\\ttop:' + sy + 'px;\\n\\t\\t\\t\\twidth:' + sw + 'px;\\n\\t\\t\\t\\theight:' + sh + 'px;\\n\\t\\t\\t';\n\n\t\t\t\t\t\t// set new size limit for crops\n\t\t\t\t\t\t// use image ratio so we have exact amount of pixels\n\t\t\t\t\t\tthis._cropper.limit(sw, sw / imageRatio);\n\t\t\t\t\t\tthis._cropper.offset(sx + this._element.offsetLeft, sy + this._element.offsetTop);\n\n\t\t\t\t\t\t// set min and max height of cropper\n\t\t\t\t\t\tthis._cropper.minWidth = this._wrapperScale * this._options.minSize.width * this.scalar;\n\t\t\t\t\t\tthis._cropper.minHeight = this._wrapperScale * this._options.minSize.height * this.scalar;\n\n\t\t\t\t\t\t// set crop rect\n\t\t\t\t\t\tvar crop = null;\n\t\t\t\t\t\tif (rect) {\n\t\t\t\t\t\t\tcrop = {\n\t\t\t\t\t\t\t\tx: rect.x * sw,\n\t\t\t\t\t\t\t\ty: rect.y * sh,\n\t\t\t\t\t\t\t\twidth: rect.width * sw,\n\t\t\t\t\t\t\t\theight: rect.height * sh\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcrop = getAutoCropRect(sw, sh, this._ratio || sh / sw);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._cropper.resize(crop.x, crop.y, crop.width, crop.height);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_redraw',\n\t\t\t\t\tvalue: function _redraw() {\n\n\t\t\t\t\t\t// image ratio\n\t\t\t\t\t\tvar ratio = this._input.height / this._input.width;\n\n\t\t\t\t\t\t// determine rounded size\n\t\t\t\t\t\tvar maxWidth = this._container.clientWidth;\n\t\t\t\t\t\tvar maxHeight = this._container.clientHeight;\n\n\t\t\t\t\t\tvar width = maxWidth;\n\t\t\t\t\t\tvar height = width * ratio;\n\n\t\t\t\t\t\tif (height > maxHeight) {\n\t\t\t\t\t\t\theight = maxHeight;\n\t\t\t\t\t\t\twidth = height / ratio;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twidth = Math.round(width);\n\t\t\t\t\t\theight = Math.round(height);\n\n\t\t\t\t\t\t// rescale and recenter wrapper\n\t\t\t\t\t\tvar x = (maxWidth - width) / 2;\n\t\t\t\t\t\tvar y = (maxHeight - height) / 2;\n\n\t\t\t\t\t\tthis._wrapper.style.cssText = '\\n\\t\\t\\t\\tleft:' + x + 'px;\\n\\t\\t\\t\\ttop:' + y + 'px;\\n\\t\\t\\t\\twidth:' + width + 'px;\\n\\t\\t\\t\\theight:' + height + 'px;\\n\\t\\t\\t';\n\n\t\t\t\t\t\t// set image size based on container dimensions\n\t\t\t\t\t\tthis._previewBlurred.style.cssText = '\\n\\t\\t\\t\\twidth:' + width + 'px;\\n\\t\\t\\t\\theight:' + height + 'px;\\n\\t\\t\\t';\n\n\t\t\t\t\t\tthis._preview.style.cssText = '\\n\\t\\t\\t\\twidth:' + width + 'px;\\n\\t\\t\\t\\theight:' + height + 'px;\\n\\t\\t\\t';\n\n\t\t\t\t\t\tthis._previewSize = {\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: height\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// scale and blur the blurry preview\n\t\t\t\t\t\tif (!this._blurredPreview) {\n\n\t\t\t\t\t\t\tthis._previewBlurred.width = 300;\n\t\t\t\t\t\t\tthis._previewBlurred.height = this._previewBlurred.width * ratio;\n\n\t\t\t\t\t\t\tcopyCanvas(this._input, this._previewBlurred);\n\n\t\t\t\t\t\t\tblurCanvas(this._previewBlurred, 3);\n\n\t\t\t\t\t\t\tthis._blurredPreview = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'show',\n\t\t\t\t\tvalue: function show() {\n\t\t\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n\t\t\t\t\t\t// test if window size has changed since previous showing\n\t\t\t\t\t\tif (this._currentWindowSize.width !== window.innerWidth || this._currentWindowSize.height !== window.innerHeight) {\n\n\t\t\t\t\t\t\t// if so, reposition elements\n\t\t\t\t\t\t\tthis._redraw();\n\n\t\t\t\t\t\t\t// redraw cropper position\n\t\t\t\t\t\t\tthis._redrawCropper(this._cropper.area);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// listen to keydown so we can close or confirm with RETURN / ESC\n\t\t\t\t\t\tdocument.addEventListener('keydown', this);\n\n\t\t\t\t\t\t// when window is scaled we want to resize the editor\n\t\t\t\t\t\twindow.addEventListener('resize', this);\n\n\t\t\t\t\t\t// fade in preview\n\t\t\t\t\t\tvar rotation = this._wrapperRotation * (Math.PI / 180);\n\t\t\t\t\t\tsnabbt(this._previewWrapper, {\n\t\t\t\t\t\t\tfromRotation: [0, 0, rotation],\n\t\t\t\t\t\t\trotation: [0, 0, rotation],\n\t\t\t\t\t\t\tfromPosition: [0, 0, 0],\n\t\t\t\t\t\t\tposition: [0, 0, 0],\n\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tfromScale: [this._wrapperScale - .02, this._wrapperScale - .02],\n\t\t\t\t\t\t\tscale: [this._wrapperScale, this._wrapperScale],\n\t\t\t\t\t\t\teasing: 'spring',\n\t\t\t\t\t\t\tspringConstant: .3,\n\t\t\t\t\t\t\tspringDeceleration: .85,\n\t\t\t\t\t\t\tdelay: 450,\n\t\t\t\t\t\t\tcomplete: function complete() {\n\t\t\t\t\t\t\t\t// don't reset transforms because we need rotation to stick\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (this._cropper.dirty) {\n\n\t\t\t\t\t\t\t// now show cropper\n\t\t\t\t\t\t\tsnabbt(this._stage, {\n\t\t\t\t\t\t\t\tfromPosition: [0, 0, 0],\n\t\t\t\t\t\t\t\tposition: [0, 0, 0],\n\t\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\t\t\tdelay: 850,\n\t\t\t\t\t\t\t\tcomplete: function complete() {\n\t\t\t\t\t\t\t\t\tresetTransforms(this);\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// now show cropper\n\t\t\t\t\t\t\tsnabbt(this._stage, {\n\t\t\t\t\t\t\t\tfromPosition: [0, 0, 0],\n\t\t\t\t\t\t\t\tposition: [0, 0, 0],\n\t\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\t\t\tdelay: 1000,\n\t\t\t\t\t\t\t\tcomplete: function complete() {\n\t\t\t\t\t\t\t\t\tresetTransforms(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// now show buttons\n\t\t\t\t\t\tsnabbt(this._btnGroup.childNodes, {\n\t\t\t\t\t\t\tfromScale: [.9, .9],\n\t\t\t\t\t\t\tscale: [1, 1],\n\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tdelay: function delay(i) {\n\t\t\t\t\t\t\t\treturn 1000 + i * 100;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\teasing: 'spring',\n\t\t\t\t\t\t\tspringConstant: .3,\n\t\t\t\t\t\t\tspringDeceleration: .85,\n\t\t\t\t\t\t\tcomplete: function complete() {\n\t\t\t\t\t\t\t\tresetTransforms(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tsnabbt(this._utilsGroup.childNodes, {\n\t\t\t\t\t\t\tfromScale: [.9, .9],\n\t\t\t\t\t\t\tscale: [1, 1],\n\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\teasing: 'spring',\n\t\t\t\t\t\t\tspringConstant: .3,\n\t\t\t\t\t\t\tspringDeceleration: .85,\n\t\t\t\t\t\t\tdelay: 1250,\n\t\t\t\t\t\t\tcomplete: function complete() {\n\t\t\t\t\t\t\t\tresetTransforms(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'hide',\n\t\t\t\t\tvalue: function hide() {\n\t\t\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n\t\t\t\t\t\t// no more need to listen to keydown\n\t\t\t\t\t\tdocument.removeEventListener('keydown', this);\n\n\t\t\t\t\t\t// no more need to resize editor when window is scaled\n\t\t\t\t\t\twindow.removeEventListener('resize', this);\n\n\t\t\t\t\t\t// fade out buttons\n\t\t\t\t\t\tsnabbt(this._utilsGroup.childNodes, {\n\t\t\t\t\t\t\tfromOpacity: 1,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\tduration: 250\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tsnabbt(this._btnGroup.childNodes, {\n\t\t\t\t\t\t\tfromOpacity: 1,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\tdelay: 200,\n\t\t\t\t\t\t\tduration: 350\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tsnabbt([this._stage, this._previewWrapper], {\n\t\t\t\t\t\t\tfromPosition: [0, 0, 0],\n\t\t\t\t\t\t\tposition: [0, -250, 0],\n\t\t\t\t\t\t\tfromOpacity: 1,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\teasing: 'spring',\n\t\t\t\t\t\t\tspringConstant: .3,\n\t\t\t\t\t\t\tspringDeceleration: .75,\n\t\t\t\t\t\t\tdelay: 250,\n\t\t\t\t\t\t\tallDone: function allDone() {\n\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'destroy',\n\t\t\t\t\tvalue: function destroy() {\n\t\t\t\t\t\tvar _this6 = this;\n\n\t\t\t\t\t\tnodeListToArray(this._btnGroup.children).forEach(function (btn) {\n\t\t\t\t\t\t\tbtn.removeEventListener('click', _this6);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tCropAreaEvents.forEach(function (e) {\n\t\t\t\t\t\t\t_this6._cropper.element.removeEventListener(e, _this6);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis._cropper.destroy();\n\n\t\t\t\t\t\t// if still attached to DOM, detach\n\t\t\t\t\t\tif (this._element.parentNode) {\n\t\t\t\t\t\t\tremoveElement(this._element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'showRotateButton',\n\t\t\t\t\tset: function set(enabled) {\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\tthis._element.classList.remove('slim-rotation-disabled');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._element.classList.add('slim-rotation-disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'element',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._element;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'ratio',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\tif (this._ratio === 'input') {\n\t\t\t\t\t\t\treturn this._input.height / this._input.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this._ratio;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'offset',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._element.getBoundingClientRect();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'original',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._input;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'scalar',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._previewSize.width / this._input.width;\n\t\t\t\t\t}\n\t\t\t\t}], [{\n\t\t\t\t\tkey: 'options',\n\t\t\t\t\tvalue: function options() {\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tbuttonCancelClassName: null,\n\t\t\t\t\t\t\tbuttonConfirmClassName: null,\n\t\t\t\t\t\t\tbuttonCancelLabel: 'Cancel',\n\t\t\t\t\t\t\tbuttonConfirmLabel: 'Confirm',\n\t\t\t\t\t\t\tbuttonCancelTitle: null,\n\t\t\t\t\t\t\tbuttonConfirmTitle: null,\n\n\t\t\t\t\t\t\tbuttonRotateTitle: 'Rotate',\n\t\t\t\t\t\t\tbuttonRotateClassName: null,\n\n\t\t\t\t\t\t\tminSize: {\n\t\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\t\theight: 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn ImageEditor;\n\t\t\t}();\n\n\t\t\tImageEditor.Buttons = ['cancel', 'confirm'];\n\n\t\t\treturn ImageEditor;\n\t\t}(CropArea);\n\t\tvar FileHopper = function () {\n\n\t\t\t/**\r\n    * FileHopper\r\n    * @param element\r\n    * @param options\r\n    * @constructor\r\n    */\n\t\t\tvar DragDropEvents = ['dragenter', 'dragover', 'dragleave', 'drop'];\n\n\t\t\treturn function () {\n\t\t\t\tfunction FileHopper() {\n\t\t\t\t\tvar element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.createElement('div');\n\n\t\t\t\t\t_classCallCheck(this, FileHopper);\n\n\t\t\t\t\tthis._element = element;\n\t\t\t\t\tthis._accept = [];\n\t\t\t\t\tthis._allowURLs = false;\n\n\t\t\t\t\tthis._dragPath = null;\n\n\t\t\t\t\tthis._init();\n\t\t\t\t}\n\n\t\t\t\t// public properties\n\n\n\t\t\t\t_createClass(FileHopper, [{\n\t\t\t\t\tkey: 'isValidDataTransfer',\n\t\t\t\t\tvalue: function isValidDataTransfer(dataTransfer) {\n\n\t\t\t\t\t\tif (dataTransfer.files && dataTransfer.files.length) {\n\t\t\t\t\t\t\treturn this.areValidDataTransferFiles(dataTransfer.files);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dataTransfer.items && dataTransfer.items.length) {\n\t\t\t\t\t\t\treturn this.areValidDataTransferItems(dataTransfer.items);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'areValidDataTransferFiles',\n\t\t\t\t\tvalue: function areValidDataTransferFiles(files) {\n\t\t\t\t\t\tif (this._accept.length && files) {\n\t\t\t\t\t\t\treturn this._accept.indexOf(files[0].type) !== -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'areValidDataTransferItems',\n\t\t\t\t\tvalue: function areValidDataTransferItems(items) {\n\n\t\t\t\t\t\tif (this._accept.length && items) {\n\n\t\t\t\t\t\t\t// is possibly dropping url\n\t\t\t\t\t\t\tif (this._allowURLs && items[0].kind === 'string') {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// is http website so firefox will not return file type\n\t\t\t\t\t\t\tif (items[0].type && items[0].type.indexOf('application') === 0) {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn this._accept.indexOf(items[0].type) !== -1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// public methods\n\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'reset',\n\t\t\t\t\tvalue: function reset() {\n\t\t\t\t\t\tthis._element.files = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// private\n\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_init',\n\t\t\t\t\tvalue: function _init() {\n\t\t\t\t\t\tvar _this7 = this;\n\n\t\t\t\t\t\tthis._element.className = 'slim-file-hopper';\n\n\t\t\t\t\t\tDragDropEvents.forEach(function (e) {\n\t\t\t\t\t\t\t_this7._element.addEventListener(e, _this7);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// the input has changed\n\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'handleEvent',\n\t\t\t\t\tvalue: function handleEvent(e) {\n\n\t\t\t\t\t\tswitch (e.type) {\n\t\t\t\t\t\t\tcase 'dragenter':\n\t\t\t\t\t\t\tcase 'dragover':\n\t\t\t\t\t\t\t\tthis._onDragOver(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'dragleave':\n\t\t\t\t\t\t\t\tthis._onDragLeave(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'drop':\n\t\t\t\t\t\t\t\tthis._onDrop(e);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onDrop',\n\t\t\t\t\tvalue: function _onDrop(e) {\n\n\t\t\t\t\t\t// prevents browser from opening image\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t// test if a url was dropped\n\t\t\t\t\t\tvar remote = null;\n\n\t\t\t\t\t\tif (this._allowURLs) {\n\n\t\t\t\t\t\t\tvar url = void 0;\n\t\t\t\t\t\t\tvar meta = void 0;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\turl = e.dataTransfer.getData('url');\n\t\t\t\t\t\t\t\tmeta = e.dataTransfer.getData('text/html');\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t// nope nope nope (ie11 trouble)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (meta && meta.length) {\n\t\t\t\t\t\t\t\tvar parsed = meta.match(/src\\s*=\\s*\"(.+?)\"/);\n\t\t\t\t\t\t\t\tif (parsed) {\n\t\t\t\t\t\t\t\t\tremote = parsed[1];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (url && url.length) {\n\t\t\t\t\t\t\t\tremote = url;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (remote) {\n\t\t\t\t\t\t\tthis._element.files = [{ remote: remote }];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// nope, must have been a file\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\t\t// test type in older browsers\n\t\t\t\t\t\t\t\tvar filesValidity = this.isValidDataTransfer(e.dataTransfer);\n\t\t\t\t\t\t\t\tif (!filesValidity) {\n\n\t\t\t\t\t\t\t\t\t// invalid files, stop here\n\t\t\t\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-invalid-drop'));\n\n\t\t\t\t\t\t\t\t\t// no longer hovering\n\t\t\t\t\t\t\t\t\tthis._dragPath = null;\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// store dropped files on element files property, so can be accessed by same function as file input handler\n\t\t\t\t\t\t\t\tthis._element.files = e.dataTransfer.files;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// file has been dropped\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-drop', {\n\t\t\t\t\t\t\tdetail: getOffsetByEvent(e)\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t// file list has changed, let's notify others\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\n\n\t\t\t\t\t\t// no longer hovering\n\t\t\t\t\t\tthis._dragPath = null;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onDragOver',\n\t\t\t\t\tvalue: function _onDragOver(e) {\n\n\t\t\t\t\t\t// prevents browser from opening image\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t// set drop effect\n\t\t\t\t\t\te.dataTransfer.dropEffect = 'copy';\n\n\t\t\t\t\t\t// determin if is valid data\n\t\t\t\t\t\tvar dataValidity = this.isValidDataTransfer(e.dataTransfer);\n\t\t\t\t\t\t// if validity is null is undetermined\n\t\t\t\t\t\tif (dataValidity !== null && !dataValidity) {\n\n\t\t\t\t\t\t\t// indicate drop mode to user\n\t\t\t\t\t\t\te.dataTransfer.dropEffect = 'none';\n\n\t\t\t\t\t\t\t// invalid files, stop here\n\t\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-invalid'));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// now hovering file over the area\n\t\t\t\t\t\tif (!this._dragPath) {\n\t\t\t\t\t\t\tthis._dragPath = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// push location\n\t\t\t\t\t\tthis._dragPath.push(getOffsetByEvent(e));\n\n\t\t\t\t\t\t// file is hovering over element\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-over', {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\tx: last(this._dragPath).x,\n\t\t\t\t\t\t\t\ty: last(this._dragPath).y\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: '_onDragLeave',\n\t\t\t\t\tvalue: function _onDragLeave(e) {\n\n\t\t\t\t\t\t// user has dragged file out of element area\n\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-out', {\n\t\t\t\t\t\t\tdetail: getOffsetByEvent(e)\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t// now longer hovering file\n\t\t\t\t\t\tthis._dragPath = null;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'destroy',\n\t\t\t\t\tvalue: function destroy() {\n\t\t\t\t\t\tvar _this8 = this;\n\n\t\t\t\t\t\tDragDropEvents.forEach(function (e) {\n\t\t\t\t\t\t\t_this8._element.removeEventListener(e, _this8);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tremoveElement(this._element);\n\n\t\t\t\t\t\tthis._element = null;\n\t\t\t\t\t\tthis._dragPath = null;\n\t\t\t\t\t\tthis._accept = null;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'element',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._element;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'dragPath',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._dragPath;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'enabled',\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._element.style.display === '';\n\t\t\t\t\t},\n\t\t\t\t\tset: function set(value) {\n\t\t\t\t\t\tthis._element.style.display = value ? '' : 'none';\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'allowURLs',\n\t\t\t\t\tset: function set(value) {\n\t\t\t\t\t\tthis._allowURLs = value;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'accept',\n\t\t\t\t\tset: function set(mimetypes) {\n\t\t\t\t\t\tthis._accept = mimetypes;\n\t\t\t\t\t},\n\t\t\t\t\tget: function get() {\n\t\t\t\t\t\treturn this._accept;\n\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn FileHopper;\n\t\t\t}();\n\t\t}();\n\t\tvar Popover = function () {\n\n\t\t\t/**\r\n    * Popover\r\n    */\n\t\t\treturn function () {\n\t\t\t\tfunction Popover() {\n\t\t\t\t\t_classCallCheck(this, Popover);\n\n\t\t\t\t\tthis._element = null;\n\t\t\t\t\tthis._inner = null;\n\n\t\t\t\t\tthis._init();\n\t\t\t\t}\n\n\t\t\t\t_createClass(Popover, [{\n\t\t\t\t\tkey: '_init',\n\t\t\t\t\tvalue: function _init() {\n\n\t\t\t\t\t\tthis._element = create('div', 'slim-popover');\n\t\t\t\t\t\tthis._element.setAttribute('data-state', 'off');\n\t\t\t\t\t\tdocument.body.appendChild(this._element);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'show',\n\t\t\t\t\tvalue: function show() {\n\t\t\t\t\t\tvar _this9 = this;\n\n\t\t\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n\t\t\t\t\t\t// turn on\n\t\t\t\t\t\tthis._element.setAttribute('data-state', 'on');\n\n\t\t\t\t\t\t// show and animate in\n\t\t\t\t\t\tsnabbt(this._element, {\n\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tduration: 350,\n\t\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\t\t// clean up transforms\n\t\t\t\t\t\t\t\tresetTransforms(_this9._element);\n\n\t\t\t\t\t\t\t\t// ready!\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'hide',\n\t\t\t\t\tvalue: function hide() {\n\t\t\t\t\t\tvar _this10 = this;\n\n\t\t\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n\t\t\t\t\t\t// animate out and hide\n\t\t\t\t\t\tsnabbt(this._element, {\n\t\t\t\t\t\t\tfromOpacity: 1,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\t\t// clean up transforms\n\t\t\t\t\t\t\t\tresetTransforms(_this10._element);\n\n\t\t\t\t\t\t\t\t// hide the editor\n\t\t\t\t\t\t\t\t_this10._element.setAttribute('data-state', 'off');\n\n\t\t\t\t\t\t\t\t// ready!\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'destroy',\n\t\t\t\t\tvalue: function destroy() {\n\t\t\t\t\t\tif (!this._element.parentNode) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._element.parentNode.removeChild(this._element);\n\t\t\t\t\t\tthis._element = null;\n\t\t\t\t\t\tthis._inner = null;\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'inner',\n\t\t\t\t\tset: function set(element) {\n\n\t\t\t\t\t\tthis._inner = element;\n\t\t\t\t\t\tif (this._element.firstChild) {\n\t\t\t\t\t\t\tthis._element.removeChild(this._element.firstChild);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._element.appendChild(this._inner);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tkey: 'className',\n\t\t\t\t\tset: function set(value) {\n\t\t\t\t\t\tthis._element.className = 'slim-popover' + (value === null ? '' : ' ' + value);\n\t\t\t\t\t}\n\t\t\t\t}]);\n\n\t\t\t\treturn Popover;\n\t\t\t}();\n\t\t}();\n\t\tvar intSplit = function intSplit(v, c) {\n\t\t\treturn v.split(c).map(function (v) {\n\t\t\t\treturn parseInt(v, 10);\n\t\t\t});\n\t\t};\n\n\t\tvar isWrapper = function isWrapper(element) {\n\t\t\treturn element.nodeName === 'DIV' || element.nodeName === 'SPAN';\n\t\t};\n\n\t\tvar CropType = {\n\t\t\tAUTO: 'auto',\n\t\t\tINITIAL: 'initial',\n\t\t\tMANUAL: 'manual'\n\t\t};\n\n\t\tvar Rect = ['x', 'y', 'width', 'height'];\n\n\t\tvar HopperEvents = ['file-invalid-drop', 'file-invalid', 'file-drop', 'file-over', 'file-out', 'click'];\n\n\t\tvar ImageEditorEvents = ['cancel', 'confirm'];\n\n\t\tvar SlimButtons = ['remove', 'edit', 'download', 'upload'];\n\n\t\tvar SlimPopover = null;\n\t\tvar SlimCount = 0;\n\n\t\tvar SlimLoaderHTML = '\\n<div class=\"slim-loader\">\\n\\t<svg>\\n\\t\\t<path class=\"slim-loader-background\" fill=\"none\" stroke-width=\"3\" />\\n\\t\\t<path class=\"slim-loader-foreground\" fill=\"none\" stroke-width=\"3\" />\\n\\t</svg>\\n</div>\\n';\n\n\t\tvar SlimUploadStatusHTML = '\\n<div class=\"slim-upload-status\"></div>\\n';\n\n\t\tvar stringToSize = function stringToSize(str) {\n\t\t\tvar size = str.split(',');\n\t\t\treturn {\n\t\t\t\twidth: parseInt(size[0], 10),\n\t\t\t\theight: parseInt(size[1], 10)\n\t\t\t};\n\t\t};\n\n\t\tvar Slim = function () {\n\t\t\tfunction Slim(element) {\n\t\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\t\t_classCallCheck(this, Slim);\n\n\t\t\t\t// create popover element if not already created\n\t\t\t\tif (!SlimPopover) {\n\t\t\t\t\tSlimPopover = new Popover();\n\t\t\t\t}\n\n\t\t\t\t// we create a new counter, we use this counter to determine if we need to clean up the popover\n\t\t\t\tthis._uid = SlimCount++;\n\n\t\t\t\t// the options to use\n\t\t\t\tthis._options = mergeOptions(Slim.options(), options);\n\n\t\t\t\t// test options correctness\n\t\t\t\tif (this._options.forceSize) {\n\t\t\t\t\tif (typeof this._options.forceSize === 'string') {\n\t\t\t\t\t\tthis._options.forceSize = stringToSize(this._options.forceSize);\n\t\t\t\t\t}\n\t\t\t\t\tthis._options.ratio = this._options.forceSize.width + ':' + this._options.forceSize.height;\n\t\t\t\t\tthis._options.size = clone(this._options.forceSize);\n\t\t\t\t}\n\n\t\t\t\t// test for size set as string\n\t\t\t\tif (typeof this._options.size === 'string') {\n\t\t\t\t\tthis._options.size = stringToSize(this._options.size);\n\t\t\t\t}\n\n\t\t\t\t// test for size set as string\n\t\t\t\tif (typeof this._options.minSize === 'string') {\n\t\t\t\t\tthis._options.minSize = stringToSize(this._options.minSize);\n\t\t\t\t}\n\n\t\t\t\t// reference to original element so we can restore original situation\n\t\t\t\tthis._originalElement = element;\n\t\t\t\tthis._originalElementInner = element.innerHTML;\n\t\t\t\tthis._originalElementAttributes = getElementAttributes(element);\n\n\t\t\t\t// should be file input, image or slim wrapper, if not wrapper, wrap\n\t\t\t\tif (!isWrapper(element)) {\n\n\t\t\t\t\tthis._element = wrap(element);\n\t\t\t\t\tthis._element.className = element.className;\n\t\t\t\t\telement.className = '';\n\n\t\t\t\t\t// ratio is used for CSS so let's set default attribute\n\t\t\t\t\tthis._element.setAttribute('data-ratio', this._options.ratio);\n\t\t\t\t} else {\n\t\t\t\t\tthis._element = element;\n\t\t\t\t}\n\t\t\t\tthis._element.classList.add('slim');\n\t\t\t\tthis._element.setAttribute('data-state', 'init');\n\n\t\t\t\t// editor state\n\t\t\t\tthis._state = [];\n\n\t\t\t\t// internal timer array for async processes\n\t\t\t\tthis._timers = [];\n\n\t\t\t\t// the source element (can either be an input or an img)\n\t\t\t\tthis._input = null;\n\n\t\t\t\t// the source element unique name if is input type file\n\t\t\t\tthis._inputReference = null;\n\n\t\t\t\t// the output element (hidden input that contains the resulting json object)\n\t\t\t\tthis._output = null;\n\n\t\t\t\t// current image ratio\n\t\t\t\tthis._ratio = null;\n\n\t\t\t\t// was required field\n\t\t\t\tthis._isRequired = false;\n\n\t\t\t\t// components\n\t\t\t\tthis._imageHopper = null;\n\t\t\t\tthis._imageEditor = null;\n\n\t\t\t\t// progress path\n\t\t\t\tthis._progressEnabled = true;\n\n\t\t\t\t// resulting data\n\t\t\t\tthis._data = {};\n\t\t\t\tthis._resetData();\n\n\t\t\t\t// the circle below the mouse hover point\n\t\t\t\tthis._drip = null;\n\n\t\t\t\t// had initial image\n\t\t\t\tthis._hasInitialImage = false;\n\n\t\t\t\t// initial crop\n\t\t\t\tthis._initialCrop = this._options.crop;\n\n\t\t\t\t// initial rotation\n\t\t\t\tthis._initialRotation = this._options.rotation && this._options.rotation % 90 === 0 ? this._options.rotation : null;\n\n\t\t\t\t// set to true when destroy method is called, used to halt any timeouts or async processes\n\t\t\t\tthis._isBeingDestroyed = false;\n\n\t\t\t\t// stop here if not supported\n\t\t\t\tif (!Slim.supported) {\n\t\t\t\t\tthis._fallback();\n\t\t\t\t} else {\n\t\t\t\t\t// let's go!\n\t\t\t\t\tthis._init();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_createClass(Slim, [{\n\t\t\t\tkey: 'setRotation',\n\t\t\t\tvalue: function setRotation(rotation, callback) {\n\n\t\t\t\t\tif (typeof rotation !== 'number' && rotation % 90 !== 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._data.actions.rotation = rotation;\n\t\t\t\t\tvar isTilted = this._data.actions.rotation % 180 !== 0;\n\n\t\t\t\t\tif (this._data.input.image) {\n\t\t\t\t\t\tvar w = isTilted ? this._data.input.image.height : this._data.input.image.width;\n\t\t\t\t\t\tvar h = isTilted ? this._data.input.image.width : this._data.input.image.height;\n\t\t\t\t\t\tthis._data.actions.crop = getAutoCropRect(w, h, this._ratio);\n\t\t\t\t\t\tthis._data.actions.crop.type = CropType.AUTO;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._data.input.image && callback) {\n\t\t\t\t\t\tthis._manualTransform(callback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'setSize',\n\t\t\t\tvalue: function setSize(dimensions, callback) {\n\n\t\t\t\t\tif (typeof dimensions === 'string') {\n\t\t\t\t\t\tdimensions = stringToSize(dimensions);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!dimensions || !dimensions.width || !dimensions.height) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._options.size = clone(dimensions);\n\t\t\t\t\tthis._data.actions.size = clone(dimensions);\n\n\t\t\t\t\t// if a crop area is set do re-crop to conform to size\n\t\t\t\t\tif (this._data.input.image && callback) {\n\t\t\t\t\t\tthis._manualTransform(callback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'setRatio',\n\t\t\t\tvalue: function setRatio(ratio, callback) {\n\t\t\t\t\tvar _this11 = this;\n\n\t\t\t\t\tif (!ratio || typeof ratio !== 'string') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._options.ratio = ratio;\n\n\t\t\t\t\tif (this._isFixedRatio()) {\n\n\t\t\t\t\t\tvar parts = intSplit(this._options.ratio, ':');\n\t\t\t\t\t\tthis._ratio = parts[1] / parts[0];\n\n\t\t\t\t\t\tif (this._data.input.image && callback) {\n\t\t\t\t\t\t\tthis._cropAuto(function (data) {\n\t\t\t\t\t\t\t\t_this11._scaleDropArea(_this11._ratio);\n\t\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\t\tcallback(data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif (this._data.input.image) {\n\t\t\t\t\t\t\t\tthis._data.actions.crop = getAutoCropRect(this._data.input.image.width, this._data.input.image.height, this._ratio);\n\t\t\t\t\t\t\t\tthis._data.actions.crop.type = CropType.AUTO;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._scaleDropArea(this._ratio);\n\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// methods\n\t\t\t\t// Test if this Slim object has been bound to the given element\n\n\t\t\t}, {\n\t\t\t\tkey: 'isAttachedTo',\n\t\t\t\tvalue: function isAttachedTo(element) {\n\t\t\t\t\treturn this._element === element || this._originalElement === element;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'isDetached',\n\t\t\t\tvalue: function isDetached() {\n\t\t\t\t\treturn this._element.parentNode === null;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'load',\n\t\t\t\tvalue: function load(src) {\n\t\t\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\t\t\t\tvar callback = arguments[2];\n\n\t\t\t\t\tif (typeof options === 'function') {\n\t\t\t\t\t\tcallback = options;\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// store in options\n\t\t\t\t\t\tthis._options.crop = options.crop;\n\n\t\t\t\t\t\t// set rotation\n\t\t\t\t\t\tthis._options.rotation = options.rotation;\n\n\t\t\t\t\t\t// initial rotation\n\t\t\t\t\t\tthis._initialRotation = options.rotation && options.rotation % 90 === 0 ? options.rotation : null;\n\n\t\t\t\t\t\t// set initial crop\n\t\t\t\t\t\tthis._initialCrop = this._options.crop;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._load(src, callback);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'upload',\n\t\t\t\tvalue: function upload(callback) {\n\t\t\t\t\tthis._doUpload(callback);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'download',\n\t\t\t\tvalue: function download() {\n\t\t\t\t\tthis._doDownload();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'remove',\n\t\t\t\tvalue: function remove() {\n\t\t\t\t\treturn this._doRemove();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'destroy',\n\t\t\t\tvalue: function destroy() {\n\t\t\t\t\tthis._doDestroy();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'edit',\n\t\t\t\tvalue: function edit() {\n\t\t\t\t\tthis._doEdit();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'crop',\n\t\t\t\tvalue: function crop(rect, callback) {\n\t\t\t\t\tthis._crop(rect.x, rect.y, rect.width, rect.height, callback);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'containsImage',\n\t\t\t\tvalue: function containsImage() {\n\t\t\t\t\treturn this._data.input.name !== null;\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * State Related\r\n     */\n\n\t\t\t}, {\n\t\t\t\tkey: '_canInstantEdit',\n\t\t\t\tvalue: function _canInstantEdit() {\n\t\t\t\t\treturn this._options.instantEdit && !this._isInitialising;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getFileInput',\n\t\t\t\tvalue: function _getFileInput() {\n\t\t\t\t\treturn this._element.querySelector('input[type=file]');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getInitialImage',\n\t\t\t\tvalue: function _getInitialImage() {\n\t\t\t\t\treturn this._element.querySelector('img');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getInputElement',\n\t\t\t\tvalue: function _getInputElement() {\n\t\t\t\t\treturn this._getFileInput() || this._getInitialImage();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getRatioSpacerElement',\n\t\t\t\tvalue: function _getRatioSpacerElement() {\n\t\t\t\t\treturn this._element.children[0];\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_isImageOnly',\n\t\t\t\tvalue: function _isImageOnly() {\n\t\t\t\t\treturn this._input.nodeName !== 'INPUT';\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_isFixedRatio',\n\t\t\t\tvalue: function _isFixedRatio() {\n\t\t\t\t\treturn this._options.ratio.indexOf(':') !== -1;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_isAutoCrop',\n\t\t\t\tvalue: function _isAutoCrop() {\n\t\t\t\t\treturn this._data.actions.crop.type === CropType.AUTO;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_toggleButton',\n\t\t\t\tvalue: function _toggleButton(action, state) {\n\t\t\t\t\ttoggleDisplayBySelector('.slim-btn[data-action=\"' + action + '\"]', state, this._element);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_clearState',\n\t\t\t\tvalue: function _clearState() {\n\t\t\t\t\tthis._state = [];\n\t\t\t\t\tthis._updateState();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_removeState',\n\t\t\t\tvalue: function _removeState(state) {\n\t\t\t\t\tthis._state = this._state.filter(function (item) {\n\t\t\t\t\t\treturn item !== state;\n\t\t\t\t\t});\n\t\t\t\t\tthis._updateState();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_addState',\n\t\t\t\tvalue: function _addState(state) {\n\t\t\t\t\tif (inArray(state, this._state)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._state.push(state);\n\t\t\t\t\tthis._updateState();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_updateState',\n\t\t\t\tvalue: function _updateState() {\n\t\t\t\t\tif (!this._element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._element.setAttribute('data-state', this._state.join(','));\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_resetData',\n\t\t\t\tvalue: function _resetData() {\n\n\t\t\t\t\t// resets data object\n\t\t\t\t\tthis._data = {\n\t\t\t\t\t\tserver: null,\n\t\t\t\t\t\tmeta: clone(this._options.meta),\n\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\tfield: this._inputReference,\n\t\t\t\t\t\t\tname: null,\n\t\t\t\t\t\t\ttype: null,\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\t\tfile: null\n\t\t\t\t\t\t},\n\t\t\t\t\t\toutput: {\n\t\t\t\t\t\t\timage: null,\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\theight: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\trotation: null,\n\t\t\t\t\t\t\tcrop: null,\n\t\t\t\t\t\t\tsize: null\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// resets hidden input clone (has not yet been created when reset call in constructor, hence the check)\n\t\t\t\t\tif (this._output) {\n\t\t\t\t\t\tthis._output.value = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// should reset file input\n\t\t\t\t\tresetFileInput(this._getFileInput());\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * Initialisation\r\n     */\n\n\t\t\t}, {\n\t\t\t\tkey: '_init',\n\t\t\t\tvalue: function _init() {\n\t\t\t\t\tvar _this12 = this;\n\n\t\t\t\t\t// busy initialising\n\t\t\t\t\tthis._isInitialising = true;\n\n\t\t\t\t\t// cropper root is not file input\n\t\t\t\t\tthis._addState('empty');\n\n\t\t\t\t\t// define input reference field name\n\t\t\t\t\tif (inArray('input', this._options.post)) {\n\t\t\t\t\t\tthis._inputReference = 'slim_input_' + this._uid;\n\t\t\t\t\t}\n\n\t\t\t\t\t// get input element\n\t\t\t\t\tthis._input = this._getInputElement();\n\n\t\t\t\t\t// if no input supplied we'll automatically create one\n\t\t\t\t\tif (!this._input) {\n\t\t\t\t\t\tthis._input = create('input');\n\t\t\t\t\t\tthis._input.type = 'file';\n\t\t\t\t\t\tthis._element.appendChild(this._input);\n\t\t\t\t\t}\n\n\t\t\t\t\t// get required state of input element\n\t\t\t\t\tthis._isRequired = this._input.required === true;\n\n\t\t\t\t\t// set or create output field\n\t\t\t\t\tthis._output = this._element.querySelector('input[type=hidden]');\n\n\t\t\t\t\t// if no output element defined we'll create one automagically\n\t\t\t\t\tif (!this._output) {\n\t\t\t\t\t\tthis._output = create('input');\n\t\t\t\t\t\tthis._output.type = 'hidden';\n\t\t\t\t\t\tthis._output.name = this._input.name || this._options.defaultInputName;\n\t\t\t\t\t\tthis._element.appendChild(this._output);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar initialData = null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tinitialData = JSON.parse(this._output.value);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\tif (initialData) {\n\t\t\t\t\t\t\tvar img = new Image();\n\t\t\t\t\t\t\timg.src = initialData.output.image;\n\t\t\t\t\t\t\timg.setAttribute('data-filename', initialData.output.name);\n\t\t\t\t\t\t\tthis._element.insertBefore(img, this._element.firstChild);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// prevent the original file input field from posting (value will be duplicated to output field)\n\t\t\t\t\tthis._input.removeAttribute('name');\n\n\t\t\t\t\t// create drop area\n\t\t\t\t\tvar area = create('div', 'slim-area');\n\n\t\t\t\t\t// test if contains initial image\n\t\t\t\t\tvar initialImage = this._getInitialImage();\n\t\t\t\t\tvar initialImageSrc = (initialImage || {}).src;\n\t\t\t\t\tvar initialImageName = initialImage ? initialImage.getAttribute('data-filename') : null;\n\n\t\t\t\t\tif (initialImageSrc) {\n\t\t\t\t\t\tthis._hasInitialImage = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._initialCrop = null;\n\t\t\t\t\t\tthis._initialRotation = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar resultHTML = '\\n\\t\\t<div class=\"slim-result\">\\n\\t\\t\\t<img class=\"in\" style=\"opacity:0\" ' + (initialImageSrc ? 'src=\"' + initialImageSrc + '\"' : '') + '><img><img style=\"opacity:0\">\\n\\t\\t</div>';\n\n\t\t\t\t\t// add drop overlay\n\t\t\t\t\tif (this._isImageOnly()) {\n\t\t\t\t\t\tarea.innerHTML = '\\n\\t\\t\\t\\t' + SlimLoaderHTML + '\\n\\t\\t\\t\\t' + SlimUploadStatusHTML + '\\n\\t\\t\\t\\t' + resultHTML + '\\n\\t\\t\\t\\t<div class=\"slim-status\"><div class=\"slim-label-loading\">' + (this._options.labelLoading || '') + '</div></div>\\n\\t\\t\\t';\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// if should post input data\n\t\t\t\t\t\tif (inArray('input', this._options.post)) {\n\n\t\t\t\t\t\t\tthis._data.input.field = this._inputReference;\n\n\t\t\t\t\t\t\t// if is sync post\n\t\t\t\t\t\t\t// and should post input data\n\t\t\t\t\t\t\tif (!this._options.service) {\n\t\t\t\t\t\t\t\tthis._input.name = this._inputReference;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// set common image mime type to the accept attribute\n\t\t\t\t\t\tvar mimetypes = void 0;\n\t\t\t\t\t\tif (!this._input.hasAttribute('accept') || this._input.getAttribute('accept') === 'image/*') {\n\t\t\t\t\t\t\tmimetypes = getCommonMimeTypes();\n\t\t\t\t\t\t\tthis._input.setAttribute('accept', mimetypes.join(','));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmimetypes = this._input.accept.split(',').map(function (mimetype) {\n\t\t\t\t\t\t\t\treturn mimetype.trim();\n\t\t\t\t\t\t\t}).filter(function (mimetype) {\n\t\t\t\t\t\t\t\treturn mimetype.length > 0;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// setup hopper\n\t\t\t\t\t\tthis._imageHopper = new FileHopper();\n\t\t\t\t\t\tthis._imageHopper.accept = mimetypes;\n\t\t\t\t\t\tthis._imageHopper.allowURLs = typeof this._options.fetcher === 'string';\n\t\t\t\t\t\tthis._element.appendChild(this._imageHopper.element);\n\t\t\t\t\t\tHopperEvents.forEach(function (e) {\n\t\t\t\t\t\t\t_this12._imageHopper.element.addEventListener(e, _this12);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// render area\n\t\t\t\t\t\tarea.innerHTML = '\\n\\t\\t\\t\\t' + SlimLoaderHTML + '\\n\\t\\t\\t\\t' + SlimUploadStatusHTML + '\\n\\t\\t\\t\\t<div class=\"slim-drip\"><span><span></span></span></div>\\n\\t\\t\\t\\t<div class=\"slim-status\"><div class=\"slim-label\">' + (this._options.label || '') + '</div><div class=\"slim-label-loading\">' + (this._options.labelLoading || '') + '</div></div>\\n\\t\\t\\t\\t' + resultHTML + '\\n\\t\\t\\t';\n\n\t\t\t\t\t\t// start listening for events so we can load image on file input change\n\t\t\t\t\t\tthis._input.addEventListener('change', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add area node\n\t\t\t\t\tthis._element.appendChild(area);\n\n\t\t\t\t\t// add button group\n\t\t\t\t\tthis._btnGroup = create('div', 'slim-btn-group');\n\t\t\t\t\tthis._btnGroup.style.display = 'none';\n\t\t\t\t\tthis._element.appendChild(this._btnGroup);\n\t\t\t\t\tSlimButtons.filter(function (c) {\n\t\t\t\t\t\treturn _this12._isButtonAllowed(c);\n\t\t\t\t\t}).forEach(function (c) {\n\t\t\t\t\t\tvar prop = capitalizeFirstLetter(c);\n\t\t\t\t\t\tvar label = _this12._options['button' + prop + 'Label'];\n\t\t\t\t\t\tvar title = _this12._options['button' + prop + 'Title'] || label;\n\t\t\t\t\t\tvar className = _this12._options['button' + prop + 'ClassName'];\n\t\t\t\t\t\tvar btn = create('button', 'slim-btn slim-btn-' + c + (className ? ' ' + className : ''));\n\t\t\t\t\t\tbtn.innerHTML = label;\n\t\t\t\t\t\tbtn.title = title;\n\t\t\t\t\t\tbtn.type = 'button';\n\t\t\t\t\t\tbtn.addEventListener('click', _this12);\n\t\t\t\t\t\tbtn.setAttribute('data-action', c);\n\t\t\t\t\t\t_this12._btnGroup.appendChild(btn);\n\t\t\t\t\t});\n\n\t\t\t\t\t// add ratio padding\n\t\t\t\t\tif (this._isFixedRatio()) {\n\t\t\t\t\t\tvar parts = intSplit(this._options.ratio, ':');\n\t\t\t\t\t\tthis._ratio = parts[1] / parts[0];\n\t\t\t\t\t\tthis._scaleDropArea(this._ratio);\n\t\t\t\t\t}\n\n\t\t\t\t\t// setup loader\n\t\t\t\t\tthis._updateProgress(.5);\n\n\t\t\t\t\t// preload source\n\t\t\t\t\tif (initialImageSrc) {\n\n\t\t\t\t\t\tthis._load(initialImageSrc, function () {\n\t\t\t\t\t\t\t_this12._onInit();\n\t\t\t\t\t\t}, { name: initialImageName });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._onInit();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onInit',\n\t\t\t\tvalue: function _onInit() {\n\t\t\t\t\tvar _this13 = this;\n\n\t\t\t\t\t// we're done initialising\n\t\t\t\t\tthis._isInitialising = false;\n\n\t\t\t\t\t// done initialising now, else is only called after image load\n\t\t\t\t\tvar done = function done() {\n\t\t\t\t\t\t// we call this async so the constructor of Slim has returned before the onInit is called, allowing clean immidiate destroy\n\t\t\t\t\t\tvar timer = setTimeout(function () {\n\t\t\t\t\t\t\t_this13._options.didInit.apply(_this13, [_this13.data, _this13]);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t_this13._timers.push(timer);\n\t\t\t\t\t};\n\n\t\t\t\t\t// save initial image\n\t\t\t\t\tif (this._options.saveInitialImage && this.containsImage()) {\n\n\t\t\t\t\t\tif (!this._options.service) {\n\t\t\t\t\t\t\tthis._save(function () {\n\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t}, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// by default upload button is disabled for existing images\n\t\t\t\t\t\tif (this._options.service && this.containsImage()) {\n\t\t\t\t\t\t\tthis._toggleButton('upload', false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_updateProgress',\n\t\t\t\tvalue: function _updateProgress(progress) {\n\n\t\t\t\t\tprogress = Math.min(.99999, progress);\n\n\t\t\t\t\tif (!this._element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this._progressEnabled) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar loader = this._element.querySelector('.slim-loader');\n\t\t\t\t\tif (!loader) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar size = loader.offsetWidth;\n\t\t\t\t\tvar paths = loader.querySelectorAll('path');\n\t\t\t\t\tvar ringWidth = parseInt(paths[0].getAttribute('stroke-width'), 10);\n\n\t\t\t\t\tpaths[0].setAttribute('d', percentageArc(size * .5, size * .5, size * .5 - ringWidth, .9999));\n\n\t\t\t\t\tpaths[1].setAttribute('d', percentageArc(size * .5, size * .5, size * .5 - ringWidth, progress));\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_startProgress',\n\t\t\t\tvalue: function _startProgress(cb) {\n\t\t\t\t\tvar _this14 = this;\n\n\t\t\t\t\tif (!this._element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._progressEnabled = false;\n\n\t\t\t\t\tvar loader = this._element.querySelector('.slim-loader');\n\t\t\t\t\tif (!loader) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar ring = loader.children[0];\n\n\t\t\t\t\tthis._stopProgressLoop(function () {\n\n\t\t\t\t\t\tloader.removeAttribute('style');\n\t\t\t\t\t\tring.removeAttribute('style');\n\n\t\t\t\t\t\t_this14._progressEnabled = true;\n\n\t\t\t\t\t\t_this14._updateProgress(0);\n\n\t\t\t\t\t\t_this14._progressEnabled = false;\n\n\t\t\t\t\t\tsnabbt(ring, {\n\n\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\t\tcomplete: function complete() {\n\t\t\t\t\t\t\t\t_this14._progressEnabled = true;\n\t\t\t\t\t\t\t\tif (cb) {\n\t\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_stopProgress',\n\t\t\t\tvalue: function _stopProgress() {\n\t\t\t\t\tvar _this15 = this;\n\n\t\t\t\t\tif (!this._element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar loader = this._element.querySelector('.slim-loader');\n\t\t\t\t\tif (!loader) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar ring = loader.children[0];\n\n\t\t\t\t\tthis._updateProgress(1);\n\n\t\t\t\t\tsnabbt(ring, {\n\t\t\t\t\t\tfromOpacity: 1,\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\tloader.removeAttribute('style');\n\t\t\t\t\t\t\tring.removeAttribute('style');\n\n\t\t\t\t\t\t\t_this15._updateProgress(.5);\n\n\t\t\t\t\t\t\t_this15._progressEnabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_startProgressLoop',\n\t\t\t\tvalue: function _startProgressLoop() {\n\n\t\t\t\t\tif (!this._element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// start loading animation\n\t\t\t\t\tvar loader = this._element.querySelector('.slim-loader');\n\t\t\t\t\tif (!loader) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar ring = loader.children[0];\n\t\t\t\t\tloader.removeAttribute('style');\n\t\t\t\t\tring.removeAttribute('style');\n\n\t\t\t\t\t// set infinite load state\n\t\t\t\t\tthis._updateProgress(.5);\n\n\t\t\t\t\t// repeat!\n\t\t\t\t\tvar repeat = 1000;\n\n\t\t\t\t\tsnabbt(loader, 'stop');\n\n\t\t\t\t\tsnabbt(loader, {\n\t\t\t\t\t\trotation: [0, 0, -(Math.PI * 2) * repeat],\n\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\tduration: repeat * 1000\n\t\t\t\t\t});\n\n\t\t\t\t\tsnabbt(ring, {\n\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tduration: 250\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_stopProgressLoop',\n\t\t\t\tvalue: function _stopProgressLoop(callback) {\n\n\t\t\t\t\tif (!this._element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar loader = this._element.querySelector('.slim-loader');\n\t\t\t\t\tif (!loader) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar ring = loader.children[0];\n\n\t\t\t\t\tsnabbt(ring, {\n\t\t\t\t\t\tfromOpacity: parseFloat(ring.style.opacity),\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\tduration: 250,\n\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\tsnabbt(loader, 'stop');\n\n\t\t\t\t\t\t\tloader.removeAttribute('style');\n\t\t\t\t\t\t\tring.removeAttribute('style');\n\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_isButtonAllowed',\n\t\t\t\tvalue: function _isButtonAllowed(button) {\n\n\t\t\t\t\tif (button === 'edit') {\n\t\t\t\t\t\treturn this._options.edit;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (button === 'download') {\n\t\t\t\t\t\treturn this._options.download;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (button === 'upload') {\n\n\t\t\t\t\t\t// if no service defined upload button makes no sense\n\t\t\t\t\t\tif (!this._options.service) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if push mode is set, no need for upload button\n\t\t\t\t\t\tif (this._options.push) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// set upload button\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (button === 'remove') {\n\t\t\t\t\t\treturn !this._isImageOnly();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_fallback',\n\t\t\t\tvalue: function _fallback() {\n\n\t\t\t\t\t// create status area\n\t\t\t\t\tvar area = create('div', 'slim-area');\n\t\t\t\t\tarea.innerHTML = '\\n\\t\\t\\t<div class=\"slim-status\"><div class=\"slim-label\">' + (this._options.label || '') + '</div></div>\\n\\t\\t';\n\t\t\t\t\tthis._element.appendChild(area);\n\n\t\t\t\t\tthis._throwError(this._options.statusNoSupport);\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * Event routing\r\n     */\n\n\t\t\t}, {\n\t\t\t\tkey: 'handleEvent',\n\t\t\t\tvalue: function handleEvent(e) {\n\n\t\t\t\t\tswitch (e.type) {\n\t\t\t\t\t\tcase 'click':\n\t\t\t\t\t\t\tthis._onClick(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'change':\n\t\t\t\t\t\t\tthis._onChange(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'cancel':\n\t\t\t\t\t\t\tthis._onCancel(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'confirm':\n\t\t\t\t\t\t\tthis._onConfirm(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'file-over':\n\t\t\t\t\t\t\tthis._onFileOver(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'file-out':\n\t\t\t\t\t\t\tthis._onFileOut(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'file-drop':\n\t\t\t\t\t\t\tthis._onDropFile(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'file-invalid':\n\t\t\t\t\t\t\tthis._onInvalidFile(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'file-invalid-drop':\n\t\t\t\t\t\t\tthis._onInvalidFileDrop(e);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getIntro',\n\t\t\t\tvalue: function _getIntro() {\n\t\t\t\t\treturn this._element.querySelector('.slim-result .in');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getOutro',\n\t\t\t\tvalue: function _getOutro() {\n\t\t\t\t\treturn this._element.querySelector('.slim-result .out');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getInOut',\n\t\t\t\tvalue: function _getInOut() {\n\t\t\t\t\treturn this._element.querySelectorAll('.slim-result img');\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_getDrip',\n\t\t\t\tvalue: function _getDrip() {\n\t\t\t\t\tif (!this._drip) {\n\t\t\t\t\t\tthis._drip = this._element.querySelector('.slim-drip > span');\n\t\t\t\t\t}\n\t\t\t\t\treturn this._drip;\n\t\t\t\t}\n\n\t\t\t\t// errors\n\n\t\t\t}, {\n\t\t\t\tkey: '_throwError',\n\t\t\t\tvalue: function _throwError(error) {\n\n\t\t\t\t\tthis._addState('error');\n\n\t\t\t\t\tthis._element.querySelector('.slim-label').style.display = 'none';\n\n\t\t\t\t\tvar node = this._element.querySelector('.slim-error');\n\t\t\t\t\tif (!node) {\n\t\t\t\t\t\tnode = create('div', 'slim-error');\n\t\t\t\t\t\tthis._element.querySelector('.slim-status').appendChild(node);\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.innerHTML = error;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_removeError',\n\t\t\t\tvalue: function _removeError() {\n\n\t\t\t\t\tthis._removeState('error');\n\t\t\t\t\tthis._element.querySelector('.slim-label').style.display = '';\n\n\t\t\t\t\tvar error = this._element.querySelector('.slim-error');\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\terror.parentNode.removeChild(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_openFileDialog',\n\t\t\t\tvalue: function _openFileDialog() {\n\t\t\t\t\tthis._removeError();\n\t\t\t\t\tthis._input.click();\n\t\t\t\t}\n\n\t\t\t\t// drop area clicked\n\n\t\t\t}, {\n\t\t\t\tkey: '_onClick',\n\t\t\t\tvalue: function _onClick(e) {\n\t\t\t\t\tvar _this16 = this;\n\n\t\t\t\t\tvar list = e.target.classList;\n\t\t\t\t\tvar target = e.target;\n\n\t\t\t\t\t// no preview, so possible to drop file\n\t\t\t\t\tif (list.contains('slim-file-hopper')) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis._openFileDialog();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// decide what button was clicked\n\t\t\t\t\tswitch (target.getAttribute('data-action')) {\n\t\t\t\t\t\tcase 'remove':\n\t\t\t\t\t\t\tthis._options.willRemove.apply(this, [this.data, function () {\n\t\t\t\t\t\t\t\t_this16._doRemove();\n\t\t\t\t\t\t\t}]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'edit':\n\t\t\t\t\t\t\tthis._doEdit();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'download':\n\t\t\t\t\t\t\tthis._doDownload();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'upload':\n\t\t\t\t\t\t\tthis._doUpload();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onInvalidFileDrop',\n\t\t\t\tvalue: function _onInvalidFileDrop() {\n\n\t\t\t\t\tthis._onInvalidFile();\n\n\t\t\t\t\tthis._removeState('file-over');\n\n\t\t\t\t\t// animate out drip\n\t\t\t\t\tvar drip = this._getDrip();\n\t\t\t\t\tsnabbt(drip.firstChild, {\n\t\t\t\t\t\tfromScale: [.5, .5],\n\t\t\t\t\t\tscale: [0, 0],\n\t\t\t\t\t\tfromOpacity: .5,\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\tduration: 150,\n\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\t// clean up transforms\n\t\t\t\t\t\t\tresetTransforms(drip.firstChild);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onInvalidFile',\n\t\t\t\tvalue: function _onInvalidFile() {\n\n\t\t\t\t\tvar types = this._imageHopper.accept.map(getExtensionByMimeType);\n\t\t\t\t\tvar error = this._options.statusFileType.replace('$0', types.join(', '));\n\t\t\t\t\tthis._throwError(error);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onImageTooSmall',\n\t\t\t\tvalue: function _onImageTooSmall() {\n\n\t\t\t\t\tvar error = this._options.statusImageTooSmall.replace('$0', this._options.minSize.width + ' \\xD7 ' + this._options.minSize.height);\n\t\t\t\t\tthis._throwError(error);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onOverWeightFile',\n\t\t\t\tvalue: function _onOverWeightFile() {\n\n\t\t\t\t\tvar error = this._options.statusFileSize.replace('$0', this._options.maxFileSize);\n\t\t\t\t\tthis._throwError(error);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onRemoteURLProblem',\n\t\t\t\tvalue: function _onRemoteURLProblem(error) {\n\t\t\t\t\tthis._throwError(error);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onFileOver',\n\t\t\t\tvalue: function _onFileOver(e) {\n\n\t\t\t\t\tthis._addState('file-over');\n\t\t\t\t\tthis._removeError();\n\n\t\t\t\t\t// animations\n\t\t\t\t\tvar drip = this._getDrip();\n\n\t\t\t\t\t// move around drip\n\t\t\t\t\tvar matrix = snabbt.createMatrix();\n\t\t\t\t\tmatrix.translate(e.detail.x, e.detail.y, 0);\n\t\t\t\t\tsnabbt.setElementTransform(drip, matrix);\n\n\t\t\t\t\t// on first entry fade in blob\n\t\t\t\t\tif (this._imageHopper.dragPath.length == 1) {\n\n\t\t\t\t\t\t// show\n\t\t\t\t\t\tdrip.style.opacity = 1;\n\n\t\t\t\t\t\t// animate in\n\t\t\t\t\t\tsnabbt(drip.firstChild, {\n\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\topacity: .5,\n\t\t\t\t\t\t\tfromScale: [0, 0],\n\t\t\t\t\t\t\tscale: [.5, .5],\n\t\t\t\t\t\t\tduration: 150\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onFileOut',\n\t\t\t\tvalue: function _onFileOut(e) {\n\n\t\t\t\t\tthis._removeState('file-over');\n\t\t\t\t\tthis._removeState('file-invalid');\n\t\t\t\t\tthis._removeError();\n\n\t\t\t\t\t// move to last position\n\t\t\t\t\tvar drip = this._getDrip();\n\t\t\t\t\tvar matrix = snabbt.createMatrix();\n\t\t\t\t\tmatrix.translate(e.detail.x, e.detail.y, 0);\n\t\t\t\t\tsnabbt.setElementTransform(drip, matrix);\n\n\t\t\t\t\t// animate out\n\t\t\t\t\tsnabbt(drip.firstChild, {\n\t\t\t\t\t\tfromScale: [.5, .5],\n\t\t\t\t\t\tscale: [0, 0],\n\t\t\t\t\t\tfromOpacity: .5,\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\tduration: 150,\n\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\t// clean up transforms\n\t\t\t\t\t\t\tresetTransforms(drip.firstChild);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * When a file was literally dropped on the drop area\r\n     * @param e\r\n     * @private\r\n     */\n\n\t\t\t}, {\n\t\t\t\tkey: '_onDropFile',\n\t\t\t\tvalue: function _onDropFile(e) {\n\t\t\t\t\tvar _this17 = this;\n\n\t\t\t\t\tthis._removeState('file-over');\n\n\t\t\t\t\t// get drip node reference and set to last position\n\t\t\t\t\tvar drip = this._getDrip();\n\t\t\t\t\tvar matrix = snabbt.createMatrix();\n\t\t\t\t\tmatrix.translate(e.detail.x, e.detail.y, 0);\n\t\t\t\t\tsnabbt.setElementTransform(drip, matrix);\n\n\t\t\t\t\t// get element minimum 10 entries distant from the last entry so we can calculate velocity of movement\n\t\t\t\t\tvar l = this._imageHopper.dragPath.length;\n\t\t\t\t\tvar jump = this._imageHopper.dragPath[l - Math.min(10, l)];\n\n\t\t\t\t\t// velocity\n\t\t\t\t\tvar dx = e.detail.x - jump.x;\n\t\t\t\t\tvar dy = e.detail.y - jump.y;\n\n\t\t\t\t\tsnabbt(drip, {\n\t\t\t\t\t\tfromPosition: [e.detail.x, e.detail.y, 0],\n\t\t\t\t\t\tposition: [e.detail.x + dx, e.detail.y + dy, 0],\n\t\t\t\t\t\tduration: 200\n\t\t\t\t\t});\n\n\t\t\t\t\t// animate out drip\n\t\t\t\t\tsnabbt(drip.firstChild, {\n\n\t\t\t\t\t\tfromScale: [.5, .5],\n\t\t\t\t\t\tscale: [2, 2],\n\t\t\t\t\t\tfromOpacity: 1,\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\tduration: 200,\n\n\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\t// clean up transforms\n\t\t\t\t\t\t\tresetTransforms(drip.firstChild);\n\n\t\t\t\t\t\t\t// load dropped resource\n\t\t\t\t\t\t\t_this17._load(e.target.files[0]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * When a file has been selected after a click on the drop area\r\n     * @param e\r\n     * @private\r\n     */\n\n\t\t\t}, {\n\t\t\t\tkey: '_onChange',\n\t\t\t\tvalue: function _onChange(e) {\n\n\t\t\t\t\tif (e.target.files.length) {\n\t\t\t\t\t\tthis._load(e.target.files[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * Loads a resource (blocking operation)\r\n     * @param resource\r\n     * @param callback(err)\r\n     * @param options\r\n     * @private\r\n     */\n\n\t\t\t}, {\n\t\t\t\tkey: '_load',\n\t\t\t\tvalue: function _load(resource, callback, options) {\n\t\t\t\t\tvar _this18 = this;\n\n\t\t\t\t\t// stop here\n\t\t\t\t\tif (this._isBeingDestroyed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if currently contains image, remove it\n\t\t\t\t\tif (this.containsImage()) {\n\n\t\t\t\t\t\tclearTimeout(this._replaceTimeout);\n\n\t\t\t\t\t\tthis._doRemove(function () {\n\n\t\t\t\t\t\t\t_this18._replaceTimeout = setTimeout(function () {\n\t\t\t\t\t\t\t\t_this18._load(resource, callback, options);\n\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// no longer empty\n\t\t\t\t\tthis._removeState('empty');\n\t\t\t\t\tthis._addState('busy');\n\n\t\t\t\t\t// start loading indicator\n\t\t\t\t\tthis._startProgressLoop();\n\n\t\t\t\t\t// can't drop any other image while loading\n\t\t\t\t\tif (this._imageHopper) {\n\t\t\t\t\t\tthis._imageHopper.enabled = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(this._loadTimeout);\n\t\t\t\t\tvar load = function load() {\n\t\t\t\t\t\tclearTimeout(_this18._loadTimeout);\n\t\t\t\t\t\t_this18._loadTimeout = setTimeout(function () {\n\n\t\t\t\t\t\t\tif (_this18._isBeingDestroyed) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_this18._addState('loading');\n\n\t\t\t\t\t\t\tsnabbt(_this18._element.querySelector('.slim-label-loading'), {\n\t\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t\tduration: 250\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t};\n\n\t\t\t\t\t// early exit\n\t\t\t\t\tvar exit = function exit() {\n\t\t\t\t\t\tif (_this18._imageHopper) {\n\t\t\t\t\t\t\t_this18._imageHopper.enabled = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_this18._removeState('loading');\n\t\t\t\t\t\t_this18._removeState('busy');\n\t\t\t\t\t\t_this18._addState('empty');\n\t\t\t\t\t\t_this18._stopProgressLoop();\n\t\t\t\t\t};\n\n\t\t\t\t\t// turn string based resources (url / base64) into file objects\n\t\t\t\t\tif (typeof resource === 'string') {\n\n\t\t\t\t\t\tif (resourceIsBase64Data(resource)) {\n\t\t\t\t\t\t\t// resource is base64 data, turn into file\n\t\t\t\t\t\t\tthis._load(base64ToBlob(resource), callback, options);\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// will take a while, show loading indicator\n\t\t\t\t\t\t\tload();\n\n\t\t\t\t\t\t\t// resource is url, load with XHR\n\t\t\t\t\t\t\tloadURL(resource, function (file) {\n\t\t\t\t\t\t\t\t// continue with file object\n\t\t\t\t\t\t\t\t_this18._load(file, callback, options);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// don't continue, wait for load\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (typeof resource.remote !== 'undefined' && this._options.fetcher) {\n\n\t\t\t\t\t\tloadRemoteURL(this._options.fetcher, resource.remote, function (error) {\n\n\t\t\t\t\t\t\texit();\n\n\t\t\t\t\t\t\t_this18._onRemoteURLProblem('<p>' + error + '</p>');\n\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback.apply(_this18, ['remote-url-problem']);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function (file) {\n\t\t\t\t\t\t\t// continue with file object\n\t\t\t\t\t\t\t_this18._load(file, callback, options);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// don't continue wait for server fetch\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// let's continue with file resource\n\t\t\t\t\tvar file = resource;\n\n\t\t\t\t\t// re-test if is valid file type\n\t\t\t\t\t// in case of loading base64 data or url\n\t\t\t\t\tif (this._imageHopper && this._imageHopper.accept.indexOf(file.type) === -1) {\n\n\t\t\t\t\t\texit();\n\n\t\t\t\t\t\tthis._onInvalidFile();\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\tcallback.apply(this, ['file-invalid']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// test if too big\n\t\t\t\t\tif (file.size && this._options.maxFileSize && bytesToMegaBytes(file.size) > this._options.maxFileSize) {\n\n\t\t\t\t\t\texit();\n\n\t\t\t\t\t\tthis._onOverWeightFile();\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\tcallback.apply(this, ['file-too-big']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if has loaded image editor set to dirty\n\t\t\t\t\tif (this._imageEditor) {\n\t\t\t\t\t\tthis._imageEditor.dirty();\n\t\t\t\t\t}\n\n\t\t\t\t\t// continue\n\t\t\t\t\tthis._data.input.name = options && options.name ? options.name : getFileNameByFile(file);\n\t\t\t\t\tthis._data.input.type = getFileTypeByFile(file);\n\t\t\t\t\tthis._data.input.size = file.size;\n\t\t\t\t\tthis._data.input.file = file;\n\n\t\t\t\t\t// fetch resource\n\t\t\t\t\tgetImageAsCanvas(file, this._options.internalCanvasSize, function (image, meta) {\n\n\t\t\t\t\t\tvar rewind = function rewind() {\n\n\t\t\t\t\t\t\t// rewind state\n\t\t\t\t\t\t\tif (_this18._imageHopper) {\n\t\t\t\t\t\t\t\t_this18._imageHopper.enabled = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_this18._removeState('loading');\n\t\t\t\t\t\t\t_this18._removeState('busy');\n\t\t\t\t\t\t\t_this18._addState('empty');\n\t\t\t\t\t\t\t_this18._stopProgressLoop();\n\t\t\t\t\t\t\t_this18._resetData();\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// if no image, something went wrong\n\t\t\t\t\t\tif (!image) {\n\n\t\t\t\t\t\t\trewind();\n\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback.apply(_this18, ['file-not-found']);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// test if image is too small\n\t\t\t\t\t\tif (!covers(image, _this18._options.minSize)) {\n\n\t\t\t\t\t\t\trewind();\n\n\t\t\t\t\t\t\t_this18._onImageTooSmall();\n\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback.apply(_this18, ['image-too-small']);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar status = _this18._options.didLoad.apply(_this18, [file, image, meta, _this18]);\n\t\t\t\t\t\tif (status !== true) {\n\n\t\t\t\t\t\t\trewind();\n\n\t\t\t\t\t\t\tif (status !== false) {\n\t\t\t\t\t\t\t\t_this18._throwError(status);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback.apply(_this18, [status]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// done loading file\n\t\t\t\t\t\t_this18._removeState('loading');\n\n\t\t\t\t\t\tvar revealCanvas = function revealCanvas(done) {\n\n\t\t\t\t\t\t\t// done, enable hopper\n\t\t\t\t\t\t\tif (_this18._imageHopper && _this18._options.dropReplace) {\n\t\t\t\t\t\t\t\t_this18._imageHopper.enabled = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// do intro stuff\n\t\t\t\t\t\t\tvar intro = _this18._getIntro();\n\n\t\t\t\t\t\t\t// setup base animation\n\t\t\t\t\t\t\tvar animation = {\n\t\t\t\t\t\t\t\tfromScale: [1.25, 1.25],\n\t\t\t\t\t\t\t\tscale: [1, 1],\n\t\t\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\t\t\tresetTransforms(intro);\n\n\t\t\t\t\t\t\t\t\tintro.style.opacity = 1;\n\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// if not attached to DOM, don't animate\n\t\t\t\t\t\t\tif (_this18.isDetached()) {\n\t\t\t\t\t\t\t\tanimation.duration = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tanimation.easing = 'spring';\n\t\t\t\t\t\t\t\tanimation.springConstant = .3;\n\t\t\t\t\t\t\t\tanimation.springDeceleration = .7;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if is instant edit mode don't zoom out but zoom in\n\t\t\t\t\t\t\tif (_this18._canInstantEdit()) {\n\t\t\t\t\t\t\t\tanimation.delay = 500;\n\t\t\t\t\t\t\t\tanimation.duration = 1;\n\n\t\t\t\t\t\t\t\t// instant edit mode just fire up the editor immidiately\n\t\t\t\t\t\t\t\t_this18._doEdit();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// reveal loaded image\n\t\t\t\t\t\t\tsnabbt(intro, animation);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// load the image\n\t\t\t\t\t\t_this18._loadCanvas(image,\n\n\t\t\t\t\t\t// done loading the canvas\n\t\t\t\t\t\tfunction (isUploading) {\n\n\t\t\t\t\t\t\t_this18._addState('preview');\n\n\t\t\t\t\t\t\trevealCanvas(function () {\n\n\t\t\t\t\t\t\t\t// don't show buttons when instant editing\n\t\t\t\t\t\t\t\t// the buttons will be triggered by the closing of the popup\n\t\t\t\t\t\t\t\tif (!_this18._canInstantEdit() && !isUploading) {\n\t\t\t\t\t\t\t\t\t_this18._showButtons();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!isUploading) {\n\t\t\t\t\t\t\t\t\t_this18._stopProgressLoop();\n\t\t\t\t\t\t\t\t\t_this18._removeState('busy');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\t\tcallback.apply(_this18, [null, _this18.data]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// done uploading\n\t\t\t\t\t\tfunction () {\n\n\t\t\t\t\t\t\t// don't show buttons when instant editing\n\t\t\t\t\t\t\tif (!_this18._canInstantEdit()) {\n\t\t\t\t\t\t\t\t_this18._showButtons();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_this18._removeState('busy');\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_loadCanvas',\n\t\t\t\tvalue: function _loadCanvas(image, ready, complete) {\n\t\t\t\t\tvar _this19 = this;\n\n\t\t\t\t\t// halt here if cropper is currently being destroyed\n\t\t\t\t\tif (this._isBeingDestroyed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// store raw data\n\t\t\t\t\tthis._data.input.image = image;\n\t\t\t\t\tthis._data.input.width = image.width;\n\t\t\t\t\tthis._data.input.height = image.height;\n\n\t\t\t\t\tif (this._initialRotation) {\n\t\t\t\t\t\tthis._data.actions.rotation = this._initialRotation;\n\t\t\t\t\t\tthis._initialRotation = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isTilted = this._data.actions.rotation % 180 !== 0;\n\n\t\t\t\t\t// scales the drop area\n\t\t\t\t\t// if is 'input' or 'free' parameter\n\t\t\t\t\tif (!this._isFixedRatio()) {\n\t\t\t\t\t\tif (this._initialCrop) {\n\t\t\t\t\t\t\tthis._ratio = this._initialCrop.height / this._initialCrop.width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._ratio = isTilted ? image.width / image.height : image.height / image.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._scaleDropArea(this._ratio);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._initialCrop) {\n\n\t\t\t\t\t\t// use initial supplied crop rectangle\n\t\t\t\t\t\tthis._data.actions.crop = clone(this._initialCrop);\n\t\t\t\t\t\tthis._data.actions.crop.type = CropType.INITIAL;\n\n\t\t\t\t\t\t// clear initial crop, it's no longer useful\n\t\t\t\t\t\tthis._initialCrop = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// get automagical crop rectangle\n\t\t\t\t\t\tthis._data.actions.crop = getAutoCropRect(isTilted ? image.height : image.width, isTilted ? image.width : image.height, this._ratio);\n\t\t\t\t\t\tthis._data.actions.crop.type = CropType.AUTO;\n\t\t\t\t\t}\n\n\t\t\t\t\t// if max size set\n\t\t\t\t\tif (this._options.size) {\n\t\t\t\t\t\tthis._data.actions.size = {\n\t\t\t\t\t\t\twidth: this._options.size.width,\n\t\t\t\t\t\t\theight: this._options.size.height\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// do initial auto transform\n\t\t\t\t\tthis._applyTransforms(image, function (transformedImage) {\n\n\t\t\t\t\t\tvar intro = _this19._getIntro();\n\t\t\t\t\t\tvar scalar = intro.offsetWidth / transformedImage.width;\n\n\t\t\t\t\t\t// store data, if has preview image this prevents initial load from pushing\n\t\t\t\t\t\tvar willUpload = false;\n\n\t\t\t\t\t\t// can only do auto upload when service is defined and push is enabled...\n\t\t\t\t\t\tif (_this19._options.service && _this19._options.push) {\n\n\t\t\t\t\t\t\t// ...and is not transformation of initial image\n\t\t\t\t\t\t\t// + is not instant edit mode\n\t\t\t\t\t\t\tif (!_this19._hasInitialImage && !_this19._canInstantEdit()) {\n\t\t\t\t\t\t\t\twillUpload = true;\n\t\t\t\t\t\t\t\t_this19._stopProgressLoop(function () {\n\t\t\t\t\t\t\t\t\t_this19._startProgress(function () {\n\t\t\t\t\t\t\t\t\t\t_this19._updateProgress(.1);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no service set, and instant edit\n\t\t\t\t\t\tif (!_this19._canInstantEdit()) {\n\n\t\t\t\t\t\t\t// store data (possibly)\n\t\t\t\t\t\t\t_this19._save(function () {\n\t\t\t\t\t\t\t\tif (_this19._isBeingDestroyed) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (willUpload) {\n\t\t\t\t\t\t\t\t\t_this19._stopProgress();\n\t\t\t\t\t\t\t\t\tcomplete();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, willUpload);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// show intro animation\n\t\t\t\t\t\tintro.src = '';\n\t\t\t\t\t\tintro.src = cloneCanvasScaled(transformedImage, scalar).toDataURL();\n\t\t\t\t\t\tintro.onload = function () {\n\n\t\t\t\t\t\t\tintro.onload = null;\n\n\t\t\t\t\t\t\t// bail out if we've been cleaned up\n\t\t\t\t\t\t\tif (_this19._isBeingDestroyed) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (ready) {\n\t\t\t\t\t\t\t\tready(willUpload);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_applyTransforms',\n\t\t\t\tvalue: function _applyTransforms(image, ready) {\n\t\t\t\t\tvar _this20 = this;\n\n\t\t\t\t\tvar actions = clone(this._data.actions);\n\t\t\t\t\tactions.filters = {\n\t\t\t\t\t\tsharpen: this._options.filterSharpen / 100\n\t\t\t\t\t};\n\t\t\t\t\tactions.minSize = this._options.minSize;\n\n\t\t\t\t\ttransformCanvas(image, actions, function (transformedImage) {\n\n\t\t\t\t\t\tvar outputImage = transformedImage;\n\n\t\t\t\t\t\t// if should force/correct output size?\n\t\t\t\t\t\t// - is forced size set?\n\t\t\t\t\t\t// - is a discrepancy found between requested output size and transformed size\n\t\t\t\t\t\tif (_this20._options.forceSize || _this20._options.size && sizeDist(_this20._options.size, transformedImage) == 1) {\n\t\t\t\t\t\t\toutputImage = create('canvas');\n\t\t\t\t\t\t\toutputImage.width = _this20._options.size.width;\n\t\t\t\t\t\t\toutputImage.height = _this20._options.size.height;\n\t\t\t\t\t\t\tvar ctx = outputImage.getContext('2d');\n\t\t\t\t\t\t\tctx.drawImage(transformedImage, 0, 0, _this20._options.size.width, _this20._options.size.height);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// make sure min size is respected when size is equal to min size\n\t\t\t\t\t\tif (_this20._options.size && _this20._options.minSize.width === _this20._options.size.width && _this20._options.minSize.height === _this20._options.size.height && (outputImage.width < _this20._options.minSize.width || outputImage.height < _this20._options.minSize.height)) {\n\n\t\t\t\t\t\t\tvar w = Math.max(outputImage.width, _this20._options.minSize.width);\n\t\t\t\t\t\t\tvar h = Math.max(outputImage.height, _this20._options.minSize.height);\n\t\t\t\t\t\t\toutputImage = create('canvas');\n\t\t\t\t\t\t\toutputImage.width = w;\n\t\t\t\t\t\t\toutputImage.height = h;\n\t\t\t\t\t\t\tvar _ctx = outputImage.getContext('2d');\n\t\t\t\t\t\t\t_ctx.drawImage(transformedImage, 0, 0, w, h);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// store output\n\t\t\t\t\t\t_this20._data.output.width = outputImage.width;\n\t\t\t\t\t\t_this20._data.output.height = outputImage.height;\n\t\t\t\t\t\t_this20._data.output.image = outputImage;\n\n\t\t\t\t\t\t_this20._onTransformCanvas(function (transformedData) {\n\n\t\t\t\t\t\t\t_this20._data = transformedData;\n\n\t\t\t\t\t\t\t_this20._options.didTransform.apply(_this20, [_this20.data, _this20]);\n\n\t\t\t\t\t\t\tready(_this20._data.output.image);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_onTransformCanvas',\n\t\t\t\tvalue: function _onTransformCanvas(ready) {\n\n\t\t\t\t\tthis._options.willTransform.apply(this, [this.data, ready, this]);\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * Creates the editor nodes\r\n     * @private\r\n     */\n\n\t\t\t}, {\n\t\t\t\tkey: '_appendEditor',\n\t\t\t\tvalue: function _appendEditor() {\n\t\t\t\t\tvar _this21 = this;\n\n\t\t\t\t\t// we already have an editor\n\t\t\t\t\tif (this._imageEditor) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add editor\n\t\t\t\t\tthis._imageEditor = new ImageEditor(create('div'), {\n\t\t\t\t\t\tminSize: this._options.minSize,\n\n\t\t\t\t\t\tbuttonConfirmClassName: this._options.buttonConfirmClassName,\n\t\t\t\t\t\tbuttonCancelClassName: this._options.buttonCancelClassName,\n\t\t\t\t\t\tbuttonRotateClassName: this._options.buttonRotateClassName,\n\n\t\t\t\t\t\tbuttonConfirmLabel: this._options.buttonConfirmLabel,\n\t\t\t\t\t\tbuttonCancelLabel: this._options.buttonCancelLabel,\n\t\t\t\t\t\tbuttonRotateLabel: this._options.buttonRotateLabel,\n\n\t\t\t\t\t\tbuttonConfirmTitle: this._options.buttonConfirmTitle,\n\t\t\t\t\t\tbuttonCancelTitle: this._options.buttonCancelTitle,\n\t\t\t\t\t\tbuttonRotateTitle: this._options.buttonRotateTitle\n\n\t\t\t\t\t});\n\n\t\t\t\t\t// listen to events\n\t\t\t\t\tImageEditorEvents.forEach(function (e) {\n\t\t\t\t\t\t_this21._imageEditor.element.addEventListener(e, _this21);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_scaleDropArea',\n\t\t\t\tvalue: function _scaleDropArea(ratio) {\n\t\t\t\t\tvar node = this._getRatioSpacerElement();\n\t\t\t\t\tif (!node || !this._element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tnode.style.marginBottom = ratio * 100 + '%';\n\t\t\t\t\tthis._element.setAttribute('data-ratio', '1:' + ratio);\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * Data Layer\r\n     * @private\r\n     */\n\t\t\t\t// image editor closed\n\n\t\t\t}, {\n\t\t\t\tkey: '_onCancel',\n\t\t\t\tvalue: function _onCancel(e) {\n\n\t\t\t\t\tthis._removeState('editor');\n\n\t\t\t\t\tthis._options.didCancel.apply(this, [this]);\n\n\t\t\t\t\tthis._showButtons();\n\n\t\t\t\t\tthis._hideEditor();\n\n\t\t\t\t\tif (this._options.instantEdit && !this._hasInitialImage && this._isAutoCrop()) {\n\t\t\t\t\t\tthis._doRemove();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// user confirmed changes\n\n\t\t\t}, {\n\t\t\t\tkey: '_onConfirm',\n\t\t\t\tvalue: function _onConfirm(e) {\n\t\t\t\t\tvar _this22 = this;\n\n\t\t\t\t\t// if\n\t\t\t\t\t// - service set\n\t\t\t\t\t// - and we are pushing\n\t\t\t\t\t// - and we don't instant edit\n\t\t\t\t\t// we will upload\n\t\t\t\t\tvar willUpload = this._options.service && this._options.push;\n\t\t\t\t\tif (willUpload) {\n\t\t\t\t\t\tthis._startProgress(function () {\n\t\t\t\t\t\t\t_this22._updateProgress(.1);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._startProgressLoop();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._removeState('editor');\n\n\t\t\t\t\tthis._addState('busy');\n\n\t\t\t\t\t// clear data\n\t\t\t\t\tthis._output.value = '';\n\n\t\t\t\t\t// apply new action object to this._data\n\t\t\t\t\tthis._data.actions.rotation = e.detail.rotation;\n\t\t\t\t\tthis._data.actions.crop = e.detail.crop;\n\t\t\t\t\tthis._data.actions.crop.type = CropType.MANUAL;\n\n\t\t\t\t\t// do transforms\n\t\t\t\t\tthis._applyTransforms(this._data.input.image, function (transformedImage) {\n\n\t\t\t\t\t\t// user confirmed the crop (and changes have been applied to data)\n\t\t\t\t\t\t_this22._options.didConfirm.apply(_this22, [_this22.data, _this22]);\n\n\t\t\t\t\t\t// set new image result\n\t\t\t\t\t\tvar images = _this22._getInOut();\n\t\t\t\t\t\tvar intro = images[0].className === 'out' ? images[0] : images[1];\n\t\t\t\t\t\tvar outro = intro === images[0] ? images[1] : images[0];\n\n\t\t\t\t\t\tintro.className = 'in';\n\t\t\t\t\t\tintro.style.opacity = '0';\n\t\t\t\t\t\tintro.style.zIndex = '2';\n\t\t\t\t\t\toutro.className = 'out';\n\t\t\t\t\t\toutro.style.zIndex = '1';\n\n\t\t\t\t\t\t// new image get's\n\t\t\t\t\t\tintro.src = '';\n\t\t\t\t\t\tintro.src = cloneCanvasScaled(transformedImage, intro.offsetWidth / transformedImage.width).toDataURL();\n\t\t\t\t\t\tintro.onload = function () {\n\n\t\t\t\t\t\t\tintro.onload = null;\n\n\t\t\t\t\t\t\t// scale the dropzone\n\t\t\t\t\t\t\tif (_this22._options.ratio === 'free') {\n\t\t\t\t\t\t\t\t_this22._ratio = intro.naturalHeight / intro.naturalWidth;\n\t\t\t\t\t\t\t\t_this22._scaleDropArea(_this22._ratio);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// close the editor\n\t\t\t\t\t\t\t_this22._hideEditor();\n\n\t\t\t\t\t\t\t// wait a tiny bit so animations sync up nicely\n\t\t\t\t\t\t\tvar timer = setTimeout(function () {\n\n\t\t\t\t\t\t\t\t// show the preview\n\t\t\t\t\t\t\t\t_this22._showPreview(intro, function () {\n\n\t\t\t\t\t\t\t\t\t// save the data\n\t\t\t\t\t\t\t\t\t_this22._save(function (err, data, res) {\n\n\t\t\t\t\t\t\t\t\t\t// done!\n\t\t\t\t\t\t\t\t\t\t_this22._toggleButton('upload', true);\n\n\t\t\t\t\t\t\t\t\t\tif (willUpload) {\n\t\t\t\t\t\t\t\t\t\t\t_this22._stopProgress();\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t_this22._stopProgressLoop();\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t_this22._removeState('busy');\n\n\t\t\t\t\t\t\t\t\t\t_this22._showButtons();\n\t\t\t\t\t\t\t\t\t}, willUpload);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 250);\n\n\t\t\t\t\t\t\t_this22._timers.push(timer);\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_cropAuto',\n\t\t\t\tvalue: function _cropAuto() {\n\t\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (data) {};\n\n\t\t\t\t\tvar isTilted = this._data.actions.rotation % 180 !== 0;\n\n\t\t\t\t\tvar rect = getAutoCropRect(isTilted ? this._data.input.image.width : this._data.input.image.height, isTilted ? this._data.input.image.height : this._data.input.image.width, this._ratio);\n\n\t\t\t\t\tthis._crop(rect.x, rect.y, rect.width, rect.height, callback, CropType.AUTO);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_crop',\n\t\t\t\tvalue: function _crop(x, y, width, height) {\n\t\t\t\t\tvar callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (data) {};\n\t\t\t\t\tvar cropType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : CropType.MANUAL;\n\n\t\t\t\t\t// clear data\n\t\t\t\t\tthis._output.value = '';\n\n\t\t\t\t\t// apply new action object to this._data\n\t\t\t\t\tthis._data.actions.crop = {\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: height\n\t\t\t\t\t};\n\t\t\t\t\tthis._data.actions.crop.type = cropType;\n\n\t\t\t\t\tthis._manualTransform(callback);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_manualTransform',\n\t\t\t\tvalue: function _manualTransform(callback) {\n\t\t\t\t\tvar _this23 = this;\n\n\t\t\t\t\tthis._startProgressLoop();\n\t\t\t\t\tthis._addState('busy');\n\n\t\t\t\t\t// do transforms\n\t\t\t\t\tthis._applyTransforms(this._data.input.image, function (transformedImage) {\n\n\t\t\t\t\t\t// set new image result\n\t\t\t\t\t\tvar images = _this23._getInOut();\n\t\t\t\t\t\tvar intro = images[0].className === 'out' ? images[0] : images[1];\n\t\t\t\t\t\tvar outro = intro === images[0] ? images[1] : images[0];\n\n\t\t\t\t\t\tintro.className = 'in';\n\t\t\t\t\t\tintro.style.opacity = '1';\n\t\t\t\t\t\tintro.style.zIndex = '2';\n\t\t\t\t\t\toutro.className = 'out';\n\t\t\t\t\t\toutro.style.zIndex = '0';\n\n\t\t\t\t\t\t// new image\n\t\t\t\t\t\tintro.src = '';\n\t\t\t\t\t\tintro.src = cloneCanvasScaled(transformedImage, intro.offsetWidth / transformedImage.width).toDataURL();\n\t\t\t\t\t\tintro.onload = function () {\n\t\t\t\t\t\t\tintro.onload = null;\n\n\t\t\t\t\t\t\t// scale the dropzone\n\t\t\t\t\t\t\tif (_this23._options.ratio === 'free') {\n\t\t\t\t\t\t\t\t_this23._ratio = intro.naturalHeight / intro.naturalWidth;\n\t\t\t\t\t\t\t\t_this23._scaleDropArea(_this23._ratio);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// determine if will also upload\n\t\t\t\t\t\t\tvar willUpload = _this23._options.service && _this23._options.push;\n\n\t\t\t\t\t\t\tvar save = function save() {\n\n\t\t\t\t\t\t\t\t// save the data\n\t\t\t\t\t\t\t\t_this23._save(function (err, data, res) {\n\n\t\t\t\t\t\t\t\t\t// stop loader\n\t\t\t\t\t\t\t\t\tif (!willUpload) {\n\t\t\t\t\t\t\t\t\t\t_this23._stopProgressLoop();\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t_this23._removeState('busy');\n\n\t\t\t\t\t\t\t\t\tcallback.apply(_this23, [_this23.data]);\n\t\t\t\t\t\t\t\t}, willUpload);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (willUpload) {\n\t\t\t\t\t\t\t\t_this23._startProgress(save);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_save',\n\t\t\t\tvalue: function _save() {\n\t\t\t\t\tvar _this24 = this;\n\n\t\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\t\t\t\t\tvar allowUpload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t\t\t\t\tif (this._isBeingDestroyed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// flatten data also turns output canvas into data uri\n\t\t\t\t\t// removes input file object and image object\n\t\t\t\t\tvar data = this.dataBase64;\n\n\t\t\t\t\t// decide if we need to\n\t\t\t\t\t// - A. Store the data in an output field\n\t\t\t\t\t// - B. Upload the data and store the response in output field\n\n\t\t\t\t\t// - we are not doing async uploading (in which case output is used for response)\n\t\t\t\t\t// - we are not initialising a replaceable image\n\t\t\t\t\tif (!this._options.service && !(this._isInitialising && !this._isImageOnly())) {\n\n\t\t\t\t\t\tthis._options.willSave.apply(this, [data, function (data) {\n\n\t\t\t\t\t\t\t_this24._store(data);\n\n\t\t\t\t\t\t\t_this24._options.didSave.apply(_this24, [data, _this24]);\n\t\t\t\t\t\t}, this]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._isBeingDestroyed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// is remote service defined upload async\n\t\t\t\t\tif (this._options.service && allowUpload) {\n\n\t\t\t\t\t\t// allow user to modify the data\n\t\t\t\t\t\tthis._options.willSave.apply(this, [data, function (data) {\n\n\t\t\t\t\t\t\t_this24._addState('upload');\n\n\t\t\t\t\t\t\tif (_this24._imageHopper && _this24._options.dropReplace) {\n\t\t\t\t\t\t\t\t_this24._imageHopper.enabled = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// do the actual uploading\n\t\t\t\t\t\t\t_this24._upload(data, function (err, res) {\n\n\t\t\t\t\t\t\t\tif (_this24._imageHopper && _this24._options.dropReplace) {\n\t\t\t\t\t\t\t\t\t_this24._imageHopper.enabled = true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// store response\n\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\t_this24._storeServerResponse(res);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// we did upload data\n\t\t\t\t\t\t\t\t_this24._options.didUpload.apply(_this24, [err, data, res, _this24]);\n\n\t\t\t\t\t\t\t\t_this24._removeState('upload');\n\n\t\t\t\t\t\t\t\t// done!\n\t\t\t\t\t\t\t\tcallback(err, data, res);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, this]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// if no service, we're done here\n\t\t\t\t\tif (!this._options.service || !allowUpload) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// stores active file information in hidden output field\n\n\t\t\t}, {\n\t\t\t\tkey: '_storeServerResponse',\n\t\t\t\tvalue: function _storeServerResponse(data) {\n\n\t\t\t\t\t// remove required flag\n\t\t\t\t\tif (this._isRequired) {\n\t\t\t\t\t\tthis._input.required = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// store data returned from server\n\t\t\t\t\tthis._data.server = data;\n\n\t\t\t\t\t// sync with output value\n\t\t\t\t\tthis._output.value = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' ? JSON.stringify(this._data.server) : data;\n\t\t\t\t}\n\n\t\t\t\t// stores data in output field\n\n\t\t\t}, {\n\t\t\t\tkey: '_store',\n\t\t\t\tvalue: function _store(data) {\n\n\t\t\t\t\tif (this._isRequired) {\n\t\t\t\t\t\tthis._input.required = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._output.value = JSON.stringify(data);\n\t\t\t\t}\n\n\t\t\t\t// uploads given data to server\n\n\t\t\t}, {\n\t\t\t\tkey: '_upload',\n\t\t\t\tvalue: function _upload(data, callback) {\n\t\t\t\t\tvar _this25 = this;\n\n\t\t\t\t\t// done parsing input file\n\t\t\t\t\tvar inputParsed = function inputParsed(imageData) {\n\n\t\t\t\t\t\tvar fileData = [];\n\t\t\t\t\t\tvar formData = new FormData();\n\n\t\t\t\t\t\t// if input should be posted along, append data\n\t\t\t\t\t\t// to FormData object as file\n\t\t\t\t\t\tif (inArray('input', _this25._options.post)) {\n\n\t\t\t\t\t\t\t// add to data array\n\t\t\t\t\t\t\tfileData.push(_this25._data.input.file);\n\n\t\t\t\t\t\t\t// add to formdata\n\t\t\t\t\t\t\tformData.append(_this25._inputReference, _this25._data.input.file, _this25._data.input.file.name);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if image data is defined, turn it into a file object (we can send files if we're uploading)\n\t\t\t\t\t\tif (inArray('output', _this25._options.post) && _this25._data.output.image !== null && _this25._options.uploadBase64 === false) {\n\n\t\t\t\t\t\t\tvar output = base64ToBlob(data.output.image, data.output.name);\n\n\t\t\t\t\t\t\t// if image head available, inject in output\n\t\t\t\t\t\t\tif (imageData.imageHead && _this25._options.copyImageHead) {\n\n\t\t\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\t\t\toutput = new Blob([imageData.imageHead, loadImage.blobSlice.call(output, 20)], { type: getMimeTypeFromDataURI(data.output.image) });\n\n\t\t\t\t\t\t\t\t\toutput = blobToFile(output, data.output.name);\n\t\t\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// add to data array\n\t\t\t\t\t\t\tfileData.push(output);\n\n\t\t\t\t\t\t\t// add to formdata\n\t\t\t\t\t\t\tvar field = 'slim_output_' + _this25._uid;\n\t\t\t\t\t\t\tdata.output.image = null;\n\t\t\t\t\t\t\tdata.output.field = field;\n\t\t\t\t\t\t\tformData.append(field, output, data.output.name);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// output dataset\n\t\t\t\t\t\tformData.append(_this25._output.name, JSON.stringify(data));\n\n\t\t\t\t\t\tvar statusNode = _this25._element.querySelector('.slim-upload-status');\n\n\t\t\t\t\t\tvar requestDecorator = _this25._options.willRequest;\n\n\t\t\t\t\t\t// callback methods\n\t\t\t\t\t\tvar onProgress = function onProgress(loaded, total) {\n\t\t\t\t\t\t\t_this25._updateProgress(Math.max(.1, loaded / total));\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar onSuccess = function onSuccess(obj) {\n\t\t\t\t\t\t\tvar timer = setTimeout(function () {\n\n\t\t\t\t\t\t\t\t// it's possible that Slim has been destroyed in the mean time.\n\t\t\t\t\t\t\t\tif (_this25._isBeingDestroyed) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tstatusNode.innerHTML = _this25._options.statusUploadSuccess;\n\t\t\t\t\t\t\t\tstatusNode.setAttribute('data-state', 'success');\n\t\t\t\t\t\t\t\tstatusNode.style.opacity = 1;\n\n\t\t\t\t\t\t\t\t// hide status update after 2 seconds\n\t\t\t\t\t\t\t\tvar timer = setTimeout(function () {\n\t\t\t\t\t\t\t\t\tstatusNode.style.opacity = 0;\n\t\t\t\t\t\t\t\t}, 2000);\n\n\t\t\t\t\t\t\t\t_this25._timers.push(timer);\n\t\t\t\t\t\t\t}, 250);\n\n\t\t\t\t\t\t\t_this25._timers.push(timer);\n\n\t\t\t\t\t\t\tcallback(null, obj);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar onError = function onError(status) {\n\n\t\t\t\t\t\t\tvar html = '';\n\t\t\t\t\t\t\tif (status === 'file-too-big') {\n\t\t\t\t\t\t\t\thtml = _this25._options.statusContentLength;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thtml = _this25._options.didReceiveServerError.apply(_this25, [status, _this25._options.statusUnknownResponse, _this25]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// when an error occurs the status update is not automatically hidden\n\t\t\t\t\t\t\tvar timer = setTimeout(function () {\n\n\t\t\t\t\t\t\t\tstatusNode.innerHTML = html;\n\t\t\t\t\t\t\t\tstatusNode.setAttribute('data-state', 'error');\n\t\t\t\t\t\t\t\tstatusNode.style.opacity = 1;\n\t\t\t\t\t\t\t}, 250);\n\n\t\t\t\t\t\t\t_this25._timers.push(timer);\n\n\t\t\t\t\t\t\tcallback(status);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// use default send method or custom implementation\n\t\t\t\t\t\tif (typeof _this25._options.service === 'string') {\n\t\t\t\t\t\t\tsend(_this25._options.service, formData, requestDecorator, onProgress, onSuccess, onError);\n\t\t\t\t\t\t} else if (typeof _this25._options.service === 'function') {\n\t\t\t\t\t\t\t_this25._options.service.apply(_this25, [_this25._options.serviceFormat === 'file' ? fileData : formData, onProgress, // function(loaded, total) {}   // loaded bytes (number), total bytes (number)\n\t\t\t\t\t\t\tonSuccess, // function(response) {} \t\t// response (object or string)\n\t\t\t\t\t\t\tonError // function(error) {} \t\t\t// error message (string)\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// copy the meta data of the original file to the output\n\t\t\t\t\tloadImage.parseMetaData(this._data.input.file, inputParsed, {\n\t\t\t\t\t\tmaxMetaDataSize: 262144,\n\t\t\t\t\t\tdisableImageHead: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_showEditor',\n\t\t\t\tvalue: function _showEditor() {\n\n\t\t\t\t\tSlimPopover.className = this._options.popoverClassName;\n\n\t\t\t\t\tSlimPopover.show();\n\n\t\t\t\t\tthis._imageEditor.show();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_hideEditor',\n\t\t\t\tvalue: function _hideEditor() {\n\n\t\t\t\t\tthis._imageEditor.hide();\n\n\t\t\t\t\tvar timer = setTimeout(function () {\n\n\t\t\t\t\t\tSlimPopover.hide();\n\t\t\t\t\t}, 250);\n\n\t\t\t\t\tthis._timers.push(timer);\n\t\t\t\t}\n\n\t\t\t\t/**\r\n     * Animations\r\n     */\n\n\t\t\t}, {\n\t\t\t\tkey: '_showPreview',\n\t\t\t\tvalue: function _showPreview(intro, callback) {\n\n\t\t\t\t\tsnabbt(intro, {\n\n\t\t\t\t\t\tfromPosition: [0, 50, 0],\n\t\t\t\t\t\tposition: [0, 0, 0],\n\n\t\t\t\t\t\tfromScale: [1.5, 1.5],\n\t\t\t\t\t\tscale: [1, 1],\n\n\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\topacity: 1,\n\n\t\t\t\t\t\teasing: 'spring',\n\t\t\t\t\t\tspringConstant: .3,\n\t\t\t\t\t\tspringDeceleration: .7,\n\n\t\t\t\t\t\tcomplete: function complete() {\n\n\t\t\t\t\t\t\tresetTransforms(intro);\n\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_hideResult',\n\t\t\t\tvalue: function _hideResult(callback) {\n\n\t\t\t\t\tvar intro = this._getIntro();\n\t\t\t\t\tif (!intro) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tsnabbt(intro, {\n\n\t\t\t\t\t\tfromScale: [1, 1],\n\t\t\t\t\t\tscale: [.5, .5],\n\n\t\t\t\t\t\tfromOpacity: 1,\n\t\t\t\t\t\topacity: 0,\n\n\t\t\t\t\t\teasing: 'spring',\n\t\t\t\t\t\tspringConstant: .3,\n\t\t\t\t\t\tspringDeceleration: .75,\n\n\t\t\t\t\t\tcomplete: function complete() {\n\t\t\t\t\t\t\tresetTransforms(intro);\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_showButtons',\n\t\t\t\tvalue: function _showButtons(callback) {\n\n\t\t\t\t\tif (!this._btnGroup) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._btnGroup.style.display = '';\n\n\t\t\t\t\t// setup animation\n\t\t\t\t\tvar animation = {\n\t\t\t\t\t\tfromScale: [.5, .5],\n\t\t\t\t\t\tscale: [1, 1],\n\t\t\t\t\t\tfromPosition: [0, 10, 0],\n\t\t\t\t\t\tposition: [0, 0, 0],\n\t\t\t\t\t\tfromOpacity: 0,\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tcomplete: function complete() {\n\t\t\t\t\t\t\tresetTransforms(this);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tallDone: function allDone() {\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// don't animate when detached\n\t\t\t\t\tif (this.isDetached()) {\n\t\t\t\t\t\tanimation.duration = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tanimation.delay = function (i) {\n\t\t\t\t\t\t\treturn 250 + i * 50;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tanimation.easing = 'spring';\n\t\t\t\t\t\tanimation.springConstant = .3;\n\t\t\t\t\t\tanimation.springDeceleration = .85;\n\t\t\t\t\t}\n\n\t\t\t\t\tsnabbt(this._btnGroup.childNodes, animation);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_hideButtons',\n\t\t\t\tvalue: function _hideButtons(callback) {\n\t\t\t\t\tvar _this26 = this;\n\n\t\t\t\t\tif (!this._btnGroup) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar animation = {\n\t\t\t\t\t\tfromScale: [1, 1],\n\t\t\t\t\t\tscale: [.85, .85],\n\t\t\t\t\t\tfromOpacity: 1,\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\tallDone: function allDone() {\n\t\t\t\t\t\t\t_this26._btnGroup.style.display = 'none';\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// don't animate when detached\n\t\t\t\t\tif (this.isDetached()) {\n\t\t\t\t\t\tanimation.duration = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tanimation.easing = 'spring';\n\t\t\t\t\t\tanimation.springConstant = .3;\n\t\t\t\t\t\tanimation.springDeceleration = .75;\n\t\t\t\t\t}\n\n\t\t\t\t\t// go hide the buttons\n\t\t\t\t\tsnabbt(this._btnGroup.childNodes, animation);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_hideStatus',\n\t\t\t\tvalue: function _hideStatus() {\n\n\t\t\t\t\tvar statusNode = this._element.querySelector('.slim-upload-status');\n\t\t\t\t\tstatusNode.style.opacity = 0;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_doEdit',\n\t\t\t\tvalue: function _doEdit() {\n\t\t\t\t\tvar _this27 = this;\n\n\t\t\t\t\t// if no input data available, can't edit anything\n\t\t\t\t\tif (!this._data.input.image) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// now in editor mode\n\t\t\t\t\tthis._addState('editor');\n\n\t\t\t\t\t// create editor (if not already created)\n\t\t\t\t\tif (!this._imageEditor) {\n\t\t\t\t\t\tthis._appendEditor();\n\t\t\t\t\t}\n\n\t\t\t\t\t// hide or show rotate button\n\t\t\t\t\tthis._imageEditor.showRotateButton = this._options.rotateButton;\n\n\t\t\t\t\t// append to popover\n\t\t\t\t\tSlimPopover.inner = this._imageEditor.element;\n\n\t\t\t\t\t// read the data\n\t\t\t\t\tthis._imageEditor.open(\n\n\t\t\t\t\t// send copy of canvas to the editor\n\t\t\t\t\tcloneCanvas(this._data.input.image),\n\n\t\t\t\t\t// determine ratio\n\t\t\t\t\tthis._options.ratio === 'free' ? null : this._ratio,\n\n\t\t\t\t\t// the initial crop to show\n\t\t\t\t\tthis._data.actions.crop,\n\n\t\t\t\t\t// the initial rotation of the image\n\t\t\t\t\tthis._data.actions.rotation,\n\n\t\t\t\t\t// handle editor load\n\t\t\t\t\tfunction () {\n\n\t\t\t\t\t\t_this27._showEditor();\n\n\t\t\t\t\t\t_this27._hideButtons();\n\n\t\t\t\t\t\t_this27._hideStatus();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_doRemove',\n\t\t\t\tvalue: function _doRemove(done) {\n\t\t\t\t\tvar _this28 = this;\n\n\t\t\t\t\t// cannot remove when is only one image\n\t\t\t\t\tif (this._isImageOnly()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._clearState();\n\t\t\t\t\tthis._addState('empty');\n\n\t\t\t\t\tthis._hasInitialImage = false;\n\t\t\t\t\tif (this._imageHopper) {\n\t\t\t\t\t\tthis._imageHopper.enabled = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._isRequired) {\n\t\t\t\t\t\tthis._input.required = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar out = this._getOutro();\n\t\t\t\t\tif (out) {\n\t\t\t\t\t\tout.style.opacity = '0';\n\t\t\t\t\t}\n\n\t\t\t\t\t// get public available clone of data\n\t\t\t\t\tvar data = this.data;\n\n\t\t\t\t\t// now reset all data\n\t\t\t\t\tthis._resetData();\n\n\t\t\t\t\tvar timer = setTimeout(function () {\n\n\t\t\t\t\t\tif (_this28._isBeingDestroyed) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_this28._hideButtons(function () {\n\n\t\t\t\t\t\t\t_this28._toggleButton('upload', true);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t_this28._hideStatus();\n\n\t\t\t\t\t\t_this28._hideResult();\n\n\t\t\t\t\t\t_this28._options.didRemove.apply(_this28, [data, _this28]);\n\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this.isDetached() ? 0 : 250);\n\n\t\t\t\t\tthis._timers.push(timer);\n\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_doUpload',\n\t\t\t\tvalue: function _doUpload(callback) {\n\t\t\t\t\tvar _this29 = this;\n\n\t\t\t\t\t// if no input data available, can't upload anything\n\t\t\t\t\tif (!this._data.input.image) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._addState('upload');\n\t\t\t\t\tthis._startProgress();\n\n\t\t\t\t\tthis._hideButtons(function () {\n\n\t\t\t\t\t\t// block upload button\n\t\t\t\t\t\t_this29._toggleButton('upload', false);\n\n\t\t\t\t\t\t_this29._save(function (err, data, res) {\n\n\t\t\t\t\t\t\t_this29._removeState('upload');\n\t\t\t\t\t\t\t_this29._stopProgress();\n\n\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\tcallback.apply(_this29, [err, data, res]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t_this29._toggleButton('upload', true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_this29._showButtons();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_doDownload',\n\t\t\t\tvalue: function _doDownload() {\n\n\t\t\t\t\tvar image = this._data.output.image;\n\t\t\t\t\tif (!image) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdownloadCanvas(this._data, this._options.jpegCompression, this._options.forceType);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: '_doDestroy',\n\t\t\t\tvalue: function _doDestroy() {\n\t\t\t\t\tvar _this30 = this;\n\n\t\t\t\t\t// set destroy flag to halt any running functionality\n\t\t\t\t\tthis._isBeingDestroyed = true;\n\n\t\t\t\t\t// clear timers\n\t\t\t\t\tthis._timers.forEach(function (timer) {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t});\n\t\t\t\t\tthis._timers = [];\n\n\t\t\t\t\t// clean up snabbt animations\n\t\t\t\t\tsnabbt(this._element, 'detach');\n\n\t\t\t\t\t// this removes the image hopper if it's attached\n\t\t\t\t\tif (this._imageHopper) {\n\t\t\t\t\t\tHopperEvents.forEach(function (e) {\n\t\t\t\t\t\t\t_this30._imageHopper.element.removeEventListener(e, _this30);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._imageHopper.destroy();\n\t\t\t\t\t\tthis._imageHopper = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// this block removes the image editor\n\t\t\t\t\tif (this._imageEditor) {\n\t\t\t\t\t\tImageEditorEvents.forEach(function (e) {\n\t\t\t\t\t\t\t_this30._imageEditor.element.removeEventListener(e, _this30);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._imageEditor.destroy();\n\t\t\t\t\t\tthis._imageEditor = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove button event listeners\n\t\t\t\t\tnodeListToArray(this._btnGroup.children).forEach(function (btn) {\n\t\t\t\t\t\tbtn.removeEventListener('click', _this30);\n\t\t\t\t\t});\n\n\t\t\t\t\t// stop listening to input\n\t\t\t\t\tthis._input.removeEventListener('change', this);\n\n\t\t\t\t\t// detect if was wrapped, if so, remove wrapping (needs to have parent node)\n\t\t\t\t\tif (this._element !== this._originalElement && this._element.parentNode) {\n\t\t\t\t\t\tthis._element.parentNode.replaceChild(this._originalElement, this._element);\n\t\t\t\t\t}\n\n\t\t\t\t\t// restore HTML of original element\n\t\t\t\t\tthis._originalElement.innerHTML = this._originalElementInner;\n\n\t\t\t\t\t// get current attributes and remove all, then add original attributes\n\t\t\t\t\tfunction matchesAttributeInList(a, attributes) {\n\t\t\t\t\t\treturn attributes.filter(function (attr) {\n\t\t\t\t\t\t\treturn a.name === attr.name && a.value === attr.value;\n\t\t\t\t\t\t}).length !== 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar attributes = getElementAttributes(this._originalElement);\n\t\t\t\t\tattributes.forEach(function (attribute) {\n\n\t\t\t\t\t\t// if attribute  is contained in original element attribute list and is the same, don't remove\n\t\t\t\t\t\tif (matchesAttributeInList(attribute, _this30._originalElementAttributes)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// else remove\n\t\t\t\t\t\t_this30._originalElement.removeAttribute(attribute.name);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._originalElementAttributes.forEach(function (attribute) {\n\n\t\t\t\t\t\t// attribute was never removed\n\t\t\t\t\t\tif (matchesAttributeInList(attribute, attributes)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add attribute\n\t\t\t\t\t\t_this30._originalElement.setAttribute(attribute.name, attribute.value);\n\t\t\t\t\t});\n\n\t\t\t\t\t// now destroyed this counter so the total Slim count can be lowered\n\t\t\t\t\tSlimCount = Math.max(0, SlimCount - 1);\n\n\t\t\t\t\t// if slim count has reached 0 it's time to clean up the popover\n\t\t\t\t\tif (SlimPopover && SlimCount === 0) {\n\t\t\t\t\t\tSlimPopover.destroy();\n\t\t\t\t\t\tSlimPopover = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._originalElement = null;\n\t\t\t\t\tthis._element = null;\n\t\t\t\t\tthis._input = null;\n\t\t\t\t\tthis._output = null;\n\t\t\t\t\tthis._btnGroup = null;\n\t\t\t\t\tthis._options = null;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'dataBase64',\n\n\t\t\t\t/**\r\n     * Public API\r\n     */\n\t\t\t\t// properties\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn flattenData(this._data, this._options.post, this._options.jpegCompression, this._options.forceType, this._options.service !== null);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'data',\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn cloneData(this._data);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'element',\n\t\t\t\tget: function get() {\n\t\t\t\t\treturn this._element;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'service',\n\t\t\t\tset: function set(service) {\n\t\t\t\t\tthis._options.service = service;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'size',\n\t\t\t\tset: function set(dimensions) {\n\t\t\t\t\tthis.setSize(dimensions, null);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'rotation',\n\t\t\t\tset: function set(rotation) {\n\t\t\t\t\tthis.setRotation(rotation, null);\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'ratio',\n\t\t\t\tset: function set(ratio) {\n\t\t\t\t\tthis.setRatio(ratio, null);\n\t\t\t\t}\n\t\t\t}], [{\n\t\t\t\tkey: 'options',\n\t\t\t\tvalue: function options() {\n\n\t\t\t\t\tvar defaults = {\n\n\t\t\t\t\t\t// edit button is enabled by default\n\t\t\t\t\t\tedit: true,\n\n\t\t\t\t\t\t// immidiately summons editor on load\n\t\t\t\t\t\tinstantEdit: false,\n\n\t\t\t\t\t\t// set to true to upload data as base64 string\n\t\t\t\t\t\tuploadBase64: false,\n\n\t\t\t\t\t\t// metadata values\n\t\t\t\t\t\tmeta: {},\n\n\t\t\t\t\t\t// ratio of crop by default is the same as input image ratio\n\t\t\t\t\t\tratio: 'free',\n\n\t\t\t\t\t\t// dimensions to resize the resulting image to\n\t\t\t\t\t\tsize: null,\n\n\t\t\t\t\t\t// set initial rotation\n\t\t\t\t\t\trotation: null,\n\n\t\t\t\t\t\t// initial crop settings for example: {x:0, y:0, width:100, height:100}\n\t\t\t\t\t\tcrop: null,\n\n\t\t\t\t\t\t// post these values\n\t\t\t\t\t\tpost: ['output', 'actions'],\n\n\t\t\t\t\t\t// call this service to submit cropped data\n\t\t\t\t\t\tservice: null,\n\t\t\t\t\t\tserviceFormat: null,\n\n\t\t\t\t\t\t// sharpen filter value, really low values might improve image output\n\t\t\t\t\t\tfilterSharpen: 0,\n\n\t\t\t\t\t\t// when service is set, and this is set to true, Soon will auto upload all crops (also auto crops)\n\t\t\t\t\t\tpush: false,\n\n\t\t\t\t\t\t// default fallback name for field\n\t\t\t\t\t\tdefaultInputName: 'slim[]',\n\n\t\t\t\t\t\t// minimum size of cropped area object with width and height property\n\t\t\t\t\t\tminSize: {\n\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\theight: 0\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// maximum file size in MB to upload\n\t\t\t\t\t\tmaxFileSize: null,\n\n\t\t\t\t\t\t// compression of JPEG (between 0 and 100)\n\t\t\t\t\t\tjpegCompression: null,\n\n\t\t\t\t\t\t// render download link\n\t\t\t\t\t\tdownload: false,\n\n\t\t\t\t\t\t// save initially loaded image\n\t\t\t\t\t\tsaveInitialImage: false,\n\n\t\t\t\t\t\t// the type to force (jpe|jpg|jpeg or png)\n\t\t\t\t\t\tforceType: false,\n\n\t\t\t\t\t\t// the forced output size of the image\n\t\t\t\t\t\tforceSize: null,\n\n\t\t\t\t\t\t// disable drop to replace\n\t\t\t\t\t\tdropReplace: true,\n\n\t\t\t\t\t\t// remote URL service\n\t\t\t\t\t\tfetcher: null,\n\n\t\t\t\t\t\t// set the internal canvas size\n\t\t\t\t\t\tinternalCanvasSize: {\n\t\t\t\t\t\t\twidth: 4096,\n\t\t\t\t\t\t\theight: 4096\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// copies the input image meta data to the output image\n\t\t\t\t\t\tcopyImageHead: false,\n\n\t\t\t\t\t\t// enable or disable rotation\n\t\t\t\t\t\trotateButton: true,\n\n\t\t\t\t\t\t// popover classname\n\t\t\t\t\t\tpopoverClassName: null,\n\n\t\t\t\t\t\t// label HTML to show inside drop area\n\t\t\t\t\t\tlabel: '<p>Drop your image here</p>',\n\t\t\t\t\t\tlabelLoading: '<p>Loading image...</p>',\n\n\t\t\t\t\t\t// error messages\n\t\t\t\t\t\tstatusFileType: '<p>Invalid file type, expects: $0.</p>',\n\t\t\t\t\t\tstatusFileSize: '<p>File is too big, maximum file size: $0 MB.</p>',\n\t\t\t\t\t\tstatusNoSupport: '<p>Your browser does not support image cropping.</p>',\n\t\t\t\t\t\tstatusImageTooSmall: '<p>Image is too small, minimum size is: $0 pixels.</p>',\n\t\t\t\t\t\tstatusContentLength: '<span class=\"slim-upload-status-icon\"></span> The file is probably too big',\n\t\t\t\t\t\tstatusUnknownResponse: '<span class=\"slim-upload-status-icon\"></span> An unknown error occurred',\n\t\t\t\t\t\tstatusUploadSuccess: '<span class=\"slim-upload-status-icon\"></span> Saved',\n\n\t\t\t\t\t\t// callback methods\n\t\t\t\t\t\tdidInit: function didInit(data) {},\n\t\t\t\t\t\tdidLoad: function didLoad(file, image, meta) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdidSave: function didSave(data) {},\n\t\t\t\t\t\tdidUpload: function didUpload(err, data, res) {},\n\t\t\t\t\t\tdidReceiveServerError: function didReceiveServerError(err, defaultError) {\n\t\t\t\t\t\t\treturn defaultError;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdidRemove: function didRemove(data) {},\n\t\t\t\t\t\tdidTransform: function didTransform(data) {},\n\t\t\t\t\t\tdidConfirm: function didConfirm(data) {},\n\t\t\t\t\t\tdidCancel: function didCancel() {},\n\n\t\t\t\t\t\twillTransform: function willTransform(data, cb) {\n\t\t\t\t\t\t\tcb(data);\n\t\t\t\t\t\t},\n\t\t\t\t\t\twillSave: function willSave(data, cb) {\n\t\t\t\t\t\t\tcb(data);\n\t\t\t\t\t\t},\n\t\t\t\t\t\twillRemove: function willRemove(data, cb) {\n\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t},\n\t\t\t\t\t\twillRequest: function willRequest(xhr) {}\n\n\t\t\t\t\t};\n\n\t\t\t\t\t// add default button labels\n\t\t\t\t\tSlimButtons.concat(ImageEditor.Buttons).concat('rotate').forEach(function (btn) {\n\t\t\t\t\t\tvar capitalized = capitalizeFirstLetter(btn);\n\t\t\t\t\t\tdefaults['button' + capitalized + 'ClassName'] = null;\n\t\t\t\t\t\tdefaults['button' + capitalized + 'Label'] = capitalized;\n\t\t\t\t\t\tdefaults['button' + capitalized + 'Title'] = capitalized;\n\t\t\t\t\t});\n\n\t\t\t\t\treturn defaults;\n\t\t\t\t}\n\t\t\t}]);\n\n\t\t\treturn Slim;\n\t\t}();\n\n\t\t/**\r\n   * Slim Static Methods\r\n   */\n\n\t\t(function () {\n\n\t\t\tvar instances = [];\n\n\t\t\tvar indexOfElement = function indexOfElement(element) {\n\t\t\t\tvar i = 0;\n\t\t\t\tvar l = instances.length;\n\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\tif (instances[i].isAttachedTo(element)) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t};\n\n\t\t\tfunction toLabel(v) {\n\t\t\t\t// if value set, use as label\n\t\t\t\tif (v) {\n\t\t\t\t\treturn '<p>' + v + '</p>';\n\t\t\t\t}\n\n\t\t\t\t// else use default text\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfunction toFunctionReference(name) {\n\t\t\t\tvar ref = window;\n\t\t\t\tvar levels = name.split('.');\n\t\t\t\tlevels.forEach(function (level, index) {\n\t\t\t\t\tif (!ref[levels[index]]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tref = ref[levels[index]];\n\t\t\t\t});\n\t\t\t\treturn ref !== window ? ref : null;\n\t\t\t}\n\n\t\t\tvar passThrough = function passThrough(v) {\n\t\t\t\treturn v;\n\t\t\t};\n\t\t\tvar defaultFalse = function defaultFalse(v) {\n\t\t\t\treturn v === 'true';\n\t\t\t};\n\t\t\tvar defaultTrue = function defaultTrue(v) {\n\t\t\t\treturn v ? v === 'true' : true;\n\t\t\t};\n\t\t\tvar defaultLabel = function defaultLabel(v) {\n\t\t\t\treturn toLabel(v);\n\t\t\t};\n\t\t\tvar defaultFunction = function defaultFunction(v) {\n\t\t\t\treturn v ? toFunctionReference(v) : null;\n\t\t\t};\n\t\t\tvar defaultSize = function defaultSize(v) {\n\t\t\t\tif (!v) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvar parts = intSplit(v, ',');\n\t\t\t\treturn {\n\t\t\t\t\twidth: parts[0],\n\t\t\t\t\theight: parts[1]\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tvar toFloat = function toFloat(v) {\n\t\t\t\tif (!v) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn parseFloat(v);\n\t\t\t};\n\n\t\t\tvar toInt = function toInt(v) {\n\t\t\t\tif (!v) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn parseInt(v, 10);\n\t\t\t};\n\n\t\t\tvar toRect = function toRect(v) {\n\t\t\t\tif (!v) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvar obj = {};\n\t\t\t\tv.split(',').map(function (p) {\n\t\t\t\t\treturn parseInt(p, 10);\n\t\t\t\t}).forEach(function (v, i) {\n\t\t\t\t\tobj[Rect[i]] = v;\n\t\t\t\t});\n\t\t\t\treturn obj;\n\t\t\t};\n\n\t\t\tvar defaults = {\n\n\t\t\t\t// is user allowed to download the cropped image?\n\t\t\t\t'download': defaultFalse,\n\n\t\t\t\t// is user allowed to edit the cropped image?\n\t\t\t\t'edit': defaultTrue,\n\n\t\t\t\t// open editor immidiately on file drop\n\t\t\t\t'instantEdit': defaultFalse,\n\n\t\t\t\t// minimum crop size in pixels of original image\n\t\t\t\t'minSize': defaultSize,\n\n\t\t\t\t// the final bounding box of the output image\n\t\t\t\t'size': defaultSize,\n\n\t\t\t\t// the forced output size of the image\n\t\t\t\t'forceSize': defaultSize,\n\n\t\t\t\t// the internal data canvas size\n\t\t\t\t'internalCanvasSize': defaultSize,\n\n\t\t\t\t// url to post to\n\t\t\t\t'service': function service(v) {\n\t\t\t\t\tif (typeof v === 'undefined') {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tvar fn = toFunctionReference(v);\n\t\t\t\t\tif (fn) {\n\t\t\t\t\t\treturn fn;\n\t\t\t\t\t}\n\t\t\t\t\treturn v;\n\t\t\t\t},\n\n\t\t\t\t// format of service data\n\t\t\t\t'serviceFormat': function serviceFormat(v) {\n\t\t\t\t\treturn typeof v === 'undefined' ? null : v;\n\t\t\t\t},\n\n\t\t\t\t// url to fetch service\n\t\t\t\t'fetcher': function fetcher(v) {\n\t\t\t\t\treturn typeof v === 'undefined' ? null : v;\n\t\t\t\t},\n\n\t\t\t\t// set auto push mode\n\t\t\t\t'push': defaultFalse,\n\n\t\t\t\t// initial rotation\n\t\t\t\t'rotation': function rotation(v) {\n\t\t\t\t\treturn typeof v === 'undefined' ? null : parseInt(v, 10);\n\t\t\t\t},\n\n\t\t\t\t// set crop rect\n\t\t\t\t'crop': toRect,\n\n\t\t\t\t// what to post\n\t\t\t\t'post': function post(v) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn v.split(',').map(function (item) {\n\t\t\t\t\t\treturn item.trim();\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\t// default input name\n\t\t\t\t'defaultInputName': passThrough,\n\n\t\t\t\t// the ratio of the crop\n\t\t\t\t'ratio': function ratio(v) {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn v;\n\t\t\t\t},\n\n\t\t\t\t// maximum file size\n\t\t\t\t'maxFileSize': toFloat,\n\n\t\t\t\t// sharpen filter\n\t\t\t\t'filterSharpen': toInt,\n\n\t\t\t\t// jpeg compression\n\t\t\t\t'jpegCompression': toInt,\n\n\t\t\t\t// base64 data uploading\n\t\t\t\t'uploadBase64': defaultFalse,\n\n\t\t\t\t// sets file type to force output to\n\t\t\t\t'forceType': passThrough,\n\n\t\t\t\t// drop to replace\n\t\t\t\t'dropReplace': defaultTrue,\n\n\t\t\t\t// bool determining if initial image should be saved\n\t\t\t\t'saveInitialImage': defaultFalse,\n\n\t\t\t\t// copies input image head to output image\n\t\t\t\t'copyImageHead': defaultFalse,\n\n\t\t\t\t// rotate button\n\t\t\t\t'rotateButton': defaultTrue,\n\n\t\t\t\t// default labels\n\t\t\t\t'label': defaultLabel,\n\t\t\t\t'labelLoading': defaultLabel,\n\n\t\t\t\t// class name to put on popover element\n\t\t\t\t'popoverClassName': passThrough\n\n\t\t\t};\n\n\t\t\t// labels\n\t\t\t['FileSize', 'FileType', 'NoSupport', 'ImageTooSmall'].forEach(function (status) {\n\t\t\t\tdefaults['status' + status] = defaultLabel;\n\t\t\t});\n\n\t\t\t// status\n\t\t\t['ContentLength', 'UnknownResponse', 'UploadSuccess'].forEach(function (status) {\n\t\t\t\tdefaults['status' + status] = passThrough;\n\t\t\t});\n\n\t\t\t// the did callbacks\n\t\t\t['Init', 'Load', 'Save', 'Upload', 'Remove', 'Transform', 'ReceiveServerError', 'Confirm', 'Cancel'].forEach(function (cb) {\n\t\t\t\tdefaults['did' + cb] = defaultFunction;\n\t\t\t});\n\n\t\t\t// the will callbacks\n\t\t\t['Transform', 'Save', 'Remove', 'Request'].forEach(function (cb) {\n\t\t\t\tdefaults['will' + cb] = defaultFunction;\n\t\t\t});\n\n\t\t\t// button defaults\n\t\t\tvar buttonOptions = ['ClassName', 'Label', 'Title'];\n\t\t\tSlimButtons.concat(ImageEditor.Buttons).concat('rotate').forEach(function (btn) {\n\t\t\t\tvar capitalized = capitalizeFirstLetter(btn);\n\t\t\t\tbuttonOptions.forEach(function (opt) {\n\t\t\t\t\tdefaults['button' + capitalized + opt] = passThrough;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tSlim.supported = function () {\n\n\t\t\t\treturn !(\n\n\t\t\t\t// is opera mini\n\t\t\t\tObject.prototype.toString.call(window.operamini) === '[object OperaMini]' ||\n\n\t\t\t\t// no event listener support\n\t\t\t\ttypeof window.addEventListener === 'undefined' ||\n\n\t\t\t\t// no file reader support\n\t\t\t\ttypeof window.FileReader === 'undefined' ||\n\n\t\t\t\t// no blob slicing (can't dupe files)\n\t\t\t\t!('slice' in Blob.prototype) ||\n\n\t\t\t\t// no .createObjectURL support, used by download method but also convenient to exclude Android 4.3 and lower\n\t\t\t\t// Android 4.3 and lower don't support XHR2 responseType blob\n\t\t\t\ttypeof window.URL === 'undefined' || typeof window.URL.createObjectURL === 'undefined');\n\t\t\t}();\n\n\t\t\tSlim.parse = function (context) {\n\t\t\t\tvar elements;\n\t\t\t\tvar element;\n\t\t\t\tvar i;\n\t\t\t\tvar croppers = [];\n\n\t\t\t\t// find all crop elements and bind Crop behavior\n\t\t\t\telements = context.querySelectorAll('.slim:not([data-state])');\n\t\t\t\ti = elements.length;\n\n\t\t\t\twhile (i--) {\n\t\t\t\t\telement = elements[i];\n\t\t\t\t\tcroppers.push(Slim.create(element, Slim.getOptionsFromAttributes(element)));\n\t\t\t\t}\n\n\t\t\t\treturn croppers;\n\t\t\t};\n\n\t\t\tSlim.getOptionsFromAttributes = function (element) {\n\n\t\t\t\tvar dataset = getDataset(element);\n\n\t\t\t\tvar options = {\n\t\t\t\t\tmeta: {}\n\t\t\t\t};\n\n\t\t\t\tfor (var prop in dataset) {\n\n\t\t\t\t\tvar valueTransformer = defaults[prop];\n\t\t\t\t\tvar _value = dataset[prop];\n\n\t\t\t\t\tif (valueTransformer) {\n\t\t\t\t\t\t_value = valueTransformer(_value);\n\t\t\t\t\t\t_value = _value === null ? clone(Slim.options()[prop]) : _value;\n\t\t\t\t\t\toptions[prop] = _value;\n\t\t\t\t\t} else if (prop.indexOf('meta') === 0) {\n\t\t\t\t\t\toptions['meta'][lowercaseFirstLetter(prop.substr(4))] = _value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn options;\n\t\t\t};\n\n\t\t\tSlim.find = function (element) {\n\t\t\t\tvar result = instances.filter(function (instance) {\n\t\t\t\t\treturn instance.isAttachedTo(element);\n\t\t\t\t});\n\t\t\t\treturn result ? result[0] : null;\n\t\t\t};\n\n\t\t\tSlim.create = function (element, options) {\n\n\t\t\t\t// if already in array, can't create another slim\n\t\t\t\tif (Slim.find(element)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// if no options supplied, try to get the options from the element\n\t\t\t\tif (!options) {\n\t\t\t\t\toptions = Slim.getOptionsFromAttributes(element);\n\t\t\t\t}\n\n\t\t\t\t// instance\n\t\t\t\tvar slim = new Slim(element, options);\n\n\t\t\t\t// add new slim\n\t\t\t\tinstances.push(slim);\n\n\t\t\t\t// return the slim instance\n\t\t\t\treturn slim;\n\t\t\t};\n\n\t\t\tSlim.destroy = function (element) {\n\t\t\t\tvar index = indexOfElement(element);\n\n\t\t\t\tif (index < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tinstances[index].destroy();\n\t\t\t\tinstances.splice(index, 1);\n\n\t\t\t\treturn true;\n\t\t\t};\n\t\t})();\n\t\treturn Slim;\n\t}();\n\n\t// Create scope\n\tvar scopeDef = {};\n\tfor (var key in Slim.options()) {\n\t\tif (/^(did|will)/.test(key)) {\n\t\t\tscopeDef[key] = '=';\n\t\t}\n\t}\n\tscopeDef['service'] = '=';\n\n\t// Setters\n\tvar setters = ['rotation', 'size', 'ratio'];\n\tfor (var i = 0; i < setters.length; i++) {\n\t\tscopeDef[setters[i]] = '@';\n\t}\n\tsetters.push('service');\n\n\tfunction setOptionsFromObjectToObject(source, target) {\n\t\tfor (var key in source) {\n\t\t\tif (!source[key]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t}\n\n\t// Angular Directive\n\tangular.module('slim', []).directive('slim', function () {\n\t\treturn {\n\t\t\trestrict: 'EC',\n\t\t\tscope: scopeDef,\n\t\t\tlink: function link(scope, element, attrs) {\n\n\t\t\t\tvar slim = null;\n\t\t\t\tvar options = null;\n\t\t\t\tvar container = element[0];\n\n\t\t\t\t// setup root element\n\t\t\t\tvar root = document.createElement('div');\n\t\t\t\troot.className = 'slim';\n\t\t\t\tvar inner = container.innerHTML;\n\t\t\t\tcontainer.innerHTML = '';\n\t\t\t\tcontainer.appendChild(root);\n\t\t\t\troot.innerHTML = inner;\n\n\t\t\t\t// create initial image if set\n\t\t\t\tif (attrs.initialImage) {\n\t\t\t\t\tvar image = document.createElement('img');\n\t\t\t\t\timage.src = attrs.initialImage;\n\t\t\t\t\timage.setAttribute('alt', '');\n\t\t\t\t\troot.appendChild(image);\n\t\t\t\t}\n\n\t\t\t\t// gets options from container\n\t\t\t\toptions = Slim.getOptionsFromAttributes(container);\n\n\t\t\t\t// override with options from scope\n\t\t\t\tfor (var key in scopeDef) {\n\t\t\t\t\tif (!scope[key]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\toptions[key] = scope[key];\n\t\t\t\t}\n\n\t\t\t\t// create the cropper\n\t\t\t\tslim = Slim.create(root, options);\n\n\t\t\t\t// watch for setter changes\n\t\t\t\tsetters.forEach(function (setter) {\n\t\t\t\t\tscope.$watch(setter, function (newValue, oldValue) {\n\t\t\t\t\t\tif (newValue === oldValue) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tslim[setter] = newValue;\n\t\t\t\t\t}, true);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});\n})(angular);\n(function () {\n\t'use strict';\n\n\tangular.module('ngGeolocation', []).factory('$geolocation', ['$rootScope', '$window', '$q', function ($rootScope, $window, $q) {\n\n\t\tfunction supported() {\n\t\t\treturn 'geolocation' in $window.navigator;\n\t\t}\n\n\t\tvar retVal = {\n\t\t\tgetCurrentPosition: function getCurrentPosition(options) {\n\t\t\t\tvar deferred = $q.defer();\n\t\t\t\tif (supported()) {\n\t\t\t\t\t$window.navigator.geolocation.getCurrentPosition(function (position) {\n\t\t\t\t\t\t$rootScope.$apply(function () {\n\t\t\t\t\t\t\tretVal.position.coords = position.coords;\n\t\t\t\t\t\t\tretVal.position.timestamp = position.timestamp;\n\t\t\t\t\t\t\tdeferred.resolve(position);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t$rootScope.$apply(function () {\n\t\t\t\t\t\t\tdeferred.reject({ error: error });\n\t\t\t\t\t\t});\n\t\t\t\t\t}, options);\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.reject({ error: {\n\t\t\t\t\t\t\tcode: 2,\n\t\t\t\t\t\t\tmessage: 'This web browser does not support HTML5 Geolocation'\n\t\t\t\t\t\t} });\n\t\t\t\t}\n\t\t\t\treturn deferred.promise;\n\t\t\t},\n\n\t\t\twatchPosition: function watchPosition(options) {\n\t\t\t\tif (supported()) {\n\t\t\t\t\tif (!this.watchId) {\n\t\t\t\t\t\tthis.watchId = $window.navigator.geolocation.watchPosition(function (position) {\n\t\t\t\t\t\t\t$rootScope.$apply(function () {\n\t\t\t\t\t\t\t\tretVal.position.coords = position.coords;\n\t\t\t\t\t\t\t\tretVal.position.timestamp = position.timestamp;\n\t\t\t\t\t\t\t\tdelete retVal.position.error;\n\t\t\t\t\t\t\t\t$rootScope.$broadcast('$geolocation.position.changed', position);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\t$rootScope.$apply(function () {\n\t\t\t\t\t\t\t\tretVal.position.error = error;\n\t\t\t\t\t\t\t\tdelete retVal.position.coords;\n\t\t\t\t\t\t\t\tdelete retVal.position.timestamp;\n\t\t\t\t\t\t\t\t$rootScope.$broadcast('$geolocation.position.error', error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tretVal.position = {\n\t\t\t\t\t\terror: {\n\t\t\t\t\t\t\tcode: 2,\n\t\t\t\t\t\t\tmessage: 'This web browser does not support HTML5 Geolocation'\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tclearWatch: function clearWatch() {\n\t\t\t\tif (this.watchId) {\n\t\t\t\t\t$window.navigator.geolocation.clearWatch(this.watchId);\n\t\t\t\t\tdelete this.watchId;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tposition: {}\n\t\t};\n\n\t\treturn retVal;\n\t}]);\n})();\n\nvar env = {};\n\n// Import variables if present (from env.js)\nif (window) {\n\tObject.assign(env, window.__env);\n}\n\nvar app = angular.module('takeNGo', ['slim', 'ngGeolocation', 'ngCookies', 'ngMap']).constant('ENV', env).config(function ($httpProvider) {\n\t$httpProvider.defaults.withCredentials = true;\n}).config(['$locationProvider', function ($locationProvider) {\n\t$locationProvider.html5Mode({\n\t\tenabled: true,\n\t\trequireBase: false\n\t});\n}]);\n\napp.controller('mainController', ['$scope', '$timeout', '$http', '$rootScope', 'ENV', '$geolocation', '$cookies', function ($scope, $timeout, $http, $rootScope, ENV, $geolocation, $cookies) {\n\t$scope.digest = function (a) {\n\t\tvar waitForRenderAndDoSomething = function waitForRenderAndDoSomething() {\n\t\t\tif ($http.pendingRequests.length > 0) {\n\t\t\t\t$timeout(waitForRenderAndDoSomething); // Wait for all templates to be loaded\n\t\t\t} else {\n\t\t\t\tif (a) {\n\t\t\t\t\treturn a();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn $timeout(waitForRenderAndDoSomething);\n\t};\n\n\t$scope.range = function (n) {\n\t\treturn new Array(n);\n\t};\n\n\t$rootScope.metadata = {\n\t\tsigned_in: false,\n\t\temail_verified: false,\n\t\tsigning: true,\n\t\ttng_uid: '',\n\t\temail: '',\n\t\tloading: {\n\t\t\tsign_up: false,\n\t\t\tsign_in: false\n\t\t},\n\t\tauth: {},\n\t\tcurrent_location: null,\n\t\tcurrent_location_retrieved: false\n\t};\n\n\t$geolocation.watchPosition({\n\t\ttimeout: 60000,\n\t\tmaximumAge: 250,\n\t\tenableHighAccuracy: true\n\t});\n\tconsole.log($geolocation);\n\n\t$scope.$on('$geolocation.position.changed', function (events, args) {\n\t\t$rootScope.metadata.current_location = {\n\t\t\tlatitude: args.coords.latitude,\n\t\t\tlongitude: args.coords.longitude,\n\t\t\ttimestamp: args.timestamp\n\t\t};\n\t\t$rootScope.metadata.current_location_retrieved = true;\n\t\tconsole.log($rootScope.metadata.current_location);\n\t\t$scope.digest();\n\t});\n\n\t$scope.modalFunc = {\n\t\tcloseAuth: function closeAuth() {\n\t\t\t$('#signup-form').modal('hide');\n\t\t\t$('#login-form').modal('hide');\n\t\t\t$('#forget-password-form').modal('hide');\n\t\t}\n\t};\n\n\t$scope.authenticate = {};\n\n\t$scope.authenticate.check = function () {\n\t\t$scope.authenticate.check_token().then(function () {\n\t\t\t$scope.modalFunc.closeAuth();\n\t\t\t// $scope.authenticate.register_auth().then(()=>{\n\t\t\t//     console.log('register auth success');\n\t\t\t// }).catch(()=>{\n\t\t\t//     console.log('register auth fail');\n\t\t\t// })\n\t\t\t$scope.authenticate.get_profile().then(function (data) {\n\t\t\t\tvar user = (data.data || {}).user;\n\t\t\t\t$rootScope.metadata.signing = false;\n\t\t\t\t$rootScope.metadata = Object.assign($rootScope.metadata, {\n\t\t\t\t\tsigned_in: true,\n\t\t\t\t\temail: user.email,\n\t\t\t\t\tuid: user.uid,\n\t\t\t\t\temail_verified: user.s_verified\n\t\t\t\t});\n\t\t\t\t$scope.digest();\n\t\t\t\tconsole.log($rootScope.metadata);\n\t\t\t}).catch(function () {\n\t\t\t\t$scope.authenticate.sign_out();\n\t\t\t});\n\t\t}).catch(function () {\n\t\t\t$scope.authenticate.sign_out();\n\t\t});\n\t};\n\n\t$scope.authenticate.get_profile = function () {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\t$http.post(ENV.API_URL + 'profile', {}, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-TKNG-UID': $rootScope.metadata.auth.uid,\n\t\t\t\t\t'X-TKNG-TKN': $rootScope.metadata.auth.token,\n\t\t\t\t\t'X-TKNG-EM': $rootScope.metadata.auth.email\n\t\t\t\t}\n\t\t\t}).then(function (data) {\n\t\t\t\tconsole.log('get_profile');\n\t\t\t\tconsole.log(data);\n\t\t\t\tconsole.log('end of get_profile');\n\t\t\t\tresolve(data);\n\t\t\t}, function (err) {\n\t\t\t\tconsole.log('err get_profile');\n\t\t\t\tconsole.log(err);\n\t\t\t\tconsole.log('end of get_profile');\n\t\t\t\treject();\n\t\t\t});\n\t\t});\n\t};\n\n\t$scope.authenticate.check_token = function () {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\t$http.post(ENV.API_URL + 'token').then(function (data) {\n\t\t\t\tconsole.log('check_token');\n\t\t\t\tconsole.log(data);\n\t\t\t\tconsole.log('end of check_token');\n\t\t\t\tif (data.data.status == 'OK') {\n\t\t\t\t\tconsole.log(data.data);\n\t\t\t\t\t$rootScope.metadata.auth = {\n\t\t\t\t\t\tuid: data.data.uid,\n\t\t\t\t\t\ttoken: data.data.token,\n\t\t\t\t\t\temail: data.data.email,\n\t\t\t\t\t\tfirst_name: data.data.first_name\n\t\t\t\t\t};\n\t\t\t\t\t$cookies.put('fe_uid', data.data.uid);\n\t\t\t\t\t$cookies.put('fe_token', data.data.token);\n\t\t\t\t\t$cookies.put('fe_email', data.data.email);\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\treject();\n\t\t\t\t}\n\t\t\t}, function (err) {\n\t\t\t\tconsole.log('check_token err');\n\t\t\t\tconsole.log(err.data);\n\t\t\t\tconsole.log('end of check_token err');\n\t\t\t\treject();\n\t\t\t});\n\t\t});\n\t};\n\n\t$scope.authenticate.register_auth = function () {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\t$http.post('/register-auth', {}, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-TKNG-UID': $rootScope.metadata.auth.uid,\n\t\t\t\t\t'X-TKNG-TKN': $rootScope.metadata.auth.token,\n\t\t\t\t\t'X-TKNG-EM': $rootScope.metadata.auth.email\n\t\t\t\t}\n\t\t\t}).then(function (data) {\n\t\t\t\tresolve();\n\t\t\t\tconsole.log(data);\n\t\t\t}, function (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treject();\n\t\t\t});\n\t\t});\n\t};\n\n\t$scope.authenticate.sign_out = function () {\n\t\tconsole.log('signing out');\n\t\t$rootScope.metadata.signing = false;\n\t\t$rootScope.metadata = Object.assign($rootScope.metadata, {\n\t\t\tsigned_in: false,\n\t\t\temail_verified: false,\n\t\t\ttng_uid: '',\n\t\t\temail: ''\n\t\t});\n\t\t$http.post(ENV.API_URL + 'reset_auth').then(function (data) {\n\t\t\tconsole.log(data);\n\t\t}, function (err) {});\n\t\t$scope.digest();\n\t};\n\n\t$(document).ready(function () {\n\t\tsetTimeout($scope.authenticate.check, 500);\n\t});\n}]);\napp.controller('signInController', ['$scope', '$rootScope', '$timeout', '$http', 'ENV', function ($scope, $rootScope, $timeout, $http, ENV) {\n\n\t$scope.signin_error = {\n\t\temail: false,\n\t\tpassword: false,\n\t\terror: false,\n\t\tmessage: {\n\t\t\temail: [],\n\t\t\tpassword: [],\n\t\t\terror: []\n\t\t}\n\t};\n\n\t$scope.reset_input = function () {\n\t\t$scope.signin_information = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t};\n\t};\n\n\tvar reset_error = function reset_error() {\n\t\t$scope.signin_error.error = false;\n\t\t$scope.signin_error.message.error = [];\n\t};\n\n\t$scope.reset_input();\n\n\t$scope.signin = function () {\n\t\tvar _$scope$signin_inform = $scope.signin_information,\n\t\t    email = _$scope$signin_inform.email,\n\t\t    password = _$scope$signin_inform.password;\n\n\t\t$rootScope.metadata.loading.sign_in = true;\n\t\t$http.post(ENV.API_URL + 'login', {\n\t\t\temail: email,\n\t\t\tpassword: password\n\t\t}).then(function (data) {\n\t\t\tconsole.log(data);\n\t\t\t$rootScope.metadata.loading.sign_in = false;\n\n\t\t\t//RESET INPUT & ERRORS\n\t\t\t$scope.reset_input();\n\t\t\treset_error();\n\t\t\t$scope.authenticate.check();\n\t\t\t$scope.modalFunc.closeAuth();\n\t\t}, function (data) {\n\t\t\tvar response = data.data;\n\t\t\t$scope.signin_error.error = true;\n\t\t\t$scope.signin_error.message.error = ['Invalid email or password!'];\n\t\t\t$rootScope.metadata.loading.sign_in = false;\n\t\t\t$scope.digest();\n\t\t});\n\t};\n}]);\napp.controller('signUpController', ['$scope', '$rootScope', '$timeout', '$http', 'ENV', function ($scope, $rootScope, $timeout, $http, ENV) {\n\n\t$scope.signup_error = {\n\t\tfirst_name: false,\n\t\tlast_name: false,\n\t\temail: false,\n\t\tpassword_confirmation: false,\n\t\tpassword: false,\n\t\tmessage: {\n\t\t\tfirst_name: [],\n\t\t\tlast_name: [],\n\t\t\temail: [],\n\t\t\tpassword_confirmation: [],\n\t\t\tpassword: []\n\t\t}\n\t};\n\n\t$scope.reset_input = function () {\n\t\t$scope.signup_information = {\n\t\t\tfirst_name: '',\n\t\t\tlast_name: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tpassword_confirmation: ''\n\t\t};\n\t};\n\n\t$scope.reset_input();\n\n\tvar reset_error = function reset_error() {\n\t\t$scope.signup_error.first_name = false;\n\t\t$scope.signup_error.message.first_name = [];\n\t\t$scope.signup_error.last_name = false;\n\t\t$scope.signup_error.message.last_name = [];\n\t\t$scope.signup_error.email = false;\n\t\t$scope.signup_error.message.email = [];\n\t\t$scope.signup_error.password = false;\n\t\t$scope.signup_error.message.password = [];\n\t\t$scope.signup_error.password_confirmation = false;\n\t\t$scope.signup_error.message.password_confirmation = [];\n\t};\n\n\t$scope.signup = function () {\n\t\tvar _$scope$signup_inform = $scope.signup_information,\n\t\t    first_name = _$scope$signup_inform.first_name,\n\t\t    last_name = _$scope$signup_inform.last_name,\n\t\t    email = _$scope$signup_inform.email,\n\t\t    password = _$scope$signup_inform.password,\n\t\t    password_confirmation = _$scope$signup_inform.password_confirmation;\n\n\t\tif (password != password_confirmation) {\n\t\t\t$scope.signup_error.password_confirmation = true;\n\t\t\t$scope.signup_error.message.password_confirmation = ['Password does not match'];\n\t\t\treturn;\n\t\t}\n\t\t$rootScope.metadata.loading.sign_up = true;\n\t\t$http.post(ENV.API_URL + 'register', {\n\t\t\tfirst_name: first_name,\n\t\t\tlast_name: last_name,\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\tpassword_confirmation: password_confirmation\n\t\t}).then(function (data) {\n\t\t\tconsole.log(data);\n\t\t\t$rootScope.metadata.loading.sign_up = false;\n\n\t\t\t//RESET INPUT & ERRORS\n\t\t\t$scope.reset_input();\n\t\t\treset_error();\n\n\t\t\t$scope.authenticate.check();\n\t\t\t$scope.modalFunc.closeAuth();\n\t\t\t$('#sign-up-success').modal('show');\n\t\t}, function (data) {\n\t\t\tif (data.status == 422) {\n\t\t\t\tvar response = data.data;\n\t\t\t\tconsole.log(response);\n\t\t\t\tif (response.first_name) {\n\t\t\t\t\t$scope.signup_error.first_name = true;\n\t\t\t\t\t$scope.signup_error.message.first_name = response.first_name;\n\t\t\t\t}\n\t\t\t\tif (response.last_name) {\n\t\t\t\t\t$scope.signup_error.last_name = true;\n\t\t\t\t\t$scope.signup_error.message.last_name = response.last_name;\n\t\t\t\t}\n\t\t\t\tif (response.email) {\n\t\t\t\t\t$scope.signup_error.email = true;\n\t\t\t\t\t$scope.signup_error.message.email = response.email;\n\t\t\t\t}\n\t\t\t\tif (response.password) {\n\t\t\t\t\t$scope.signup_error.password = true;\n\t\t\t\t\t$scope.signup_error.message.password = response.password;\n\t\t\t\t}\n\t\t\t\tif (response.password_confirmation) {\n\t\t\t\t\t$scope.signup_error.password_confirmation = true;\n\t\t\t\t\t$scope.signup_error.message.password_confirmation = response.password_confirmation;\n\t\t\t\t}\n\t\t\t\t$rootScope.metadata.loading.sign_up = false;\n\t\t\t\t$scope.digest();\n\t\t\t}\n\t\t});\n\t};\n}]);\napp.controller('headerController', ['$scope', '$rootScope', function ($scope, $rootScope) {}]);\napp.controller('profileEditController', ['$scope', '$rootScope', '$http', 'ENV', function ($scope, $rootScope, $http, ENV) {\n\t$scope.profile_error = {\n\t\tfirst_name: false,\n\t\tlast_name: false,\n\t\tgender: false,\n\t\tbirth_date: false,\n\t\taddress: false,\n\t\tsuburb: false,\n\t\tstate: false,\n\t\tpost_code: false,\n\t\tmessage: {\n\t\t\tfirst_name: [],\n\t\t\tlast_name: [],\n\t\t\tgender: [],\n\t\t\tbirth_date: [],\n\t\t\taddress: [],\n\t\t\tsuburb: [],\n\t\t\tstate: [],\n\t\t\tpost_code: []\n\t\t}\n\t};\n\n\t$scope.profile_form = {\n\t\tfirst_name: '',\n\t\tlast_name: '',\n\t\tgender: '',\n\t\tbirth_date: moment().format('DD MMMM YYYY'),\n\t\taddress: '',\n\t\tsuburb: '',\n\t\tstate: '',\n\t\tpost_code: ''\n\t};\n\n\t$(\"#caleran-header\").caleran({\n\t\tsingleDate: true,\n\t\tcalendarCount: 1,\n\t\tshowHeader: false,\n\t\tshowFooter: false,\n\t\tautoCloseOnSelect: true,\n\t\tformat: 'DD MMMM YYYY',\n\t\tmaxDate: new Date(),\n\t\tenableKeyboard: true,\n\t\tonafterselect: function onafterselect(caleran, startDate, endDate) {\n\t\t\t// caleran: caleran object instance\n\t\t\t// startDate: moment.js instance\n\t\t\t// endDate: moment.js instance\n\t\t\t$scope.profile_form.birth_date = startDate.format('DD MMMM YYYY');\n\t\t\t$scope.digest();\n\t\t}\n\t});\n\n\t$scope.save_profile = function () {\n\t\t$http.put(ENV.API_URL + 'profile/edit', $scope.profile_form, {\n\t\t\theaders: {\n\t\t\t\t'X-TKNG-UID': $rootScope.metadata.auth.uid,\n\t\t\t\t'X-TKNG-TKN': $rootScope.metadata.auth.token,\n\t\t\t\t'X-TKNG-EM': $rootScope.metadata.auth.email\n\t\t\t}\n\t\t}).then(function (data) {\n\t\t\tconsole.log(data);\n\t\t}, function (data) {\n\t\t\tconsole.log(data);\n\t\t\tif (data.status == 422) {\n\t\t\t\tvar response = data.data;\n\t\t\t\tif (response.first_name) {\n\t\t\t\t\t$scope.profile_error.first_name = true;\n\t\t\t\t\t$scope.profile_error.message.first_name = response.first_name;\n\t\t\t\t}\n\t\t\t\tif (response.last_name) {\n\t\t\t\t\t$scope.profile_error.last_name = true;\n\t\t\t\t\t$scope.profile_error.message.last_name = response.last_name;\n\t\t\t\t}\n\t\t\t\tif (response.gender) {\n\t\t\t\t\t$scope.profile_error.gender = true;\n\t\t\t\t\t$scope.profile_error.message.gender = response.gender;\n\t\t\t\t}\n\t\t\t\tif (response.phone) {\n\t\t\t\t\t$scope.profile_error.phone = true;\n\t\t\t\t\t$scope.profile_error.message.phone = response.phone;\n\t\t\t\t}\n\t\t\t\tif (response.birth_date) {\n\t\t\t\t\t$scope.profile_error.birth_date = true;\n\t\t\t\t\t$scope.profile_error.message.birth_date = response.birth_date;\n\t\t\t\t}\n\t\t\t\tif (response.address) {\n\t\t\t\t\t$scope.profile_error.address = true;\n\t\t\t\t\t$scope.profile_error.message.address = response.address;\n\t\t\t\t}\n\t\t\t\tif (response.suburb) {\n\t\t\t\t\t$scope.profile_error.suburb = true;\n\t\t\t\t\t$scope.profile_error.message.suburb = response.suburb;\n\t\t\t\t}\n\t\t\t\tif (response.state) {\n\t\t\t\t\t$scope.profile_error.state = true;\n\t\t\t\t\t$scope.profile_error.message.state = response.state;\n\t\t\t\t}\n\t\t\t\tif (response.post_code) {\n\t\t\t\t\t$scope.profile_error.post_code = true;\n\t\t\t\t\t$scope.profile_error.message.post_code = response.post_code;\n\t\t\t\t}\n\t\t\t\t$scope.digest();\n\t\t\t}\n\t\t});\n\t};\n}]);\n\napp.controller('profileDocumentController', ['$scope', '$rootScope', '$http', 'ENV', function ($scope, $rootScope, $http, ENV) {\n\t$scope.slim = {\n\t\tapi_url: ENV.API_URL + 'user/document/upload',\n\t\t// called when slim has initialized\n\t\tinit: function init(data, slim) {\n\t\t\t// slim instance reference\n\t\t\tconsole.log(slim);\n\n\t\t\t// current slim data object and slim reference\n\t\t\tconsole.log(data);\n\t\t},\n\t\twill_request: function will_request(xhr) {\n\t\t\txhr.setRequestHeader('X-TKNG-UID', $rootScope.metadata.auth.uid);\n\t\t\txhr.setRequestHeader('X-TKNG-TKN', $rootScope.metadata.auth.token);\n\t\t\txhr.setRequestHeader('X-TKNG-EM', $rootScope.metadata.auth.email);\n\t\t\tconsole.log($rootScope.metadata.auth.uid);\n\t\t},\n\t\tupload: function upload(error, data, response) {\n\t\t\tconsole.log(error, data, response);\n\t\t}\n\t};\n}]);\napp.controller('carsCollectionController', ['$scope', '$rootScope', '$http', 'ENV', '$location', 'NgMap', function ($scope, $rootScope, $http, ENV, $location, NgMap) {\n\tconsole.log('Going to Cars Collection Page');\n\tvar params = $location.search();\n\tvar page = 1;\n\tif (params.hasOwnProperty('page') && !isNaN(params.page)) {\n\t\tpage = params.page;\n\t}\n\t$scope.map = null;\n\tNgMap.getMap().then(function (map) {\n\t\tconsole.log(map);\n\t\t$scope.map = map;\n\t}).catch(function (err) {\n\t\tconsole.log(err);\n\t});\n\n\tconsole.log(\"RETRIEVED PARAMS\", params);\n\t$scope.cars = [];\n\t$scope.carsLocations = [\n\t\t//e.g. [lat, long]\n\t];\n\n\tvar reset_cars = function reset_cars() {\n\t\t$scope.cars = [];\n\t\t$scope.carsLocations = [];\n\t};\n\t$scope.carsCollectionCtrl = {\n\t\tloading: {\n\t\t\tretrieve: true\n\t\t},\n\t\terror: {\n\t\t\tretrieve: false,\n\t\t\tmessage: {\n\t\t\t\tretrieve: []\n\t\t\t}\n\t\t},\n\t\tcurrent_page: page,\n\t\tlast_page: 0,\n\t\tpagination: {\n\t\t\tnext: false,\n\t\t\tprev: false\n\t\t},\n\t\tapi_url: ENV.API_URL\n\t};\n\n\tvar location_unregister = $scope.$watch('metadata.current_location_retrieved', function (newVal, oldVal) {\n\t\tif (newVal != oldVal && newVal === true) {\n\t\t\t$scope.retrieve();\n\t\t\tlocation_unregister();\n\t\t}\n\t});\n\n\tvar reset_error = function reset_error() {\n\t\t$scope.carsCollectionCtrl.error.retrieve = false;\n\t\t$scope.carsCollectionCtrl.error.message.retrieve = [];\n\t};\n\n\t$scope.changePage = function () {\n\t\tvar page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n\t\tif (page > $scope.carsCollectionCtrl.last_page) {\n\t\t\tpage = $scope.carsCollectionCtrl.last_page;\n\t\t} else if (isNaN(page)) {\n\t\t\tpage = 1;\n\t\t}\n\t\t$scope.carsCollectionCtrl.current_page = page;\n\t\tif (page != $scope.carsCollectionCtrl.current_page) {\n\t\t\t$location.search('page', $scope.carsCollectionCtrl.current_page);\n\t\t\t$scope.retrieve();\n\t\t} else {\n\t\t\tconsole.log(\"It's the same page!\");\n\t\t}\n\t};\n\n\t$scope.retrieve = function () {\n\t\tvar parsedParams = parseParams();\n\t\t$scope.carsCollectionCtrl.loading.retrieve = true;\n\t\tconsole.log('RETRIEVING CARS');\n\t\tconsole.log('GET URL: ', ENV.API_URL + 'cars?' + parsedParams);\n\t\treset_cars();\n\t\t$http.get(ENV.API_URL + 'cars?' + parsedParams).then(function (data) {\n\t\t\tconsole.log(data.data);\n\t\t\tvar response = data.data;\n\t\t\t$scope.cars = response.data;\n\t\t\t$scope.carsCollectionCtrl.last_page = response.last_page;\n\t\t\t$scope.carsCollectionCtrl.current_page = response.current_page;\n\t\t\t$scope.carsCollectionCtrl.pagination.next = response.next_page_url !== null;\n\t\t\t$scope.carsCollectionCtrl.pagination.prev = response.prev_page_url !== null;\n\t\t\t$scope.cars.forEach(function (obj) {\n\t\t\t\tif (obj.distance !== null) {\n\t\t\t\t\t$scope.carsLocations.push([obj.lat, obj.long]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconsole.log($scope.carsLocations);\n\t\t\treset_error();\n\t\t\t$scope.carsCollectionCtrl.loading.retrieve = false;\n\t\t\tif ($scope.carsCollectionCtrl.last_page < $scope.carsCollectionCtrl.current_page) {\n\t\t\t\t$scope.carsCollectionCtrl.current_page = $scope.carsCollectionCtrl.last_page;\n\t\t\t\t$location.search('page', $scope.carsCollectionCtrl.last_page);\n\t\t\t\t$scope.retrieve();\n\t\t\t}\n\t\t\t$scope.digest();\n\t\t}, function (data) {\n\t\t\tconsole.log(data);\n\t\t\tvar response = data.data;\n\t\t\t$scope.carsCollectionCtrl.error.retrieve = true;\n\t\t\t$scope.carsCollectionCtrl.error.message.retrieve = ['Error fetching cars'];\n\t\t\t$scope.carsCollectionCtrl.loading.retrieve = false;\n\t\t\t$scope.digest();\n\t\t});\n\t};\n\n\tvar parseParams = function parseParams() {\n\t\tvar p = \"\";\n\t\tvar pCount = 0;\n\t\tif ($scope.carsCollectionCtrl.current_page > 1) {\n\t\t\tp += \"page=\" + $scope.carsCollectionCtrl.current_page;\n\t\t\tpCount++;\n\t\t}\n\t\tif ($rootScope.metadata.current_location !== null) {\n\t\t\tif (pCount > 0) {\n\t\t\t\tp += \"&\";\n\t\t\t}\n\t\t\tp += \"lat=\" + $rootScope.metadata.current_location.latitude;\n\t\t\tp += \"&\";\n\t\t\tp += \"long=\" + $rootScope.metadata.current_location.longitude;\n\t\t\tpCount++;\n\t\t}\n\t\treturn p;\n\t};\n}]);","/*\r\n AngularJS v1.6.4\r\n (c) 2010-2017 Google, Inc. http://angularjs.org\r\n License: MIT\r\n*/\r\n(function(n,c){'use strict';function l(b,a,g){var d=g.baseHref(),k=b[0];return function(b,e,f){var g,h;f=f||{};h=f.expires;g=c.isDefined(f.path)?f.path:d;c.isUndefined(e)&&(h=\"Thu, 01 Jan 1970 00:00:00 GMT\",e=\"\");c.isString(h)&&(h=new Date(h));e=encodeURIComponent(b)+\"=\"+encodeURIComponent(e);e=e+(g?\";path=\"+g:\"\")+(f.domain?\";domain=\"+f.domain:\"\");e+=h?\";expires=\"+h.toUTCString():\"\";e+=f.secure?\";secure\":\"\";f=e.length+1;4096<f&&a.warn(\"Cookie '\"+b+\"' possibly not set or overflowed because it was too large (\"+\r\nf+\" > 4096 bytes)!\");k.cookie=e}}c.module(\"ngCookies\",[\"ng\"]).info({angularVersion:\"1.6.4\"}).provider(\"$cookies\",[function(){var b=this.defaults={};this.$get=[\"$$cookieReader\",\"$$cookieWriter\",function(a,g){return{get:function(d){return a()[d]},getObject:function(d){return(d=this.get(d))?c.fromJson(d):d},getAll:function(){return a()},put:function(d,a,m){g(d,a,m?c.extend({},b,m):b)},putObject:function(d,b,a){this.put(d,c.toJson(b),a)},remove:function(a,k){g(a,void 0,k?c.extend({},b,k):b)}}}]}]);c.module(\"ngCookies\").factory(\"$cookieStore\",\r\n[\"$cookies\",function(b){return{get:function(a){return b.getObject(a)},put:function(a,c){b.putObject(a,c)},remove:function(a){b.remove(a)}}}]);l.$inject=[\"$document\",\"$log\",\"$browser\"];c.module(\"ngCookies\").provider(\"$$cookieWriter\",function(){this.$get=l})})(window,window.angular);\r\n//# sourceMappingURL=angular-cookies.min.js.map\r\n","/*\r\n * Slim v4.11.1 - Image Cropping Made Easy\r\n * Copyright (c) 2017 Rik Schennink - http://slimimagecropper.com\r\n */\r\n(function(angular){\r\n\r\n\t// Slim Lib\r\n\tvar Slim = (function() {\r\n\r\n// custom event polyfill for IE10\r\n(function() {\r\n\tif ( typeof window.CustomEvent === 'function' ) return false;\r\n\r\n\tfunction CustomEvent ( event, params ) {\r\n\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\r\n\t\tvar evt = document.createEvent( 'CustomEvent' );\r\n\t\tevt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n\t\treturn evt;\r\n\t}\r\n\r\n\tCustomEvent.prototype = window.Event.prototype;\r\n\r\n\twindow.CustomEvent = CustomEvent;\r\n})();\r\n/*\r\n* JavaScript Load Image\r\n* https://github.com/blueimp/JavaScript-Load-Image\r\n*\r\n* Copyright 2011, Sebastian Tschan\r\n* https://blueimp.net\r\n*\r\n* Licensed under the MIT license:\r\n* http://www.opensource.org/licenses/MIT\r\n*/\r\n\r\n/*global define, module, window, document, URL, webkitURL, FileReader */\r\n\r\n// Loads an image for a given File object.\r\n// Invokes the callback with an img or optional canvas\r\n// element (if supported by the browser) as parameter:\r\nvar loadImage = function (file, callback, options) {\r\n    var img = document.createElement('img')\r\n    var url\r\n    var oUrl\r\n    img.onerror = callback\r\n    img.onload = function () {\r\n        if (oUrl && !(options && options.noRevoke)) {\r\n            loadImage.revokeObjectURL(oUrl)\r\n        }\r\n        if (callback) {\r\n            callback(loadImage.scale(img, options))\r\n        }\r\n    }\r\n    if (loadImage.isInstanceOf('Blob', file) ||\r\n        // Files are also Blob instances, but some browsers\r\n        // (Firefox 3.6) support the File API but not Blobs:\r\n        loadImage.isInstanceOf('File', file)) {\r\n        url = oUrl = loadImage.createObjectURL(file)\r\n        // Store the file type for resize processing:\r\n        img._type = file.type\r\n    } else if (typeof file === 'string') {\r\n        url = file\r\n        if (options && options.crossOrigin) {\r\n            img.crossOrigin = options.crossOrigin\r\n        }\r\n    } else {\r\n        return false\r\n    }\r\n    if (url) {\r\n        img.src = url\r\n        return img\r\n    }\r\n    return loadImage.readFile(file, function (e) {\r\n        var target = e.target\r\n        if (target && target.result) {\r\n            img.src = target.result\r\n        } else {\r\n            if (callback) {\r\n                callback(e)\r\n            }\r\n        }\r\n    })\r\n}\r\n// The check for URL.revokeObjectURL fixes an issue with Opera 12,\r\n// which provides URL.createObjectURL but doesn't properly implement it:\r\nvar urlAPI = (window.createObjectURL && window) ||\r\n    (window.URL && URL.revokeObjectURL && URL) ||\r\n    (window.webkitURL && webkitURL)\r\n\r\nloadImage.isInstanceOf = function (type, obj) {\r\n    // Cross-frame instanceof check\r\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']'\r\n}\r\n\r\n// Transform image coordinates, allows to override e.g.\r\n// the canvas orientation based on the orientation option,\r\n// gets canvas, options passed as arguments:\r\nloadImage.transformCoordinates = function () {\r\n    return\r\n}\r\n\r\n// Returns transformed options, allows to override e.g.\r\n// maxWidth, maxHeight and crop options based on the aspectRatio.\r\n// gets img, options passed as arguments:\r\nloadImage.getTransformedOptions = function (img, options) {\r\n    var aspectRatio = options.aspectRatio\r\n    var newOptions\r\n    var i\r\n    var width\r\n    var height\r\n    if (!aspectRatio) {\r\n        return options\r\n    }\r\n    newOptions = {}\r\n    for (i in options) {\r\n        if (options.hasOwnProperty(i)) {\r\n            newOptions[i] = options[i]\r\n        }\r\n    }\r\n    newOptions.crop = true\r\n    width = img.naturalWidth || img.width\r\n    height = img.naturalHeight || img.height\r\n    if (width / height > aspectRatio) {\r\n        newOptions.maxWidth = height * aspectRatio\r\n        newOptions.maxHeight = height\r\n    } else {\r\n        newOptions.maxWidth = width\r\n        newOptions.maxHeight = width / aspectRatio\r\n    }\r\n    return newOptions\r\n}\r\n\r\n// Canvas render method, allows to implement a different rendering algorithm:\r\nloadImage.renderImageToCanvas = function (\r\n    canvas,\r\n    img,\r\n    sourceX,\r\n    sourceY,\r\n    sourceWidth,\r\n    sourceHeight,\r\n    destX,\r\n    destY,\r\n    destWidth,\r\n    destHeight\r\n) {\r\n    canvas.getContext('2d').drawImage(\r\n        img,\r\n        sourceX,\r\n        sourceY,\r\n        sourceWidth,\r\n        sourceHeight,\r\n        destX,\r\n        destY,\r\n        destWidth,\r\n        destHeight\r\n    )\r\n    return canvas\r\n}\r\n\r\n// This method is used to determine if the target image\r\n// should be a canvas element:\r\nloadImage.hasCanvasOption = function (options) {\r\n    return options.canvas || options.crop || !!options.aspectRatio\r\n}\r\n\r\n// Scales and/or crops the given image (img or canvas HTML element)\r\n// using the given options.\r\n// Returns a canvas object if the browser supports canvas\r\n// and the hasCanvasOption method returns true or a canvas\r\n// object is passed as image, else the scaled image:\r\nloadImage.scale = function (img, options) {\r\n    options = options || {}\r\n    var canvas = document.createElement('canvas')\r\n    var useCanvas = img.getContext ||\r\n        (loadImage.hasCanvasOption(options) && canvas.getContext)\r\n    var width = img.naturalWidth || img.width\r\n    var height = img.naturalHeight || img.height\r\n    var destWidth = width\r\n    var destHeight = height\r\n    var maxWidth\r\n    var maxHeight\r\n    var minWidth\r\n    var minHeight\r\n    var sourceWidth\r\n    var sourceHeight\r\n    var sourceX\r\n    var sourceY\r\n    var pixelRatio\r\n    var downsamplingRatio\r\n    var tmp\r\n    function scaleUp () {\r\n        var scale = Math.max(\r\n            (minWidth || destWidth) / destWidth,\r\n            (minHeight || destHeight) / destHeight\r\n        )\r\n        if (scale > 1) {\r\n            destWidth *= scale\r\n            destHeight *= scale\r\n        }\r\n    }\r\n    function scaleDown () {\r\n        var scale = Math.min(\r\n            (maxWidth || destWidth) / destWidth,\r\n            (maxHeight || destHeight) / destHeight\r\n        )\r\n        if (scale < 1) {\r\n            destWidth *= scale\r\n            destHeight *= scale\r\n        }\r\n    }\r\n    if (useCanvas) {\r\n        options = loadImage.getTransformedOptions(img, options)\r\n        sourceX = options.left || 0\r\n        sourceY = options.top || 0\r\n        if (options.sourceWidth) {\r\n            sourceWidth = options.sourceWidth\r\n            if (options.right !== undefined && options.left === undefined) {\r\n                sourceX = width - sourceWidth - options.right\r\n            }\r\n        } else {\r\n            sourceWidth = width - sourceX - (options.right || 0)\r\n        }\r\n        if (options.sourceHeight) {\r\n            sourceHeight = options.sourceHeight\r\n            if (options.bottom !== undefined && options.top === undefined) {\r\n                sourceY = height - sourceHeight - options.bottom\r\n            }\r\n        } else {\r\n            sourceHeight = height - sourceY - (options.bottom || 0)\r\n        }\r\n        destWidth = sourceWidth\r\n        destHeight = sourceHeight\r\n    }\r\n    maxWidth = options.maxWidth\r\n    maxHeight = options.maxHeight\r\n    minWidth = options.minWidth\r\n    minHeight = options.minHeight\r\n    if (useCanvas && maxWidth && maxHeight && options.crop) {\r\n        destWidth = maxWidth\r\n        destHeight = maxHeight\r\n        tmp = sourceWidth / sourceHeight - maxWidth / maxHeight\r\n        if (tmp < 0) {\r\n            sourceHeight = maxHeight * sourceWidth / maxWidth\r\n            if (options.top === undefined && options.bottom === undefined) {\r\n                sourceY = (height - sourceHeight) / 2\r\n            }\r\n        } else if (tmp > 0) {\r\n            sourceWidth = maxWidth * sourceHeight / maxHeight\r\n            if (options.left === undefined && options.right === undefined) {\r\n                sourceX = (width - sourceWidth) / 2\r\n            }\r\n        }\r\n    } else {\r\n        if (options.contain || options.cover) {\r\n            minWidth = maxWidth = maxWidth || minWidth\r\n            minHeight = maxHeight = maxHeight || minHeight\r\n        }\r\n        if (options.cover) {\r\n            scaleDown()\r\n            scaleUp()\r\n        } else {\r\n            scaleUp()\r\n            scaleDown()\r\n        }\r\n    }\r\n    if (useCanvas) {\r\n        pixelRatio = options.pixelRatio\r\n        if (pixelRatio > 1) {\r\n            canvas.style.width = destWidth + 'px'\r\n            canvas.style.height = destHeight + 'px'\r\n            destWidth *= pixelRatio\r\n            destHeight *= pixelRatio\r\n            canvas.getContext('2d').scale(pixelRatio, pixelRatio)\r\n        }\r\n        downsamplingRatio = options.downsamplingRatio\r\n        if (downsamplingRatio > 0 && downsamplingRatio < 1 &&\r\n            destWidth < sourceWidth && destHeight < sourceHeight) {\r\n            while (sourceWidth * downsamplingRatio > destWidth) {\r\n                canvas.width = sourceWidth * downsamplingRatio\r\n                canvas.height = sourceHeight * downsamplingRatio\r\n                loadImage.renderImageToCanvas(\r\n                    canvas,\r\n                    img,\r\n                    sourceX,\r\n                    sourceY,\r\n                    sourceWidth,\r\n                    sourceHeight,\r\n                    0,\r\n                    0,\r\n                    canvas.width,\r\n                    canvas.height\r\n                )\r\n                sourceWidth = canvas.width\r\n                sourceHeight = canvas.height\r\n                img = document.createElement('canvas')\r\n                img.width = sourceWidth\r\n                img.height = sourceHeight\r\n                loadImage.renderImageToCanvas(\r\n                    img,\r\n                    canvas,\r\n                    0,\r\n                    0,\r\n                    sourceWidth,\r\n                    sourceHeight,\r\n                    0,\r\n                    0,\r\n                    sourceWidth,\r\n                    sourceHeight\r\n                )\r\n            }\r\n        }\r\n        canvas.width = destWidth\r\n        canvas.height = destHeight\r\n        loadImage.transformCoordinates(\r\n            canvas,\r\n            options\r\n        )\r\n        return loadImage.renderImageToCanvas(\r\n            canvas,\r\n            img,\r\n            sourceX,\r\n            sourceY,\r\n            sourceWidth,\r\n            sourceHeight,\r\n            0,\r\n            0,\r\n            destWidth,\r\n            destHeight\r\n        )\r\n    }\r\n    img.width = destWidth\r\n    img.height = destHeight\r\n    return img\r\n}\r\n\r\nloadImage.createObjectURL = function (file) {\r\n    return urlAPI ? urlAPI.createObjectURL(file) : false\r\n}\r\n\r\nloadImage.revokeObjectURL = function (url) {\r\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false\r\n}\r\n\r\n// Loads a given File object via FileReader interface,\r\n// invokes the callback with the event object (load or error).\r\n// The result can be read via event.target.result:\r\nloadImage.readFile = function (file, callback, method) {\r\n    if (window.FileReader) {\r\n        var fileReader = new FileReader()\r\n        fileReader.onload = fileReader.onerror = callback\r\n        method = method || 'readAsDataURL'\r\n        if (fileReader[method]) {\r\n            fileReader[method](file)\r\n            return fileReader\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nvar originalHasCanvasOption = loadImage.hasCanvasOption\r\nvar originalTransformCoordinates = loadImage.transformCoordinates\r\nvar originalGetTransformedOptions = loadImage.getTransformedOptions\r\n\r\n// This method is used to determine if the target image\r\n// should be a canvas element:\r\nloadImage.hasCanvasOption = function (options) {\r\n    return !!options.orientation ||\r\n        originalHasCanvasOption.call(loadImage, options)\r\n}\r\n\r\n// Transform image orientation based on\r\n// the given EXIF orientation option:\r\nloadImage.transformCoordinates = function (canvas, options) {\r\n    originalTransformCoordinates.call(loadImage, canvas, options)\r\n    var ctx = canvas.getContext('2d')\r\n    var width = canvas.width\r\n    var height = canvas.height\r\n    var styleWidth = canvas.style.width\r\n    var styleHeight = canvas.style.height\r\n    var orientation = options.orientation\r\n    if (!orientation || orientation > 8) {\r\n        return\r\n    }\r\n    if (orientation > 4) {\r\n        canvas.width = height\r\n        canvas.height = width\r\n        canvas.style.width = styleHeight\r\n        canvas.style.height = styleWidth\r\n    }\r\n    switch (orientation) {\r\n        case 2:\r\n            // horizontal flip\r\n            ctx.translate(width, 0)\r\n            ctx.scale(-1, 1)\r\n            break\r\n        case 3:\r\n            // 180° rotate left\r\n            ctx.translate(width, height)\r\n            ctx.rotate(Math.PI)\r\n            break\r\n        case 4:\r\n            // vertical flip\r\n            ctx.translate(0, height)\r\n            ctx.scale(1, -1)\r\n            break\r\n        case 5:\r\n            // vertical flip + 90 rotate right\r\n            ctx.rotate(0.5 * Math.PI)\r\n            ctx.scale(1, -1)\r\n            break\r\n        case 6:\r\n            // 90° rotate right\r\n            ctx.rotate(0.5 * Math.PI)\r\n            ctx.translate(0, -height)\r\n            break\r\n        case 7:\r\n            // horizontal flip + 90 rotate right\r\n            ctx.rotate(0.5 * Math.PI)\r\n            ctx.translate(width, -height)\r\n            ctx.scale(-1, 1)\r\n            break\r\n        case 8:\r\n            // 90° rotate left\r\n            ctx.rotate(-0.5 * Math.PI)\r\n            ctx.translate(-width, 0)\r\n            break\r\n    }\r\n}\r\n\r\n// Transforms coordinate and dimension options\r\n// based on the given orientation option:\r\nloadImage.getTransformedOptions = function (img, opts) {\r\n    var options = originalGetTransformedOptions.call(loadImage, img, opts)\r\n    var orientation = options.orientation\r\n    var newOptions\r\n    var i\r\n    if (!orientation || orientation > 8 || orientation === 1) {\r\n        return options\r\n    }\r\n    newOptions = {}\r\n    for (i in options) {\r\n        if (options.hasOwnProperty(i)) {\r\n            newOptions[i] = options[i]\r\n        }\r\n    }\r\n    switch (options.orientation) {\r\n        case 2:\r\n            // horizontal flip\r\n            newOptions.left = options.right\r\n            newOptions.right = options.left\r\n            break\r\n        case 3:\r\n            // 180° rotate left\r\n            newOptions.left = options.right\r\n            newOptions.top = options.bottom\r\n            newOptions.right = options.left\r\n            newOptions.bottom = options.top\r\n            break\r\n        case 4:\r\n            // vertical flip\r\n            newOptions.top = options.bottom\r\n            newOptions.bottom = options.top\r\n            break\r\n        case 5:\r\n            // vertical flip + 90 rotate right\r\n            newOptions.left = options.top\r\n            newOptions.top = options.left\r\n            newOptions.right = options.bottom\r\n            newOptions.bottom = options.right\r\n            break\r\n        case 6:\r\n            // 90° rotate right\r\n            newOptions.left = options.top\r\n            newOptions.top = options.right\r\n            newOptions.right = options.bottom\r\n            newOptions.bottom = options.left\r\n            break\r\n        case 7:\r\n            // horizontal flip + 90 rotate right\r\n            newOptions.left = options.bottom\r\n            newOptions.top = options.right\r\n            newOptions.right = options.top\r\n            newOptions.bottom = options.left\r\n            break\r\n        case 8:\r\n            // 90° rotate left\r\n            newOptions.left = options.bottom\r\n            newOptions.top = options.left\r\n            newOptions.right = options.top\r\n            newOptions.bottom = options.right\r\n            break\r\n    }\r\n    if (options.orientation > 4) {\r\n        newOptions.maxWidth = options.maxHeight\r\n        newOptions.maxHeight = options.maxWidth\r\n        newOptions.minWidth = options.minHeight\r\n        newOptions.minHeight = options.minWidth\r\n        newOptions.sourceWidth = options.sourceHeight\r\n        newOptions.sourceHeight = options.sourceWidth\r\n    }\r\n    return newOptions\r\n}\r\n\r\nvar hasblobSlice = window.Blob && (Blob.prototype.slice ||\r\n    Blob.prototype.webkitSlice || Blob.prototype.mozSlice)\r\n\r\nloadImage.blobSlice = hasblobSlice && function () {\r\n        var slice = this.slice || this.webkitSlice || this.mozSlice\r\n        return slice.apply(this, arguments)\r\n    }\r\n\r\nloadImage.metaDataParsers = {\r\n    jpeg: {\r\n        0xffe1: [] // APP1 marker\r\n    }\r\n}\r\n\r\n// Parses image meta data and calls the callback with an object argument\r\n// with the following properties:\r\n// * imageHead: The complete image head as ArrayBuffer (Uint8Array for IE10)\r\n// The options arguments accepts an object and supports the following properties:\r\n// * maxMetaDataSize: Defines the maximum number of bytes to parse.\r\n// * disableImageHead: Disables creating the imageHead property.\r\nloadImage.parseMetaData = function (file, callback, options) {\r\n    options = options || {}\r\n    var that = this\r\n    // 256 KiB should contain all EXIF/ICC/IPTC segments:\r\n    var maxMetaDataSize = options.maxMetaDataSize || 262144\r\n    var data = {}\r\n    var noMetaData = !(window.DataView && file && file.size >= 12 &&\r\n    file.type === 'image/jpeg' && loadImage.blobSlice)\r\n    if (noMetaData || !loadImage.readFile(\r\n            loadImage.blobSlice.call(file, 0, maxMetaDataSize),\r\n            function (e) {\r\n                if (e.target.error) {\r\n                    // FileReader error\r\n                    //console.log(e.target.error)\r\n                    callback(data)\r\n                    return\r\n                }\r\n                // Note on endianness:\r\n                // Since the marker and length bytes in JPEG files are always\r\n                // stored in big endian order, we can leave the endian parameter\r\n                // of the DataView methods undefined, defaulting to big endian.\r\n                var buffer = e.target.result\r\n                var dataView = new DataView(buffer)\r\n                var offset = 2\r\n                var maxOffset = dataView.byteLength - 4\r\n                var headLength = offset\r\n                var markerBytes\r\n                var markerLength\r\n                var parsers\r\n                var i\r\n                // Check for the JPEG marker (0xffd8):\r\n                if (dataView.getUint16(0) === 0xffd8) {\r\n                    while (offset < maxOffset) {\r\n                        markerBytes = dataView.getUint16(offset)\r\n                        // Search for APPn (0xffeN) and COM (0xfffe) markers,\r\n                        // which contain application-specific meta-data like\r\n                        // Exif, ICC and IPTC data and text comments:\r\n                        if ((markerBytes >= 0xffe0 && markerBytes <= 0xffef) ||\r\n                            markerBytes === 0xfffe) {\r\n                            // The marker bytes (2) are always followed by\r\n                            // the length bytes (2), indicating the length of the\r\n                            // marker segment, which includes the length bytes,\r\n                            // but not the marker bytes, so we add 2:\r\n                            markerLength = dataView.getUint16(offset + 2) + 2\r\n                            if (offset + markerLength > dataView.byteLength) {\r\n                                //console.log('Invalid meta data: Invalid segment size.')\r\n                                break\r\n                            }\r\n                            parsers = loadImage.metaDataParsers.jpeg[markerBytes]\r\n                            if (parsers) {\r\n                                for (i = 0; i < parsers.length; i += 1) {\r\n                                    parsers[i].call(\r\n                                        that,\r\n                                        dataView,\r\n                                        offset,\r\n                                        markerLength,\r\n                                        data,\r\n                                        options\r\n                                    )\r\n                                }\r\n                            }\r\n                            offset += markerLength\r\n                            headLength = offset\r\n                        } else {\r\n                            // Not an APPn or COM marker, probably safe to\r\n                            // assume that this is the end of the meta data\r\n                            break\r\n                        }\r\n                    }\r\n                    // Meta length must be longer than JPEG marker (2)\r\n                    // plus APPn marker (2), followed by length bytes (2):\r\n                    if (!options.disableImageHead && headLength > 6) {\r\n                        if (buffer.slice) {\r\n                            data.imageHead = buffer.slice(0, headLength)\r\n                        } else {\r\n                            // Workaround for IE10, which does not yet\r\n                            // support ArrayBuffer.slice:\r\n                            data.imageHead = new Uint8Array(buffer)\r\n                                .subarray(0, headLength)\r\n                        }\r\n                    }\r\n                } else {\r\n                    //console.log('Invalid JPEG file: Missing JPEG marker.')\r\n                }\r\n                callback(data)\r\n            },\r\n            'readAsArrayBuffer'\r\n        )) {\r\n        callback(data)\r\n    }\r\n}\r\n\r\nloadImage.ExifMap = function () {\r\n    return this\r\n}\r\n\r\nloadImage.ExifMap.prototype.map = {\r\n    'Orientation': 0x0112\r\n}\r\n\r\nloadImage.ExifMap.prototype.get = function (id) {\r\n    return this[id] || this[this.map[id]]\r\n}\r\n\r\nloadImage.getExifThumbnail = function (dataView, offset, length) {\r\n    var hexData,\r\n        i,\r\n        b\r\n    if (!length || offset + length > dataView.byteLength) {\r\n        //console.log('Invalid Exif data: Invalid thumbnail data.')\r\n        return\r\n    }\r\n    hexData = []\r\n    for (i = 0; i < length; i += 1) {\r\n        b = dataView.getUint8(offset + i)\r\n        hexData.push((b < 16 ? '0' : '') + b.toString(16))\r\n    }\r\n    return 'data:image/jpeg,%' + hexData.join('%')\r\n}\r\n\r\nloadImage.exifTagTypes = {\r\n    // byte, 8-bit unsigned int:\r\n    1: {\r\n        getValue: function (dataView, dataOffset) {\r\n            return dataView.getUint8(dataOffset)\r\n        },\r\n        size: 1\r\n    },\r\n    // ascii, 8-bit byte:\r\n    2: {\r\n        getValue: function (dataView, dataOffset) {\r\n            return String.fromCharCode(dataView.getUint8(dataOffset))\r\n        },\r\n        size: 1,\r\n        ascii: true\r\n    },\r\n    // short, 16 bit int:\r\n    3: {\r\n        getValue: function (dataView, dataOffset, littleEndian) {\r\n            return dataView.getUint16(dataOffset, littleEndian)\r\n        },\r\n        size: 2\r\n    },\r\n    // long, 32 bit int:\r\n    4: {\r\n        getValue: function (dataView, dataOffset, littleEndian) {\r\n            return dataView.getUint32(dataOffset, littleEndian)\r\n        },\r\n        size: 4\r\n    },\r\n    // rational = two long values, first is numerator, second is denominator:\r\n    5: {\r\n        getValue: function (dataView, dataOffset, littleEndian) {\r\n            return dataView.getUint32(dataOffset, littleEndian) /\r\n                dataView.getUint32(dataOffset + 4, littleEndian)\r\n        },\r\n        size: 8\r\n    },\r\n    // slong, 32 bit signed int:\r\n    9: {\r\n        getValue: function (dataView, dataOffset, littleEndian) {\r\n            return dataView.getInt32(dataOffset, littleEndian)\r\n        },\r\n        size: 4\r\n    },\r\n    // srational, two slongs, first is numerator, second is denominator:\r\n    10: {\r\n        getValue: function (dataView, dataOffset, littleEndian) {\r\n            return dataView.getInt32(dataOffset, littleEndian) /\r\n                dataView.getInt32(dataOffset + 4, littleEndian)\r\n        },\r\n        size: 8\r\n    }\r\n}\r\n// undefined, 8-bit byte, value depending on field:\r\nloadImage.exifTagTypes[7] = loadImage.exifTagTypes[1]\r\n\r\nloadImage.getExifValue = function (dataView, tiffOffset, offset, type, length, littleEndian) {\r\n    var tagType = loadImage.exifTagTypes[type]\r\n    var tagSize\r\n    var dataOffset\r\n    var values\r\n    var i\r\n    var str\r\n    var c\r\n    if (!tagType) {\r\n        //console.log('Invalid Exif data: Invalid tag type.')\r\n        return\r\n    }\r\n    tagSize = tagType.size * length\r\n    // Determine if the value is contained in the dataOffset bytes,\r\n    // or if the value at the dataOffset is a pointer to the actual data:\r\n    dataOffset = tagSize > 4\r\n        ? tiffOffset + dataView.getUint32(offset + 8, littleEndian)\r\n        : (offset + 8)\r\n    if (dataOffset + tagSize > dataView.byteLength) {\r\n        //console.log('Invalid Exif data: Invalid data offset.')\r\n        return\r\n    }\r\n    if (length === 1) {\r\n        return tagType.getValue(dataView, dataOffset, littleEndian)\r\n    }\r\n    values = []\r\n    for (i = 0; i < length; i += 1) {\r\n        values[i] = tagType.getValue(dataView, dataOffset + i * tagType.size, littleEndian)\r\n    }\r\n    if (tagType.ascii) {\r\n        str = ''\r\n        // Concatenate the chars:\r\n        for (i = 0; i < values.length; i += 1) {\r\n            c = values[i]\r\n            // Ignore the terminating NULL byte(s):\r\n            if (c === '\\u0000') {\r\n                break\r\n            }\r\n            str += c\r\n        }\r\n        return str\r\n    }\r\n    return values\r\n}\r\n\r\nloadImage.parseExifTag = function (dataView, tiffOffset, offset, littleEndian, data) {\r\n    var tag = dataView.getUint16(offset, littleEndian)\r\n    data.exif[tag] = loadImage.getExifValue(\r\n        dataView,\r\n        tiffOffset,\r\n        offset,\r\n        dataView.getUint16(offset + 2, littleEndian), // tag type\r\n        dataView.getUint32(offset + 4, littleEndian), // tag length\r\n        littleEndian\r\n    )\r\n}\r\n\r\nloadImage.parseExifTags = function (dataView, tiffOffset, dirOffset, littleEndian, data) {\r\n    var tagsNumber,\r\n        dirEndOffset,\r\n        i\r\n    if (dirOffset + 6 > dataView.byteLength) {\r\n        //console.log('Invalid Exif data: Invalid directory offset.')\r\n        return\r\n    }\r\n    tagsNumber = dataView.getUint16(dirOffset, littleEndian)\r\n    dirEndOffset = dirOffset + 2 + 12 * tagsNumber\r\n    if (dirEndOffset + 4 > dataView.byteLength) {\r\n        //console.log('Invalid Exif data: Invalid directory size.')\r\n        return\r\n    }\r\n    for (i = 0; i < tagsNumber; i += 1) {\r\n        this.parseExifTag(\r\n            dataView,\r\n            tiffOffset,\r\n            dirOffset + 2 + 12 * i, // tag offset\r\n            littleEndian,\r\n            data\r\n        )\r\n    }\r\n    // Return the offset to the next directory:\r\n    return dataView.getUint32(dirEndOffset, littleEndian)\r\n}\r\n\r\nloadImage.parseExifData = function (dataView, offset, length, data, options) {\r\n    if (options.disableExif) {\r\n        return\r\n    }\r\n    var tiffOffset = offset + 10\r\n    var littleEndian\r\n    var dirOffset\r\n    var thumbnailData\r\n    // Check for the ASCII code for \"Exif\" (0x45786966):\r\n    if (dataView.getUint32(offset + 4) !== 0x45786966) {\r\n        // No Exif data, might be XMP data instead\r\n        return\r\n    }\r\n    if (tiffOffset + 8 > dataView.byteLength) {\r\n        //console.log('Invalid Exif data: Invalid segment size.')\r\n        return\r\n    }\r\n    // Check for the two null bytes:\r\n    if (dataView.getUint16(offset + 8) !== 0x0000) {\r\n        //console.log('Invalid Exif data: Missing byte alignment offset.')\r\n        return\r\n    }\r\n    // Check the byte alignment:\r\n    switch (dataView.getUint16(tiffOffset)) {\r\n        case 0x4949:\r\n            littleEndian = true\r\n            break\r\n        case 0x4D4D:\r\n            littleEndian = false\r\n            break\r\n        default:\r\n            //console.log('Invalid Exif data: Invalid byte alignment marker.')\r\n            return\r\n    }\r\n    // Check for the TIFF tag marker (0x002A):\r\n    if (dataView.getUint16(tiffOffset + 2, littleEndian) !== 0x002A) {\r\n        //console.log('Invalid Exif data: Missing TIFF marker.')\r\n        return\r\n    }\r\n    // Retrieve the directory offset bytes, usually 0x00000008 or 8 decimal:\r\n    dirOffset = dataView.getUint32(tiffOffset + 4, littleEndian)\r\n    // Create the exif object to store the tags:\r\n    data.exif = new loadImage.ExifMap()\r\n    // Parse the tags of the main image directory and retrieve the\r\n    // offset to the next directory, usually the thumbnail directory:\r\n    dirOffset = loadImage.parseExifTags(\r\n        dataView,\r\n        tiffOffset,\r\n        tiffOffset + dirOffset,\r\n        littleEndian,\r\n        data\r\n    )\r\n    if (dirOffset && !options.disableExifThumbnail) {\r\n        thumbnailData = {exif: {}}\r\n        dirOffset = loadImage.parseExifTags(\r\n            dataView,\r\n            tiffOffset,\r\n            tiffOffset + dirOffset,\r\n            littleEndian,\r\n            thumbnailData\r\n        )\r\n        // Check for JPEG Thumbnail offset:\r\n        if (thumbnailData.exif[0x0201]) {\r\n            data.exif.Thumbnail = loadImage.getExifThumbnail(\r\n                dataView,\r\n                tiffOffset + thumbnailData.exif[0x0201],\r\n                thumbnailData.exif[0x0202] // Thumbnail data length\r\n            )\r\n        }\r\n    }\r\n    // Check for Exif Sub IFD Pointer:\r\n    if (data.exif[0x8769] && !options.disableExifSub) {\r\n        loadImage.parseExifTags(\r\n            dataView,\r\n            tiffOffset,\r\n            tiffOffset + data.exif[0x8769], // directory offset\r\n            littleEndian,\r\n            data\r\n        )\r\n    }\r\n    // Check for GPS Info IFD Pointer:\r\n    if (data.exif[0x8825] && !options.disableExifGps) {\r\n        loadImage.parseExifTags(\r\n            dataView,\r\n            tiffOffset,\r\n            tiffOffset + data.exif[0x8825], // directory offset\r\n            littleEndian,\r\n            data\r\n        )\r\n    }\r\n}\r\n\r\n// Registers the Exif parser for the APP1 JPEG meta data segment:\r\nloadImage.metaDataParsers.jpeg[0xffe1].push(loadImage.parseExifData)\r\nvar snabbt = (function() {\r\n\r\nvar tickRequests = [];\r\nvar runningAnimations = [];\r\nvar completedAnimations = [];\r\nvar transformProperty = 'transform';\r\n\r\n// Find which vendor prefix to use\r\nvar styles = window.getComputedStyle(document.documentElement, '');\r\nvar vendorPrefix = (Array.prototype.slice\r\n  .call(styles)\r\n  .join('') \r\n  .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\r\n)[1];\r\nif(vendorPrefix === 'webkit')\r\ntransformProperty = 'webkitTransform';\r\n\r\n/* Entry point, only function to be called by user */\r\nvar snabbt = function(arg1, arg2, arg3) {\r\n\r\nvar elements = arg1;\r\n\r\n// If argument is an Array or a NodeList or other list type that can be iterable.\r\n// Loop through and start one animation for each element.\r\nif(elements.length !== undefined) {\r\n  var aggregateChainer = {\r\n    chainers: [],\r\n    then: function(opts) {\r\n      return this.snabbt(opts);\r\n    },\r\n    snabbt: function(opts) {\r\n      var len = this.chainers.length;\r\n      this.chainers.forEach(function(chainer, index) {\r\n        chainer.snabbt(preprocessOptions(opts, index, len));\r\n      });\r\n      return aggregateChainer;\r\n    },\r\n    setValue: function(value) {\r\n      this.chainers.forEach(function(chainer) {\r\n        chainer.setValue(value);\r\n      });\r\n      return aggregateChainer;\r\n    },\r\n    finish: function() {\r\n      this.chainers.forEach(function(chainer) {\r\n        chainer.finish();\r\n      });\r\n      return aggregateChainer;\r\n    },\r\n    rollback: function() {\r\n      this.chainers.forEach(function(chainer) {\r\n        chainer.rollback();\r\n      });\r\n      return aggregateChainer;\r\n    }\r\n  };\r\n\r\n  for(var i=0, len=elements.length;i<len;++i) {\r\n    if(typeof arg2 == 'string')\r\n      aggregateChainer.chainers.push(snabbtSingleElement(elements[i], arg2, preprocessOptions(arg3, i, len)));\r\n    else\r\n      aggregateChainer.chainers.push(snabbtSingleElement(elements[i], preprocessOptions(arg2, i, len), arg3));\r\n  }\r\n  return aggregateChainer;\r\n} else {\r\n  if(typeof arg2 == 'string')\r\n    return snabbtSingleElement(elements, arg2, preprocessOptions(arg3, 0, 1));\r\n  else\r\n    return snabbtSingleElement(elements, preprocessOptions(arg2, 0, 1), arg3);\r\n}\r\n};\r\n\r\nvar preprocessOptions = function(options, index, len) {\r\nif(!options)\r\n  return options;\r\nvar clone = cloneObject(options);\r\n\r\nif(isFunction(options.delay)) {\r\n  clone.delay = options.delay(index, len);\r\n}\r\n\r\nif(isFunction(options.callback)) {\r\n  clone.complete = function() {\r\n    options.callback.call(this, index, len);\r\n  };\r\n}\r\n\r\nvar hasAllDoneCallback = isFunction(options.allDone);\r\nvar hasCompleteCallback = isFunction(options.complete);\r\n\r\nif(hasCompleteCallback || hasAllDoneCallback) {\r\n  clone.complete = function() {\r\n    if(hasCompleteCallback) {\r\n      options.complete.call(this, index, len);\r\n    }\r\n    if(hasAllDoneCallback && (index == len - 1)) {\r\n      options.allDone();\r\n    }\r\n  };\r\n}\r\n\r\nif(isFunction(options.valueFeeder)) {\r\n  clone.valueFeeder = function(i, matrix) {\r\n    return options.valueFeeder(i, matrix, index, len);\r\n  };\r\n}\r\nif(isFunction(options.easing)) {\r\n  clone.easing = function(i) {\r\n    return options.easing(i, index, len);\r\n  };\r\n}\r\n\r\nvar properties = [\r\n  'position',\r\n  'rotation',\r\n  'skew',\r\n  'rotationPost',\r\n  'scale',\r\n  'width',\r\n  'height',\r\n  'opacity',\r\n  'fromPosition',\r\n  'fromRotation',\r\n  'fromSkew',\r\n  'fromRotationPost',\r\n  'fromScale',\r\n  'fromWidth',\r\n  'fromHeight',\r\n  'fromOpacity',\r\n  'transformOrigin',\r\n  'duration',\r\n  'delay'\r\n];\r\n\r\nproperties.forEach(function(property) {\r\n  if(isFunction(options[property])) {\r\n    clone[property] = options[property](index, len);\r\n  }\r\n});\r\n\r\nreturn clone;\r\n};\r\n\r\nvar snabbtSingleElement = function(element, arg2, arg3) {\r\n\r\nif(arg2 === 'attention') {\r\n  return setupAttentionAnimation(element, arg3);\r\n}\r\n\r\nif(arg2 === 'stop') {\r\n  return stopAnimation(element);\r\n}\r\n\r\nif(arg2 === 'detach') {\r\n  return detachChildren(element);\r\n}\r\n\r\nvar options = arg2;\r\n\r\n// Remove orphaned end states\r\nclearOphanedEndStates();\r\n\r\n// If there is a running or past completed animation with element, use that end state as start state\r\nvar currentState = currentAnimationState(element);\r\nvar start = currentState;\r\n// from has precendance over current animation state\r\nstart = stateFromOptions(options, start, true);\r\nvar end = cloneObject(currentState);\r\nend = stateFromOptions(options, end);\r\n\r\nvar animOptions = setupAnimationOptions(start, end, options);\r\nvar animation = createAnimation(animOptions);\r\n\r\nrunningAnimations.push([element, animation]);\r\n\r\nanimation.updateElement(element, true);\r\nvar queue = [];\r\nvar chainer = {\r\n  snabbt: function(opts) {\r\n    queue.unshift(preprocessOptions(opts, 0, 1));\r\n    return chainer;\r\n  },\r\n  then: function(opts) {\r\n    return this.snabbt(opts);\r\n  }\r\n};\r\n\r\nfunction tick(time) {\r\n  animation.tick(time);\r\n  animation.updateElement(element);\r\n  if(animation.isStopped())\r\n    return;\r\n\r\n  if(!animation.completed())\r\n    return queueTick(tick);\r\n\r\n  if(options.loop > 1 && !animation.isStopped()) {\r\n    // Loop current animation\r\n    options.loop -= 1;\r\n    animation.restart();\r\n    queueTick(tick);\r\n  } else {\r\n    if(options.complete) {\r\n      options.complete.call(element);\r\n    }\r\n\r\n    // Start next animation in queue\r\n    if(queue.length) {\r\n      options = queue.pop();\r\n\r\n      start = stateFromOptions(options, end, true);\r\n      end = stateFromOptions(options, cloneObject(end));\r\n      options = setupAnimationOptions(start, end, options);\r\n\r\n      animation = createAnimation(options);\r\n      runningAnimations.push([element, animation]);\r\n\r\n      animation.tick(time);\r\n      queueTick(tick);\r\n    }\r\n  }\r\n}\r\n\r\nqueueTick(tick);\r\n// Manual animations are not chainable, instead an animation controller object is returned\r\n// with setValue, finish and rollback methods\r\nif(options.manual)\r\n  return animation;\r\nreturn chainer;\r\n};\r\n\r\nvar setupAttentionAnimation = function(element,  options) {\r\nvar movement = stateFromOptions(options, createState({}));\r\noptions.movement = movement;\r\nvar animation = createAttentionAnimation(options);\r\n\r\nrunningAnimations.push([element, animation]);\r\nfunction tick(time) {\r\n  animation.tick(time);\r\n  animation.updateElement(element);\r\n  if(!animation.completed()) {\r\n    queueTick(tick);\r\n  } else {\r\n    if(options.callback) {\r\n      options.callback(element);\r\n    }\r\n    if(options.loop && options.loop > 1) {\r\n      options.loop--;\r\n      animation.restart();\r\n      queueTick(tick);\r\n    }\r\n  }\r\n}\r\nqueueTick(tick);\r\n};\r\n\r\nvar stopAnimation = function(element) {\r\nfor(var i= 0,len=runningAnimations.length;i<len;++i) {\r\n  var currentAnimation = runningAnimations[i];\r\n  var animatedElement = currentAnimation[0];\r\n  var animation = currentAnimation[1];\r\n\r\n  if(animatedElement === element) {\r\n    animation.stop();\r\n  }\r\n}\r\n};\r\n\r\nvar indexOfElement = function(arr, element) {\r\n  for(var i=0,len=arr.length;i<len;++i) {\r\n    if (arr[i][0]===element) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n\r\nvar detachChildren = function(element) {\r\n\r\n  var elements = [];\r\n  var animations = runningAnimations.concat(completedAnimations);\r\n  var el;\r\n  var i;\r\n  var len = animations.length;\r\n\r\n  for(i=0;i<len;++i) {\r\n    el = animations[i][0];\r\n    if (element.contains(el) || element === el) {\r\n      elements.push(el);\r\n    }\r\n  }\r\n\r\n  len=elements.length;\r\n  for(i=0;i<len;++i) {\r\n    detachElement(elements[i]);\r\n  }\r\n\r\n};\r\n\r\nvar detachElement = function(element) {\r\n\r\n  // stop animations\r\n  stopAnimation(element);\r\n\r\n  // remove\r\n  var index = indexOfElement(runningAnimations, element);\r\n  if (index >= 0) {\r\n    runningAnimations.splice(index,1);\r\n  }\r\n\r\n  index = indexOfElement(completedAnimations, element);\r\n  if (index >= 0) {\r\n    completedAnimations.splice(index,1);\r\n  }\r\n\r\n};\r\n\r\nvar findAnimationState = function(animationList, element) {\r\nfor(var i=0,len=animationList.length;i<len;++i) {\r\n  var currentAnimation = animationList[i];\r\n  var animatedElement = currentAnimation[0];\r\n  var animation = currentAnimation[1];\r\n\r\n  if(animatedElement === element) {\r\n    var state = animation.getCurrentState();\r\n    animation.stop();\r\n    return state;\r\n  }\r\n}\r\n};\r\n\r\nvar clearOphanedEndStates = function() {\r\ncompletedAnimations = completedAnimations.filter(function(animation) {\r\n  return (findUltimateAncestor(animation[0]).body);\r\n});\r\n};\r\n\r\nvar findUltimateAncestor = function(node) {\r\nvar ancestor = node;\r\nwhile(ancestor.parentNode) {\r\n  ancestor = ancestor.parentNode;\r\n}\r\nreturn ancestor;\r\n};\r\n\r\n/**\r\n* Returns the current state of element if there is an ongoing or previously finished\r\n* animation releated to it. Will also call stop on the animation.\r\n* TODO: The stopping of the animation is better put somewhere else\r\n*/\r\nvar currentAnimationState = function(element) {\r\n// Check if a completed animation is stored for this element\r\nvar state = findAnimationState(runningAnimations, element);\r\nif(state)\r\n  return state;\r\n\r\nreturn findAnimationState(completedAnimations, element);\r\n};\r\n\r\n/**\r\n* Parses an animation configuration object and returns a State instance\r\n*/\r\nvar stateFromOptions = function(options, state, useFromPrefix) {\r\nif (!state) {\r\n  state = createState({\r\n    position: [0, 0, 0],\r\n    rotation: [0, 0, 0],\r\n    rotationPost: [0, 0, 0],\r\n    scale: [1, 1],\r\n    skew: [0, 0]\r\n  });\r\n}\r\nvar position = 'position';\r\nvar rotation = 'rotation';\r\nvar skew = 'skew';\r\nvar rotationPost = 'rotationPost';\r\nvar scale = 'scale';\r\nvar scalePost = 'scalePost';\r\nvar width = 'width';\r\nvar height = 'height';\r\nvar opacity = 'opacity';\r\n\r\nif(useFromPrefix) {\r\n  position = 'fromPosition';\r\n  rotation = 'fromRotation';\r\n  skew = 'fromSkew';\r\n  rotationPost = 'fromRotationPost';\r\n  scale = 'fromScale';\r\n  scalePost = 'fromScalePost';\r\n  width = 'fromWidth';\r\n  height = 'fromHeight';\r\n  opacity = 'fromOpacity';\r\n}\r\n\r\nstate.position = optionOrDefault(options[position], state.position);\r\nstate.rotation = optionOrDefault(options[rotation], state.rotation);\r\nstate.rotationPost = optionOrDefault(options[rotationPost], state.rotationPost);\r\nstate.skew = optionOrDefault(options[skew], state.skew);\r\nstate.scale = optionOrDefault(options[scale], state.scale);\r\nstate.scalePost = optionOrDefault(options[scalePost], state.scalePost);\r\nstate.opacity = options[opacity];\r\nstate.width = options[width];\r\nstate.height = options[height];\r\n\r\nreturn state;\r\n};\r\n\r\nvar setupAnimationOptions = function(start, end, options) {\r\noptions.startState = start;\r\noptions.endState = end;\r\nreturn options;\r\n};\r\n\r\nvar polyFillrAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) { return setTimeout(callback, 1000 / 60); }; \r\n\r\nvar queueTick = function(func) {\r\nif(tickRequests.length === 0)\r\n  polyFillrAF(tickAnimations);\r\ntickRequests.push(func);\r\n};\r\n\r\nvar tickAnimations = function(time) {\r\nvar len = tickRequests.length;\r\nfor(var i=0;i<len;++i) {\r\n  tickRequests[i](time);\r\n}\r\ntickRequests.splice(0, len);\r\n\r\nvar finishedAnimations = runningAnimations.filter(function(animation) {\r\n  return animation[1].completed();\r\n});\r\n\r\n// See if there are any previously completed animations on the same element, if so, remove it before merging\r\ncompletedAnimations = completedAnimations.filter(function(animation) {\r\n  for(var i=0,len=finishedAnimations.length;i<len;++i) {\r\n    if(animation[0] === finishedAnimations[i][0]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n});\r\n\r\ncompletedAnimations = completedAnimations.concat(finishedAnimations);\r\n\r\nrunningAnimations = runningAnimations.filter(function(animation) {\r\n  return !animation[1].completed();\r\n});\r\n\r\nif(tickRequests.length !== 0)\r\n  polyFillrAF(tickAnimations);\r\n};\r\n\r\n\r\n// Class for handling animation between two states\r\nvar createAnimation = function(options) {\r\nvar startState = options.startState;\r\nvar endState = options.endState;\r\nvar duration = optionOrDefault(options.duration, 500);\r\nvar delay = optionOrDefault(options.delay, 0);\r\nvar perspective = options.perspective;\r\nvar easing = createEaser(optionOrDefault(options.easing, 'linear'), options);\r\nvar currentState = duration === 0 ? endState.clone() : startState.clone();\r\nvar transformOrigin = options.transformOrigin;\r\ncurrentState.transformOrigin = options.transformOrigin;\r\n\r\nvar startTime = 0;\r\nvar currentTime = 0;\r\nvar stopped = false;\r\nvar started = false;\r\n\r\n// Manual related\r\nvar manual = options.manual;\r\nvar manualValue = 0;\r\nvar manualDelayFactor = delay / duration;\r\nvar manualCallback;\r\n\r\nvar tweener;\r\n// Setup tweener\r\nif(options.valueFeeder) {\r\n  tweener = createValueFeederTweener(options.valueFeeder,\r\n                                     startState,\r\n                                     endState,\r\n                                     currentState);\r\n} else {\r\n  tweener = createStateTweener(startState, endState, currentState);\r\n}\r\n\r\n// Public api\r\nreturn {\r\n  stop: function() {\r\n    stopped = true;\r\n  },\r\n  isStopped: function() {\r\n    return stopped;\r\n  },\r\n\r\n  finish: function(callback) {\r\n    manual = false;\r\n    var manualDuration = duration * manualValue;\r\n    startTime = currentTime - manualDuration;\r\n    manualCallback = callback;\r\n    easing.resetFrom = manualValue;\r\n  },\r\n\r\n  rollback: function(callback) {\r\n    manual = false;\r\n    tweener.setReverse();\r\n    var manualDuration = duration * (1 - manualValue);\r\n    startTime = currentTime - manualDuration;\r\n    manualCallback = callback;\r\n    easing.resetFrom = manualValue;\r\n  },\r\n\r\n  restart: function() {\r\n    // Restart timer\r\n    startTime = undefined;\r\n    easing.resetFrom(0);\r\n  },\r\n\r\n  tick: function(time) {\r\n    if(stopped)\r\n      return;\r\n\r\n    if(manual) {\r\n      currentTime = time;\r\n      this.updateCurrentTransform();\r\n      return;\r\n    }\r\n\r\n    // If first tick, set startTime\r\n    if(!startTime) {\r\n      startTime = time;\r\n    }\r\n    if(time - startTime > delay) {\r\n      started = true;\r\n      currentTime = time - delay;\r\n\r\n      var curr = Math.min(Math.max(0.0, currentTime - startTime), duration);\r\n      easing.tick(curr / duration);\r\n      this.updateCurrentTransform();\r\n      if(this.completed() && manualCallback) {\r\n        manualCallback();\r\n      }\r\n    }\r\n  },\r\n\r\n  getCurrentState: function() {\r\n    return currentState;\r\n  },\r\n\r\n  setValue: function(_manualValue) {\r\n    started = true;\r\n    manualValue = Math.min(Math.max(_manualValue, 0.0001), 1 + manualDelayFactor);\r\n  },\r\n\r\n  updateCurrentTransform: function() {\r\n    var tweenValue = easing.getValue();\r\n    if(manual) {\r\n      var val = Math.max(0.00001, manualValue - manualDelayFactor);\r\n      easing.tick(val);\r\n      tweenValue = easing.getValue();\r\n    }\r\n    tweener.tween(tweenValue);\r\n  },\r\n\r\n  completed: function() {\r\n    if(stopped)\r\n      return true;\r\n    if(startTime === 0) {\r\n      return false;\r\n    }\r\n    return easing.completed();\r\n  },\r\n\r\n  updateElement: function(element, forceUpdate) {\r\n    if(!started && !forceUpdate)\r\n      return;\r\n    var matrix = tweener.asMatrix();\r\n    var properties = tweener.getProperties();\r\n    updateElementTransform(element, matrix, perspective);\r\n    updateElementProperties(element, properties);\r\n  }\r\n};\r\n};\r\n\r\n// ------------------------------\r\n// End Time animation\r\n// ------------------------------\r\n\r\n// ------------------------\r\n// -- AttentionAnimation --\r\n// ------------------------\r\n\r\nvar createAttentionAnimation = function(options) {\r\nvar movement = options.movement;\r\noptions.initialVelocity = 0.1;\r\noptions.equilibriumPosition = 0;\r\nvar spring = createSpringEasing(options);\r\nvar stopped = false;\r\nvar tweenPosition = movement.position;\r\nvar tweenRotation = movement.rotation;\r\nvar tweenRotationPost = movement.rotationPost;\r\nvar tweenScale = movement.scale;\r\nvar tweenSkew = movement.skew;\r\n\r\nvar currentMovement = createState({\r\n  position: tweenPosition ? [0, 0, 0] : undefined,\r\n  rotation: tweenRotation ? [0, 0, 0] : undefined,\r\n  rotationPost: tweenRotationPost ? [0, 0, 0] : undefined,\r\n  scale: tweenScale ? [0, 0] : undefined,\r\n  skew: tweenSkew ? [0, 0] : undefined,\r\n});\r\n\r\n// Public API\r\nreturn {\r\n  stop: function() {\r\n    stopped = true;\r\n  },\r\n\r\n  isStopped: function(time) {\r\n    return stopped;\r\n  },\r\n\r\n  tick: function(time) {\r\n    if(stopped)\r\n      return;\r\n    if(spring.equilibrium)\r\n      return;\r\n    spring.tick();\r\n\r\n    this.updateMovement();\r\n  },\r\n\r\n  updateMovement:function() {\r\n    var value = spring.getValue();\r\n    if(tweenPosition) {\r\n      currentMovement.position[0] = movement.position[0] * value;\r\n      currentMovement.position[1] = movement.position[1] * value;\r\n      currentMovement.position[2] = movement.position[2] * value;\r\n    }\r\n    if(tweenRotation) {\r\n      currentMovement.rotation[0] = movement.rotation[0] * value;\r\n      currentMovement.rotation[1] = movement.rotation[1] * value;\r\n      currentMovement.rotation[2] = movement.rotation[2] * value;\r\n    }\r\n    if(tweenRotationPost) {\r\n      currentMovement.rotationPost[0] = movement.rotationPost[0] * value;\r\n      currentMovement.rotationPost[1] = movement.rotationPost[1] * value;\r\n      currentMovement.rotationPost[2] = movement.rotationPost[2] * value;\r\n    }\r\n    if(tweenScale) {\r\n      currentMovement.scale[0] = 1 + movement.scale[0] * value;\r\n      currentMovement.scale[1] = 1 + movement.scale[1] * value;\r\n    }\r\n\r\n    if(tweenSkew) {\r\n      currentMovement.skew[0] = movement.skew[0] * value;\r\n      currentMovement.skew[1] = movement.skew[1] * value;\r\n    }\r\n  },\r\n\r\n  updateElement: function(element) {\r\n    updateElementTransform(element, currentMovement.asMatrix());\r\n    updateElementProperties(element, currentMovement.getProperties());\r\n  },\r\n\r\n  getCurrentState: function() {\r\n    return currentMovement;\r\n  },\r\n\r\n  completed: function() {\r\n    return spring.equilibrium || stopped;\r\n  },\r\n\r\n  restart: function() {\r\n    // Restart spring\r\n    spring = createSpringEasing(options);\r\n  }\r\n};\r\n};\r\n\r\n\r\n/**********\r\n* Easings *\r\n***********/\r\n\r\nvar linearEasing = function(value) {\r\nreturn value;\r\n};\r\n\r\nvar ease = function(value) {\r\nreturn (Math.cos(value*Math.PI + Math.PI) + 1)/2;\r\n};\r\n\r\nvar easeIn = function(value) {\r\nreturn value*value;\r\n};\r\n\r\nvar easeOut = function(value) {\r\nreturn -Math.pow(value - 1, 2) + 1;\r\n};\r\n\r\nvar createSpringEasing = function(options) {\r\nvar position = optionOrDefault(options.startPosition, 0);\r\nvar equilibriumPosition = optionOrDefault(options.equilibriumPosition, 1);\r\nvar velocity = optionOrDefault(options.initialVelocity, 0);\r\nvar springConstant = optionOrDefault(options.springConstant, 0.8);\r\nvar deceleration = optionOrDefault(options.springDeceleration, 0.9);\r\nvar mass = optionOrDefault(options.springMass, 10);\r\n\r\nvar equilibrium = false;\r\n\r\n// Public API\r\nreturn {\r\n\r\n  tick: function(value) {\r\n    if(value === 0.0)\r\n      return;\r\n    if(equilibrium)\r\n      return;\r\n    var springForce = -(position - equilibriumPosition) * springConstant;\r\n    // f = m * a\r\n    // a = f / m\r\n    var a = springForce / mass;\r\n    // s = v * t\r\n    // t = 1 ( for now )\r\n    velocity += a;\r\n    position += velocity;\r\n\r\n    // Deceleration\r\n    velocity *= deceleration;\r\n\r\n    if(Math.abs(position - equilibriumPosition) < 0.001 && Math.abs(velocity) < 0.001) {\r\n      equilibrium = true;\r\n    }\r\n  },\r\n\r\n  resetFrom: function(value) {\r\n    position = value;\r\n    velocity = 0;\r\n  },\r\n\r\n\r\n  getValue: function() {\r\n    if(equilibrium)\r\n      return equilibriumPosition;\r\n    return position;\r\n  },\r\n\r\n  completed: function() {\r\n    return equilibrium;\r\n  }\r\n};\r\n};\r\n\r\nvar EASING_FUNCS = {\r\n'linear': linearEasing,\r\n'ease': ease,\r\n'easeIn': easeIn,\r\n'easeOut': easeOut,\r\n};\r\n\r\n\r\nvar createEaser = function(easerName, options) {\r\nif(easerName == 'spring') {\r\n  return createSpringEasing(options);\r\n}\r\nvar easeFunction = easerName;\r\nif(!isFunction(easerName)) {\r\n  easeFunction = EASING_FUNCS[easerName];\r\n}\r\n\r\nvar easer = easeFunction;\r\nvar value = 0;\r\nvar lastValue;\r\n\r\n// Public API\r\nreturn {\r\n  tick: function(v) {\r\n    value = easer(v);\r\n    lastValue = v;\r\n  },\r\n\r\n  resetFrom: function(value) {\r\n    lastValue = 0;\r\n  },\r\n\r\n  getValue: function() {\r\n    return value;\r\n  },\r\n\r\n  completed: function() {\r\n    if(lastValue >= 1) {\r\n      return lastValue;\r\n    }\r\n    return false;\r\n  }\r\n};\r\n};\r\n\r\n/***\r\n* Matrix related\r\n*/\r\n\r\nvar assignTranslate = function(matrix, x, y, z) {\r\nmatrix[0] = 1;\r\nmatrix[1] = 0;\r\nmatrix[2] = 0;\r\nmatrix[3] = 0;\r\nmatrix[4] = 0;\r\nmatrix[5] = 1;\r\nmatrix[6] = 0;\r\nmatrix[7] = 0;\r\nmatrix[8] = 0;\r\nmatrix[9] = 0;\r\nmatrix[10] = 1;\r\nmatrix[11] = 0;\r\nmatrix[12] = x;\r\nmatrix[13] = y;\r\nmatrix[14] = z;\r\nmatrix[15] = 1;\r\n};\r\n\r\nvar assignRotateX = function(matrix, rad) {\r\nmatrix[0] = 1;\r\nmatrix[1] = 0;\r\nmatrix[2] = 0;\r\nmatrix[3] = 0;\r\nmatrix[4] = 0;\r\nmatrix[5] = Math.cos(rad);\r\nmatrix[6] = -Math.sin(rad);\r\nmatrix[7] = 0;\r\nmatrix[8] = 0;\r\nmatrix[9] = Math.sin(rad);\r\nmatrix[10] = Math.cos(rad);\r\nmatrix[11] = 0;\r\nmatrix[12] = 0;\r\nmatrix[13] = 0;\r\nmatrix[14] = 0;\r\nmatrix[15] = 1;\r\n};\r\n\r\n\r\nvar assignRotateY = function(matrix, rad) {\r\nmatrix[0] = Math.cos(rad);\r\nmatrix[1] = 0;\r\nmatrix[2] = Math.sin(rad);\r\nmatrix[3] = 0;\r\nmatrix[4] = 0;\r\nmatrix[5] = 1;\r\nmatrix[6] = 0;\r\nmatrix[7] = 0;\r\nmatrix[8] = -Math.sin(rad);\r\nmatrix[9] = 0;\r\nmatrix[10] = Math.cos(rad);\r\nmatrix[11] = 0;\r\nmatrix[12] = 0;\r\nmatrix[13] = 0;\r\nmatrix[14] = 0;\r\nmatrix[15] = 1;\r\n};\r\n\r\nvar assignRotateZ = function(matrix, rad) {\r\nmatrix[0] = Math.cos(rad);\r\nmatrix[1] = -Math.sin(rad);\r\nmatrix[2] = 0;\r\nmatrix[3] = 0;\r\nmatrix[4] = Math.sin(rad);\r\nmatrix[5] = Math.cos(rad);\r\nmatrix[6] = 0;\r\nmatrix[7] = 0;\r\nmatrix[8] = 0;\r\nmatrix[9] = 0;\r\nmatrix[10] = 1;\r\nmatrix[11] = 0;\r\nmatrix[12] = 0;\r\nmatrix[13] = 0;\r\nmatrix[14] = 0;\r\nmatrix[15] = 1;\r\n};\r\n\r\nvar assignSkew = function(matrix, ax, ay) {\r\nmatrix[0] = 1;\r\nmatrix[1] = Math.tan(ax);\r\nmatrix[2] = 0;\r\nmatrix[3] = 0;\r\nmatrix[4] = Math.tan(ay);\r\nmatrix[5] = 1;\r\nmatrix[6] = 0;\r\nmatrix[7] = 0;\r\nmatrix[8] = 0;\r\nmatrix[9] = 0;\r\nmatrix[10] = 1;\r\nmatrix[11] = 0;\r\nmatrix[12] = 0;\r\nmatrix[13] = 0;\r\nmatrix[14] = 0;\r\nmatrix[15] = 1;\r\n};\r\n\r\n\r\nvar assignScale = function(matrix, x, y) {\r\nmatrix[0] = x;\r\nmatrix[1] = 0;\r\nmatrix[2] = 0;\r\nmatrix[3] = 0;\r\nmatrix[4] = 0;\r\nmatrix[5] = y;\r\nmatrix[6] = 0;\r\nmatrix[7] = 0;\r\nmatrix[8] = 0;\r\nmatrix[9] = 0;\r\nmatrix[10] = 1;\r\nmatrix[11] = 0;\r\nmatrix[12] = 0;\r\nmatrix[13] = 0;\r\nmatrix[14] = 0;\r\nmatrix[15] = 1;\r\n};\r\n\r\nvar assignIdentity = function(matrix) {\r\nmatrix[0] = 1;\r\nmatrix[1] = 0;\r\nmatrix[2] = 0;\r\nmatrix[3] = 0;\r\nmatrix[4] = 0;\r\nmatrix[5] = 1;\r\nmatrix[6] = 0;\r\nmatrix[7] = 0;\r\nmatrix[8] = 0;\r\nmatrix[9] = 0;\r\nmatrix[10] = 1;\r\nmatrix[11] = 0;\r\nmatrix[12] = 0;\r\nmatrix[13] = 0;\r\nmatrix[14] = 0;\r\nmatrix[15] = 1;\r\n};\r\n\r\nvar copyArray = function(a, b) {\r\nb[0] = a[0];\r\nb[1] = a[1];\r\nb[2] = a[2];\r\nb[3] = a[3];\r\nb[4] = a[4];\r\nb[5] = a[5];\r\nb[6] = a[6];\r\nb[7] = a[7];\r\nb[8] = a[8];\r\nb[9] = a[9];\r\nb[10] = a[10];\r\nb[11] = a[11];\r\nb[12] = a[12];\r\nb[13] = a[13];\r\nb[14] = a[14];\r\nb[15] = a[15];\r\n};\r\n\r\nvar createMatrix = function() {\r\nvar data = new Float32Array(16);\r\nvar a = new Float32Array(16);\r\nvar b = new Float32Array(16);\r\nassignIdentity(data);\r\n\r\nreturn {\r\n  data: data,\r\n\r\n  asCSS: function() {\r\n    var css = 'matrix3d(';\r\n    for(var i=0;i<15;++i) {\r\n      if(Math.abs(data[i]) < 0.0001)\r\n        css += '0,';\r\n      else\r\n        css += data[i].toFixed(10) + ',';\r\n    }\r\n    if(Math.abs(data[15]) < 0.0001)\r\n      css += '0)';\r\n    else\r\n      css += data[15].toFixed(10) + ')';\r\n    return css;\r\n  },\r\n\r\n  clear: function() {\r\n    assignIdentity(data);\r\n  },\r\n\r\n  translate: function(x, y, z) {\r\n    copyArray(data, a);\r\n    assignTranslate(b, x, y, z);\r\n    assignedMatrixMultiplication(a, b, data);\r\n    return this;\r\n  },\r\n\r\n  rotateX: function(radians) {\r\n    copyArray(data, a);\r\n    assignRotateX(b, radians);\r\n    assignedMatrixMultiplication(a, b, data);\r\n    return this;\r\n  },\r\n\r\n  rotateY: function(radians) {\r\n    copyArray(data, a);\r\n    assignRotateY(b, radians);\r\n    assignedMatrixMultiplication(a, b, data);\r\n    return this;\r\n  },\r\n\r\n  rotateZ: function(radians) {\r\n    copyArray(data, a);\r\n    assignRotateZ(b, radians);\r\n    assignedMatrixMultiplication(a, b, data);\r\n    return this;\r\n  },\r\n\r\n  scale: function(x, y) {\r\n    copyArray(data, a);\r\n    assignScale(b, x, y);\r\n    assignedMatrixMultiplication(a, b, data);\r\n    return this;\r\n  },\r\n\r\n  skew: function(ax, ay) {\r\n    copyArray(data, a);\r\n    assignSkew(b, ax, ay);\r\n    assignedMatrixMultiplication(a, b, data);\r\n    return this;\r\n  }\r\n};\r\n};\r\n\r\nvar assignedMatrixMultiplication = function(a, b, res) {\r\n// Unrolled loop\r\nres[0] = a[0] * b[0] + a[1] * b[4] + a[2] * b[8] + a[3] * b[12];\r\nres[1] = a[0] * b[1] + a[1] * b[5] + a[2] * b[9] + a[3] * b[13];\r\nres[2] = a[0] * b[2] + a[1] * b[6] + a[2] * b[10] + a[3] * b[14];\r\nres[3] = a[0] * b[3] + a[1] * b[7] + a[2] * b[11] + a[3] * b[15];\r\n\r\nres[4] = a[4] * b[0] + a[5] * b[4] + a[6] * b[8] + a[7] * b[12];\r\nres[5] = a[4] * b[1] + a[5] * b[5] + a[6] * b[9] + a[7] * b[13];\r\nres[6] = a[4] * b[2] + a[5] * b[6] + a[6] * b[10] + a[7] * b[14];\r\nres[7] = a[4] * b[3] + a[5] * b[7] + a[6] * b[11] + a[7] * b[15];\r\n\r\nres[8] = a[8] * b[0] + a[9] * b[4] + a[10] * b[8] + a[11] * b[12];\r\nres[9] = a[8] * b[1] + a[9] * b[5] + a[10] * b[9] + a[11] * b[13];\r\nres[10] = a[8] * b[2] + a[9] * b[6] + a[10] * b[10] + a[11] * b[14];\r\nres[11] = a[8] * b[3] + a[9] * b[7] + a[10] * b[11] + a[11] * b[15];\r\n\r\nres[12] = a[12] * b[0] + a[13] * b[4] + a[14] * b[8] + a[15] * b[12];\r\nres[13] = a[12] * b[1] + a[13] * b[5] + a[14] * b[9] + a[15] * b[13];\r\nres[14] = a[12] * b[2] + a[13] * b[6] + a[14] * b[10] + a[15] * b[14];\r\nres[15] = a[12] * b[3] + a[13] * b[7] + a[14] * b[11] + a[15] * b[15];\r\n\r\nreturn res;\r\n};\r\n\r\nvar createState = function(config) {\r\n// Caching of matrix and properties so we don't have to create new ones everytime they are needed\r\nvar matrix = createMatrix();\r\nvar properties = {\r\n  opacity: undefined,\r\n  width: undefined,\r\n  height: undefined\r\n};\r\n\r\n// Public API\r\nreturn {\r\n  position: config.position,\r\n  rotation: config.rotation,\r\n  rotationPost: config.rotationPost,\r\n  skew: config.skew,\r\n  scale: config.scale,\r\n  scalePost: config.scalePost,\r\n  opacity: config.opacity,\r\n  width: config.width,\r\n  height: config.height,\r\n\r\n\r\n  clone: function() {\r\n    return createState({\r\n      position: this.position ? this.position.slice(0) : undefined,\r\n      rotation: this.rotation ? this.rotation.slice(0) : undefined,\r\n      rotationPost: this.rotationPost ? this.rotationPost.slice(0) : undefined,\r\n      skew: this.skew ? this.skew.slice(0) : undefined,\r\n      scale: this.scale ? this.scale.slice(0) : undefined,\r\n      scalePost: this.scalePost ? this.scalePost.slice(0) : undefined,\r\n      height: this.height,\r\n      width: this.width,\r\n      opacity: this.opacity\r\n    });\r\n  },\r\n\r\n  asMatrix: function() {\r\n    var m = matrix;\r\n    m.clear();\r\n\r\n    if(this.transformOrigin)\r\n      m.translate(-this.transformOrigin[0], -this.transformOrigin[1], -this.transformOrigin[2]);\r\n\r\n    if(this.scale) {\r\n      m.scale(this.scale[0], this.scale[1]);\r\n    }\r\n\r\n    if(this.skew) {\r\n      m.skew(this.skew[0], this.skew[1]);\r\n    }\r\n\r\n    if(this.rotation) {\r\n      m.rotateX(this.rotation[0]);\r\n      m.rotateY(this.rotation[1]);\r\n      m.rotateZ(this.rotation[2]);\r\n    }\r\n\r\n    if(this.position) {\r\n      m.translate(this.position[0], this.position[1], this.position[2]);\r\n    }\r\n\r\n    if(this.rotationPost) {\r\n      m.rotateX(this.rotationPost[0]);\r\n      m.rotateY(this.rotationPost[1]);\r\n      m.rotateZ(this.rotationPost[2]);\r\n    }\r\n\r\n    if(this.scalePost) {\r\n      m.scale(this.scalePost[0], this.scalePost[1]);\r\n    }\r\n\r\n    if(this.transformOrigin)\r\n      m.translate(this.transformOrigin[0], this.transformOrigin[1], this.transformOrigin[2]);\r\n    return m;\r\n  },\r\n\r\n  getProperties: function() {\r\n    properties.opacity = this.opacity;\r\n    properties.width = this.width + 'px';\r\n    properties.height = this.height + 'px';\r\n    return properties;\r\n  }\r\n};\r\n};\r\n// ------------------\r\n// -- StateTweener -- \r\n// -------------------\r\n\r\nvar createStateTweener = function(startState, endState, resultState) {\r\nvar start = startState;\r\nvar end = endState;\r\nvar result = resultState;\r\n\r\nvar tweenPosition = end.position !== undefined;\r\nvar tweenRotation = end.rotation !== undefined;\r\nvar tweenRotationPost = end.rotationPost !== undefined;\r\nvar tweenScale = end.scale !== undefined;\r\nvar tweenSkew = end.skew !== undefined;\r\nvar tweenWidth = end.width !== undefined;\r\nvar tweenHeight = end.height !== undefined;\r\nvar tweenOpacity = end.opacity !== undefined;\r\n\r\n// Public API\r\nreturn {\r\n\r\n  tween: function(tweenValue) {\r\n\r\n    if(tweenPosition) {\r\n      var dX = (end.position[0] - start.position[0]);\r\n      var dY = (end.position[1] - start.position[1]);\r\n      var dZ = (end.position[2] - start.position[2]);\r\n      result.position[0] = start.position[0] + tweenValue*dX;\r\n      result.position[1] = start.position[1] + tweenValue*dY;\r\n      result.position[2] = start.position[2] + tweenValue*dZ;\r\n    }\r\n\r\n    if(tweenRotation) {\r\n      var dAX = (end.rotation[0] - start.rotation[0]);\r\n      var dAY = (end.rotation[1] - start.rotation[1]);\r\n      var dAZ = (end.rotation[2] - start.rotation[2]);\r\n      result.rotation[0] = start.rotation[0] + tweenValue*dAX;\r\n      result.rotation[1] = start.rotation[1] + tweenValue*dAY;\r\n      result.rotation[2] = start.rotation[2] + tweenValue*dAZ;\r\n    }\r\n\r\n    if(tweenRotationPost) {\r\n      var dBX = (end.rotationPost[0] - start.rotationPost[0]);\r\n      var dBY = (end.rotationPost[1] - start.rotationPost[1]);\r\n      var dBZ = (end.rotationPost[2] - start.rotationPost[2]);\r\n      result.rotationPost[0] = start.rotationPost[0] + tweenValue*dBX;\r\n      result.rotationPost[1] = start.rotationPost[1] + tweenValue*dBY;\r\n      result.rotationPost[2] = start.rotationPost[2] + tweenValue*dBZ;\r\n    }\r\n\r\n    if(tweenSkew) {\r\n      var dSX = (end.scale[0] - start.scale[0]);\r\n      var dSY = (end.scale[1] - start.scale[1]);\r\n\r\n      result.scale[0] = start.scale[0] + tweenValue*dSX;\r\n      result.scale[1] = start.scale[1] + tweenValue*dSY;\r\n    }\r\n\r\n    if(tweenScale) {\r\n      var dSkewX = (end.skew[0] - start.skew[0]);\r\n      var dSkewY = (end.skew[1] - start.skew[1]);\r\n\r\n      result.skew[0] = start.skew[0] + tweenValue*dSkewX;\r\n      result.skew[1] = start.skew[1] + tweenValue*dSkewY;\r\n    }\r\n\r\n    if(tweenWidth) {\r\n      var dWidth = (end.width - start.width);\r\n      result.width = start.width + tweenValue*dWidth;\r\n    }\r\n\r\n\r\n    if(tweenHeight) {\r\n      var dHeight = (end.height - start.height);\r\n      result.height = start.height + tweenValue*dHeight;\r\n    }\r\n\r\n    if(tweenOpacity) {\r\n      var dOpacity = (end.opacity - start.opacity);\r\n      result.opacity = start.opacity + tweenValue*dOpacity;\r\n    }\r\n\r\n  },\r\n\r\n  asMatrix: function() {\r\n    return result.asMatrix();\r\n  },\r\n\r\n  getProperties: function() {\r\n    return result.getProperties();\r\n  },\r\n\r\n  setReverse: function() {\r\n    var oldStart = start;\r\n    start = end;\r\n    end = oldStart;\r\n  }\r\n};\r\n};\r\n\r\n// ------------------------\r\n// -- ValueFeederTweener -- \r\n// ------------------------\r\n\r\nvar createValueFeederTweener = function(valueFeeder, startState, endState, resultState) {\r\nvar currentMatrix = valueFeeder(0, createMatrix());\r\nvar start = startState;\r\nvar end = endState;\r\nvar result = resultState;\r\nvar reverse = false;\r\n\r\n\r\n// Public API\r\nreturn {\r\n\r\n  tween: function(tweenValue) {\r\n    if(reverse)\r\n      tweenValue = 1 - tweenValue;\r\n    currentMatrix.clear();\r\n    currentMatrix = valueFeeder(tweenValue, currentMatrix);\r\n\r\n    var dWidth = (end.width - start.width);\r\n    var dHeight = (end.height - start.height);\r\n    var dOpacity = (end.opacity - start.opacity);\r\n\r\n    if(end.width !== undefined)\r\n      result.width = start.width + tweenValue*dWidth;\r\n    if(end.height !== undefined)\r\n      result.height = start.height + tweenValue*dHeight;\r\n    if(end.opacity !== undefined)\r\n      result.opacity = start.opacity + tweenValue*dOpacity;\r\n  },\r\n\r\n  asMatrix: function() {\r\n    return currentMatrix;\r\n  },\r\n\r\n  getProperties: function() {\r\n    return result.getProperties();\r\n  },\r\n\r\n  setReverse: function() {\r\n    reverse = true;\r\n  }\r\n\r\n};\r\n};\r\n\r\nvar optionOrDefault = function(option, def) {\r\nif(typeof option == 'undefined') {\r\n  return def;\r\n}\r\nreturn option;\r\n};\r\n\r\nvar updateElementTransform = function(element, matrix, perspective) {\r\nvar cssPerspective = '';\r\nif(perspective) {\r\n  cssPerspective = 'perspective(' + perspective + 'px) ';\r\n}\r\nvar cssMatrix = matrix.asCSS();\r\nelement.style[transformProperty] = cssPerspective + cssMatrix;\r\n};\r\n\r\nvar updateElementProperties = function(element, properties) {\r\nfor(var key in properties) {\r\n  element.style[key] = properties[key];\r\n}\r\n};\r\n\r\nvar isFunction = function(object) {\r\nreturn (typeof object === \"function\");\r\n};\r\n\r\nvar cloneObject = function(object) {\r\nif(!object)\r\n  return object;\r\nvar clone = {};\r\nfor(var key in object) {\r\n  clone[key] = object[key];\r\n}\r\nreturn clone;\r\n};\r\n\r\nsnabbt.createMatrix = createMatrix;\r\nsnabbt.setElementTransform = updateElementTransform;\r\nreturn snabbt;\r\n}());\r\nvar stackBlur = (function(){\r\n\r\nvar mul_table = [\r\n    512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,\r\n    454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,\r\n    482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,\r\n    437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,\r\n    497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,\r\n    320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,\r\n    446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,\r\n    329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,\r\n    505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,\r\n    399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,\r\n    324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,\r\n    268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,\r\n    451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,\r\n    385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,\r\n    332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,\r\n    289,287,285,282,280,278,275,273,271,269,267,265,263,261,259];\r\n\r\n\r\nvar shg_table = [\r\n    9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17,\r\n    17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,\r\n    19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\r\n    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\r\n    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\r\n    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\r\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\r\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,\r\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\r\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\r\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\r\n    23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\r\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24 ];\r\n\r\nfunction getImageDataFromCanvas(canvas, top_x, top_y, width, height)\r\n{\r\n    if (typeof(canvas) == 'string')\r\n        canvas  = document.getElementById(canvas);\r\n    else if (!canvas instanceof HTMLCanvasElement)\r\n        return;\r\n\r\n    var context = canvas.getContext('2d');\r\n    var imageData;\r\n\r\n    try {\r\n        try {\r\n            imageData = context.getImageData(top_x, top_y, width, height);\r\n        } catch(e) {\r\n            throw new Error(\"unable to access local image data: \" + e);\r\n            return;\r\n        }\r\n    } catch(e) {\r\n        throw new Error(\"unable to access image data: \" + e);\r\n    }\r\n\r\n    return imageData;\r\n}\r\n\r\nfunction processCanvasRGBA(canvas, top_x, top_y, width, height, radius)\r\n{\r\n    if (isNaN(radius) || radius < 1) return;\r\n    radius |= 0;\r\n\r\n    var imageData = getImageDataFromCanvas(canvas, top_x, top_y, width, height);\r\n\r\n    imageData = processImageDataRGBA(imageData, top_x, top_y, width, height, radius);\r\n\r\n    canvas.getContext('2d').putImageData(imageData, top_x, top_y);\r\n}\r\n\r\nfunction processImageDataRGBA(imageData, top_x, top_y, width, height, radius)\r\n{\r\n    var pixels = imageData.data;\r\n\r\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum,\r\n        r_out_sum, g_out_sum, b_out_sum, a_out_sum,\r\n        r_in_sum, g_in_sum, b_in_sum, a_in_sum,\r\n        pr, pg, pb, pa, rbs;\r\n\r\n    var div = radius + radius + 1;\r\n    var w4 = width << 2;\r\n    var widthMinus1  = width - 1;\r\n    var heightMinus1 = height - 1;\r\n    var radiusPlus1  = radius + 1;\r\n    var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\r\n\r\n    var stackStart = new BlurStack();\r\n    var stack = stackStart;\r\n    for (i = 1; i < div; i++)\r\n    {\r\n        stack = stack.next = new BlurStack();\r\n        if (i == radiusPlus1) var stackEnd = stack;\r\n    }\r\n    stack.next = stackStart;\r\n    var stackIn = null;\r\n    var stackOut = null;\r\n\r\n    yw = yi = 0;\r\n\r\n    var mul_sum = mul_table[radius];\r\n    var shg_sum = shg_table[radius];\r\n\r\n    for (y = 0; y < height; y++)\r\n    {\r\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\r\n\r\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\r\n        g_out_sum = radiusPlus1 * (pg = pixels[yi+1]);\r\n        b_out_sum = radiusPlus1 * (pb = pixels[yi+2]);\r\n        a_out_sum = radiusPlus1 * (pa = pixels[yi+3]);\r\n\r\n        r_sum += sumFactor * pr;\r\n        g_sum += sumFactor * pg;\r\n        b_sum += sumFactor * pb;\r\n        a_sum += sumFactor * pa;\r\n\r\n        stack = stackStart;\r\n\r\n        for (i = 0; i < radiusPlus1; i++)\r\n        {\r\n            stack.r = pr;\r\n            stack.g = pg;\r\n            stack.b = pb;\r\n            stack.a = pa;\r\n            stack = stack.next;\r\n        }\r\n\r\n        for (i = 1; i < radiusPlus1; i++)\r\n        {\r\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\r\n            r_sum += (stack.r = (pr = pixels[p])) * (rbs = radiusPlus1 - i);\r\n            g_sum += (stack.g = (pg = pixels[p+1])) * rbs;\r\n            b_sum += (stack.b = (pb = pixels[p+2])) * rbs;\r\n            a_sum += (stack.a = (pa = pixels[p+3])) * rbs;\r\n\r\n            r_in_sum += pr;\r\n            g_in_sum += pg;\r\n            b_in_sum += pb;\r\n            a_in_sum += pa;\r\n\r\n            stack = stack.next;\r\n        }\r\n\r\n\r\n        stackIn = stackStart;\r\n        stackOut = stackEnd;\r\n        for (x = 0; x < width; x++)\r\n        {\r\n            pixels[yi+3] = pa = (a_sum * mul_sum) >> shg_sum;\r\n            if (pa != 0)\r\n            {\r\n                pa = 255 / pa;\r\n                pixels[yi]   = ((r_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[yi+1] = ((g_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[yi+2] = ((b_sum * mul_sum) >> shg_sum) * pa;\r\n            } else {\r\n                pixels[yi] = pixels[yi+1] = pixels[yi+2] = 0;\r\n            }\r\n\r\n            r_sum -= r_out_sum;\r\n            g_sum -= g_out_sum;\r\n            b_sum -= b_out_sum;\r\n            a_sum -= a_out_sum;\r\n\r\n            r_out_sum -= stackIn.r;\r\n            g_out_sum -= stackIn.g;\r\n            b_out_sum -= stackIn.b;\r\n            a_out_sum -= stackIn.a;\r\n\r\n            p =  (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\r\n\r\n            r_in_sum += (stackIn.r = pixels[p]);\r\n            g_in_sum += (stackIn.g = pixels[p+1]);\r\n            b_in_sum += (stackIn.b = pixels[p+2]);\r\n            a_in_sum += (stackIn.a = pixels[p+3]);\r\n\r\n            r_sum += r_in_sum;\r\n            g_sum += g_in_sum;\r\n            b_sum += b_in_sum;\r\n            a_sum += a_in_sum;\r\n\r\n            stackIn = stackIn.next;\r\n\r\n            r_out_sum += (pr = stackOut.r);\r\n            g_out_sum += (pg = stackOut.g);\r\n            b_out_sum += (pb = stackOut.b);\r\n            a_out_sum += (pa = stackOut.a);\r\n\r\n            r_in_sum -= pr;\r\n            g_in_sum -= pg;\r\n            b_in_sum -= pb;\r\n            a_in_sum -= pa;\r\n\r\n            stackOut = stackOut.next;\r\n\r\n            yi += 4;\r\n        }\r\n        yw += width;\r\n    }\r\n\r\n\r\n    for (x = 0; x < width; x++)\r\n    {\r\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\r\n\r\n        yi = x << 2;\r\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\r\n        g_out_sum = radiusPlus1 * (pg = pixels[yi+1]);\r\n        b_out_sum = radiusPlus1 * (pb = pixels[yi+2]);\r\n        a_out_sum = radiusPlus1 * (pa = pixels[yi+3]);\r\n\r\n        r_sum += sumFactor * pr;\r\n        g_sum += sumFactor * pg;\r\n        b_sum += sumFactor * pb;\r\n        a_sum += sumFactor * pa;\r\n\r\n        stack = stackStart;\r\n\r\n        for (i = 0; i < radiusPlus1; i++)\r\n        {\r\n            stack.r = pr;\r\n            stack.g = pg;\r\n            stack.b = pb;\r\n            stack.a = pa;\r\n            stack = stack.next;\r\n        }\r\n\r\n        yp = width;\r\n\r\n        for (i = 1; i <= radius; i++)\r\n        {\r\n            yi = (yp + x) << 2;\r\n\r\n            r_sum += (stack.r = (pr = pixels[yi])) * (rbs = radiusPlus1 - i);\r\n            g_sum += (stack.g = (pg = pixels[yi+1])) * rbs;\r\n            b_sum += (stack.b = (pb = pixels[yi+2])) * rbs;\r\n            a_sum += (stack.a = (pa = pixels[yi+3])) * rbs;\r\n\r\n            r_in_sum += pr;\r\n            g_in_sum += pg;\r\n            b_in_sum += pb;\r\n            a_in_sum += pa;\r\n\r\n            stack = stack.next;\r\n\r\n            if(i < heightMinus1)\r\n            {\r\n                yp += width;\r\n            }\r\n        }\r\n\r\n        yi = x;\r\n        stackIn = stackStart;\r\n        stackOut = stackEnd;\r\n        for (y = 0; y < height; y++)\r\n        {\r\n            p = yi << 2;\r\n            pixels[p+3] = pa = (a_sum * mul_sum) >> shg_sum;\r\n            if (pa > 0)\r\n            {\r\n                pa = 255 / pa;\r\n                pixels[p]   = ((r_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[p+1] = ((g_sum * mul_sum) >> shg_sum) * pa;\r\n                pixels[p+2] = ((b_sum * mul_sum) >> shg_sum) * pa;\r\n            } else {\r\n                pixels[p] = pixels[p+1] = pixels[p+2] = 0;\r\n            }\r\n\r\n            r_sum -= r_out_sum;\r\n            g_sum -= g_out_sum;\r\n            b_sum -= b_out_sum;\r\n            a_sum -= a_out_sum;\r\n\r\n            r_out_sum -= stackIn.r;\r\n            g_out_sum -= stackIn.g;\r\n            b_out_sum -= stackIn.b;\r\n            a_out_sum -= stackIn.a;\r\n\r\n            p = (x + (((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width)) << 2;\r\n\r\n            r_sum += (r_in_sum += (stackIn.r = pixels[p]));\r\n            g_sum += (g_in_sum += (stackIn.g = pixels[p+1]));\r\n            b_sum += (b_in_sum += (stackIn.b = pixels[p+2]));\r\n            a_sum += (a_in_sum += (stackIn.a = pixels[p+3]));\r\n\r\n            stackIn = stackIn.next;\r\n\r\n            r_out_sum += (pr = stackOut.r);\r\n            g_out_sum += (pg = stackOut.g);\r\n            b_out_sum += (pb = stackOut.b);\r\n            a_out_sum += (pa = stackOut.a);\r\n\r\n            r_in_sum -= pr;\r\n            g_in_sum -= pg;\r\n            b_in_sum -= pb;\r\n            a_in_sum -= pa;\r\n\r\n            stackOut = stackOut.next;\r\n\r\n            yi += width;\r\n        }\r\n    }\r\n    return imageData;\r\n}\r\n\r\nfunction BlurStack()\r\n{\r\n    this.r = 0;\r\n    this.g = 0;\r\n    this.b = 0;\r\n    this.a = 0;\r\n    this.next = null;\r\n}\r\n\r\nreturn processCanvasRGBA;\r\n\r\n}());\r\n// canvas to blob polyfill\r\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob#Polyfill\r\nif (!HTMLCanvasElement.prototype.toBlob) {\r\n\tObject.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\r\n\t\tvalue: function (callback, type, quality) {\r\n\r\n\t\t\tvar binStr = atob( this.toDataURL(type, quality).split(',')[1] ),\r\n\t\t\t\tlen = binStr.length,\r\n\t\t\t\tarr = new Uint8Array(len);\r\n\r\n\t\t\tfor (var i=0; i<len; i++ ) {\r\n\t\t\t\tarr[i] = binStr.charCodeAt(i);\r\n\t\t\t}\r\n\r\n\t\t\tcallback( new Blob( [arr], {type: type || 'image/png'} ) );\r\n\t\t}\r\n\t});\r\n}\r\n'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nvar _arguments = arguments;\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nvar copyString = function copyString(str) {\r\n\treturn str + '';\r\n};\r\n\r\nvar getDataset = function getDataset(el) {\r\n\r\n\tif (typeof el.dataset === 'undefined') {\r\n\t\tvar res = {};\r\n\t\tvar attr;\r\n\t\tvar attrName;\r\n\t\tvar attrs = el.attributes;\r\n\t\tfor (attr in attrs) {\r\n\t\t\tif (attrs.hasOwnProperty(attr) && attrs[attr].name && /^data-[a-z_\\-\\d]*$/i.test(attrs[attr].name)) {\r\n\t\t\t\tattrName = toCamelCase(attrs[attr].name.substr(5));\r\n\t\t\t\tres[attrName] = attrs[attr].value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\treturn el.dataset;\r\n};\r\n\r\nvar toCamelCase = function toCamelCase(str) {\r\n\treturn str.replace(/\\-./g, function (substr) {\r\n\t\treturn substr.charAt(1).toUpperCase();\r\n\t});\r\n};\r\n\r\nvar getElementAttributes = function getElementAttributes(el) {\r\n\t// is a for loop on purpose as this should still function when Slim not supported\r\n\tvar result = [];\r\n\tvar attributes = Array.prototype.slice.call(el.attributes);\r\n\tvar l = attributes.length;\r\n\tfor (var i = 0; i < l; i++) {\r\n\t\tresult.push({\r\n\t\t\tname: attributes[i].name,\r\n\t\t\tvalue: attributes[i].value\r\n\t\t});\r\n\t}\r\n\treturn result;\r\n};\r\n\r\n// helper method\r\nvar getOffsetByEvent = function getOffsetByEvent(e) {\r\n\treturn {\r\n\t\tx: typeof e.offsetX === 'undefined' ? e.layerX : e.offsetX,\r\n\t\ty: typeof e.offsetY === 'undefined' ? e.layerY : e.offsetY\r\n\t};\r\n};\r\n\r\n// merge two objects together\r\nvar mergeOptions = function mergeOptions(base, additives) {\r\n\r\n\tvar key;\r\n\tvar options = {};\r\n\tvar optionsToMerge = additives || {};\r\n\r\n\tfor (key in base) {\r\n\t\tif (!base.hasOwnProperty(key)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\toptions[key] = typeof optionsToMerge[key] === 'undefined' ? base[key] : optionsToMerge[key];\r\n\t}\r\n\r\n\treturn options;\r\n};\r\n\r\n// keys\r\nvar Key = {\r\n\tESC: 27,\r\n\tRETURN: 13\r\n};\r\n\r\n// pointer events\r\nvar Events = {\r\n\tDOWN: ['touchstart', 'pointerdown', 'mousedown'],\r\n\tMOVE: ['touchmove', 'pointermove', 'mousemove'],\r\n\tUP: ['touchend', 'touchcancel', 'pointerup', 'mouseup']\r\n};\r\n\r\nvar MimeTypes = {\r\n\t'jpeg': 'image/jpeg',\r\n\t'jpg': 'image/jpeg',\r\n\t'jpe': 'image/jpeg',\r\n\t'png': 'image/png',\r\n\t'gif': 'image/gif',\r\n\t'bmp': 'image/bmp'\r\n};\r\n\r\nvar ImageExtensionsRegex = /(\\.png|\\.bmp|\\.gif|\\.jpg|\\.jpe|\\.jpg|\\.jpeg)$/;\r\n\r\nvar CanvasExportExtensions = /(jpe|jpg|jpeg|png)/;\r\n\r\n// shortcuts\r\nvar create = function create(name, className) {\r\n\tvar node = document.createElement(name);\r\n\tif (className) {\r\n\t\tnode.className = className;\r\n\t}\r\n\treturn node;\r\n};\r\n\r\n// events\r\nvar addEvents = function addEvents(obj, events, scope) {\r\n\tevents.forEach(function (event) {\r\n\t\tobj.addEventListener(event, scope, false);\r\n\t});\r\n};\r\n\r\nvar removeEvents = function removeEvents(obj, events, scope) {\r\n\tevents.forEach(function (event) {\r\n\t\tobj.removeEventListener(event, scope, false);\r\n\t});\r\n};\r\n\r\nvar getEventOffset = function getEventOffset(e) {\r\n\r\n\tvar event = e.changedTouches ? e.changedTouches[0] : e;\r\n\r\n\t// no event found, quit!\r\n\tif (!event) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// get offset from events\r\n\treturn {\r\n\t\tx: event.pageX,\r\n\t\ty: event.pageY\r\n\t};\r\n};\r\n\r\nvar rotate = function rotate(rect, angle) {\r\n\r\n\tvar cx = .5;\r\n\tvar cy = .5;\r\n\r\n\tvar radians = Math.PI / 180 * angle;\r\n\tvar cos = Math.cos(radians);\r\n\tvar sin = Math.sin(radians);\r\n\r\n\tvar x1 = rect.x;\r\n\tvar y1 = rect.y;\r\n\tvar x2 = rect.x + rect.width;\r\n\tvar y2 = rect.y + rect.height;\r\n\r\n\tvar rx1 = cos * (x1 - cx) + sin * (y1 - cy) + cx;\r\n\tvar ry1 = cos * (y1 - cy) - sin * (x1 - cx) + cy;\r\n\r\n\tvar rx2 = cos * (x2 - cx) + sin * (y2 - cy) + cx;\r\n\tvar ry2 = cos * (y2 - cy) - sin * (x2 - cx) + cy;\r\n\r\n\tif (rx1 <= rx2) {\r\n\t\trect.x = rx1;\r\n\t\trect.width = rx2 - rx1;\r\n\t} else {\r\n\t\trect.x = rx2;\r\n\t\trect.width = rx1 - rx2;\r\n\t}\r\n\r\n\tif (ry1 <= ry2) {\r\n\t\trect.y = ry1;\r\n\t\trect.height = ry2 - ry1;\r\n\t} else {\r\n\t\trect.y = ry2;\r\n\t\trect.height = ry1 - ry2;\r\n\t}\r\n};\r\n\r\nvar getEventOffsetScroll = function getEventOffsetScroll(e) {\r\n\tvar offset = getEventOffset(e);\r\n\toffset.x -= window.pageXOffset || document.documentElement.scrollLeft;\r\n\toffset.y -= window.pageYOffset || document.documentElement.scrollTop;\r\n\treturn offset;\r\n};\r\n\r\nvar lowercaseFirstLetter = function lowercaseFirstLetter(string) {\r\n\treturn string.charAt(0).toLowerCase() + string.slice(1);\r\n};\r\n\r\nvar capitalizeFirstLetter = function capitalizeFirstLetter(string) {\r\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nvar last = function last(array) {\r\n\treturn array[array.length - 1];\r\n};\r\n\r\nvar limit = function limit(value, min, max) {\r\n\treturn Math.max(min, Math.min(max, value));\r\n};\r\n\r\nvar inArray = function inArray(needle, arr) {\r\n\t// is for loop so we can use this method on older browsers to render fallback message\r\n\tif (!arr) {\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < arr.length; i++) {\r\n\t\tif (arr[i] === needle) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nvar send = function send(url, data, requestDecorator, progress, success, err) {\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\r\n\t// if progress callback defined handle progress events\r\n\tif (progress) {\r\n\t\txhr.upload.addEventListener('progress', function (e) {\r\n\t\t\tprogress(e.loaded, e.total);\r\n\t\t});\r\n\t}\r\n\r\n\t// open the request\r\n\txhr.open('POST', url, true);\r\n\r\n\t// if request decorator defined pass XMLHttpRequest instance to decorator\r\n\tif (requestDecorator) {\r\n\t\trequestDecorator(xhr);\r\n\t}\r\n\r\n\t// handle state changes\r\n\txhr.onreadystatechange = function () {\r\n\r\n\t\tif (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {\r\n\r\n\t\t\tvar text = xhr.responseText;\r\n\r\n\t\t\t// if no data returned from server assume success\r\n\t\t\tif (!text.length) {\r\n\t\t\t\tsuccess();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// catch possible PHP content length problem\r\n\t\t\tif (text.indexOf('Content-Length') !== -1) {\r\n\t\t\t\terr('file-too-big');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// if data returned it should be in suggested JSON format\r\n\t\t\tvar obj = void 0;\r\n\t\t\ttry {\r\n\t\t\t\tobj = JSON.parse(xhr.responseText);\r\n\t\t\t} catch (e) {}\r\n\r\n\t\t\t// if is failure response\r\n\t\t\tif ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj.status === 'failure') {\r\n\t\t\t\terr(obj.message);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsuccess(obj || text);\r\n\t\t} else if (xhr.readyState === 4) {\r\n\r\n\t\t\tvar _obj = void 0;\r\n\t\t\ttry {\r\n\t\t\t\t_obj = JSON.parse(xhr.responseText);\r\n\t\t\t} catch (e) {}\r\n\r\n\t\t\t// if is clean failure response\r\n\t\t\tif ((typeof _obj === 'undefined' ? 'undefined' : _typeof(_obj)) === 'object' && _obj.status === 'failure') {\r\n\t\t\t\terr(_obj.message);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\terr('fail');\r\n\t\t}\r\n\t};\r\n\r\n\t// do request\r\n\txhr.send(data);\r\n};\r\n\r\nvar resetTransforms = function resetTransforms(element) {\r\n\tif (!element) {\r\n\t\treturn;\r\n\t}\r\n\telement.style.webkitTransform = '';\r\n\telement.style.transform = '';\r\n};\r\n\r\nvar bytesToMegaBytes = function bytesToMegaBytes(b) {\r\n\treturn b / 1000000;\r\n};\r\n\r\nvar megaBytesToBytes = function megaBytesToBytes(mb) {\r\n\treturn mb * 1000000;\r\n};\r\n\r\nvar getCommonMimeTypes = function getCommonMimeTypes() {\r\n\tvar types = [];\r\n\tvar type = void 0;\r\n\tvar mimeType = void 0;\r\n\tfor (type in MimeTypes) {\r\n\t\tif (!MimeTypes.hasOwnProperty(type)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tmimeType = MimeTypes[type];\r\n\t\tif (types.indexOf(mimeType) == -1) {\r\n\t\t\ttypes.push(mimeType);\r\n\t\t}\r\n\t}\r\n\treturn types;\r\n};\r\n\r\nvar isJPEGMimeType = function isJPEGMimeType(type) {\r\n\treturn type === 'image/jpeg';\r\n};\r\n\r\nvar getExtensionByMimeType = function getExtensionByMimeType(mimetype) {\r\n\tvar type = void 0;\r\n\tfor (type in MimeTypes) {\r\n\t\tif (!MimeTypes.hasOwnProperty(type)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (MimeTypes[type] === mimetype) {\r\n\t\t\treturn type;\r\n\t\t}\r\n\t}\r\n\treturn mimetype;\r\n};\r\n\r\nvar getMimeTypeFromResponseType = function getMimeTypeFromResponseType(responseType) {\r\n\tvar type = void 0;\r\n\tfor (type in MimeTypes) {\r\n\t\tif (!MimeTypes.hasOwnProperty(type)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (responseType.indexOf(MimeTypes[type]) !== -1) {\r\n\t\t\treturn MimeTypes[type];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nvar getFileName = function getFileName(path) {\r\n\treturn path.split('/').pop().split('?').shift();\r\n};\r\n\r\nvar leftPad = function leftPad(value) {\r\n\tvar padding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\r\n\treturn (padding + value).slice(-padding.length);\r\n};\r\n\r\nvar getDateString = function getDateString(date) {\r\n\treturn date.getFullYear() + '-' + leftPad(date.getMonth() + 1, '00') + '-' + leftPad(date.getDate(), '00') + '_' + leftPad(date.getHours(), '00') + '-' + leftPad(date.getMinutes(), '00') + '-' + leftPad(date.getSeconds(), '00');\r\n};\r\n\r\nvar getFileNameByFile = function getFileNameByFile(file) {\r\n\tif (typeof file.name === 'undefined') {\r\n\t\treturn getDateString(new Date()) + '.' + getExtensionByMimeType(getFileTypeByFile(file));\r\n\t}\r\n\treturn file.name;\r\n};\r\n\r\nvar getFileTypeByFile = function getFileTypeByFile(file) {\r\n\treturn file.type || 'image/jpeg';\r\n};\r\n\r\nvar getFileNameWithoutExtension = function getFileNameWithoutExtension(path) {\r\n\tif (typeof path !== 'string') {\r\n\t\treturn getDateString(new Date());\r\n\t}\r\n\tvar name = getFileName(path);\r\n\treturn name.split('.').shift();\r\n};\r\n\r\nvar blobToFile = function blobToFile(blob, name) {\r\n\tif ('lastModified' in File.prototype) {\r\n\t\tblob.lastModified = new Date();\r\n\t} else {\r\n\t\tblob.lastModifiedDate = new Date();\r\n\t}\r\n\tblob.name = name;\r\n\treturn blob;\r\n};\r\n\r\nvar resourceIsFetchURL = function resourceIsFetchURL(resource) {\r\n\treturn (/^fetch\\//.test(resource)\r\n\t);\r\n};\r\n\r\nvar resourceIsBase64Data = function resourceIsBase64Data(resource) {\r\n\treturn (/^data:image/.test(resource)\r\n\t);\r\n};\r\n\r\nvar loadRemoteURL = function loadRemoteURL(fetcher, url, err, cb) {\r\n\r\n\tfetcher = '' + fetcher + (fetcher.indexOf('?') !== -1 ? '&' : '?') + 'url=' + url;\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\txhr.open('GET', fetcher, true);\r\n\txhr.responseType = 'json';\r\n\txhr.onload = function () {\r\n\r\n\t\tif (this.response.status === 'failure') {\r\n\t\t\terr(this.response.message);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tloadURL(this.response.body, cb);\r\n\t};\r\n\r\n\txhr.send();\r\n};\r\n\r\nvar loadURL = function loadURL(url, cb) {\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\txhr.open('GET', url, true);\r\n\txhr.responseType = 'blob';\r\n\txhr.onload = function (e) {\r\n\r\n\t\tvar name = getFileName(url);\r\n\t\tvar type = getMimeTypeFromResponseType(this.response.type);\r\n\r\n\t\tif (!ImageExtensionsRegex.test(name)) {\r\n\t\t\tname += '.' + getExtensionByMimeType(type);\r\n\t\t}\r\n\r\n\t\t// get as file\r\n\t\tvar file = blobToFile(this.response, name);\r\n\r\n\t\t// need to set correct type\r\n\t\tcb(cloneFile(file, type));\r\n\t};\r\n\r\n\txhr.send();\r\n};\r\n\r\nvar base64ToByteString = function base64ToByteString(dataURI) {\r\n\r\n\t// get data part of string (remove data:image/jpeg...,)\r\n\tvar dataPart = dataURI.split(',')[1];\r\n\r\n\t// remove any whitespace as that causes InvalidCharacterError in IE\r\n\tvar dataPartCleaned = dataPart.replace(/\\s/g, '');\r\n\r\n\t// to bytestring\r\n\treturn atob(dataPartCleaned);\r\n};\r\n\r\nvar base64ToArrayBuffer = function base64ToArrayBuffer(dataURI) {\r\n\r\n\tvar byteString = base64ToByteString(dataURI);\r\n\tvar ab = new ArrayBuffer(byteString.length);\r\n\tvar ia = new Uint8Array(ab);\r\n\r\n\tfor (var i = 0; i < byteString.length; i++) {\r\n\t\tia[i] = byteString.charCodeAt(i);\r\n\t}\r\n\treturn ab;\r\n};\r\n\r\nvar base64ToBlob = function base64ToBlob(dataURI, filename) {\r\n\r\n\tvar byteString = base64ToByteString(dataURI);\r\n\tvar ab = new ArrayBuffer(byteString.length);\r\n\tvar ia = new Uint8Array(ab);\r\n\r\n\tfor (var i = 0; i < byteString.length; i++) {\r\n\t\tia[i] = byteString.charCodeAt(i);\r\n\t}\r\n\r\n\tvar mimeType = getMimeTypeFromDataURI(dataURI);\r\n\r\n\tif (typeof filename === 'undefined') {\r\n\t\tfilename = getDateString(new Date()) + '.' + getExtensionByMimeType(mimeType);\r\n\t}\r\n\r\n\treturn blobToFile(createBlob(ab, mimeType), filename);\r\n};\r\n\r\nvar createBlob = function createBlob(data, mimeType) {\r\n\r\n\tvar BB = window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\r\n\r\n\tif (BB) {\r\n\t\tvar bb = new BB();\r\n\t\tbb.append(data);\r\n\t\treturn bb.getBlob(mimeType);\r\n\t}\r\n\r\n\treturn new Blob([data], {\r\n\t\ttype: mimeType\r\n\t});\r\n};\r\n\r\nvar arrayBufferConcat = function arrayBufferConcat(buffers) {\r\n\tvar length = 0;\r\n\tvar buffer = null;\r\n\r\n\tfor (var i in buffers) {\r\n\t\tif (!_arguments.hasOwnProperty(i)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tbuffer = buffers[i];\r\n\t\tlength += buffer.byteLength;\r\n\t}\r\n\r\n\tvar joined = new Uint8Array(length);\r\n\tvar offset = 0;\r\n\r\n\tfor (var _i in buffers) {\r\n\t\tif (!_arguments.hasOwnProperty(_i)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tbuffer = buffers[_i];\r\n\t\tjoined.set(new Uint8Array(buffer), offset);\r\n\t\toffset += buffer.byteLength;\r\n\t}\r\n\r\n\treturn joined.buffer;\r\n};\r\n\r\nvar getImageAsCanvas = function getImageAsCanvas(src, size, callback) {\r\n\r\n\t// only cross origin when it's not base64 data, to prevent errors in Safari\r\n\t// http://stackoverflow.com/questions/31643096/why-does-safari-throw-cors-error-when-setting-base64-data-on-a-crossorigin-an\r\n\tvar crossOrigin = typeof src === 'string' ? src.indexOf('data:image') !== 0 : true;\r\n\r\n\tloadImage.parseMetaData(src, function (meta) {\r\n\r\n\t\tvar options = {\r\n\t\t\tcanvas: true,\r\n\t\t\tcrossOrigin: crossOrigin\r\n\t\t};\r\n\r\n\t\tif (size) {\r\n\t\t\toptions.maxWidth = size.width;\r\n\t\t\toptions.maxHeight = size.height;\r\n\t\t}\r\n\r\n\t\tif (meta.exif) {\r\n\t\t\toptions.orientation = meta.exif.get('Orientation');\r\n\t\t}\r\n\r\n\t\tloadImage(src, function (res) {\r\n\r\n\t\t\tif (res.type === 'error') {\r\n\t\t\t\tcallback();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcallback(res, meta);\r\n\t\t}, options);\r\n\t});\r\n};\r\n\r\nvar getAutoCropRect = function getAutoCropRect(width, height, ratioOut) {\r\n\r\n\tvar x,\r\n\t    y,\r\n\t    w,\r\n\t    h,\r\n\t    ratioIn = height / width;\r\n\r\n\t// if input is portrait and required is landscape\r\n\t// width is portrait width, height is width times outputRatio\r\n\tif (ratioIn < ratioOut) {\r\n\t\th = height;\r\n\t\tw = h / ratioOut;\r\n\t\tx = (width - w) * .5;\r\n\t\ty = 0;\r\n\t}\r\n\r\n\t// if input is landscape and required is portrait\r\n\t// height is landscape height, width is height divided by outputRatio\r\n\telse {\r\n\t\t\tw = width;\r\n\t\t\th = w * ratioOut;\r\n\t\t\tx = 0;\r\n\t\t\ty = (height - h) * .5;\r\n\t\t}\r\n\r\n\treturn {\r\n\t\tx: x,\r\n\t\ty: y,\r\n\t\theight: h,\r\n\t\twidth: w\r\n\t};\r\n};\r\n\r\nvar transformCanvas = function transformCanvas(canvas) {\r\n\tvar transforms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\tvar cb = arguments[2];\r\n\r\n\r\n\tvar result = create('canvas');\r\n\r\n\tvar rotation = transforms.rotation,\r\n\t    crop = transforms.crop,\r\n\t    size = transforms.size,\r\n\t    filters = transforms.filters,\r\n\t    minSize = transforms.minSize;\r\n\r\n\t// do crop transforms\r\n\r\n\tif (crop) {\r\n\r\n\t\t// do crop\r\n\t\tvar isTilted = rotation % 180 !== 0;\r\n\t\tvar space = {\r\n\t\t\twidth: isTilted ? canvas.height : canvas.width,\r\n\t\t\theight: isTilted ? canvas.width : canvas.height\r\n\t\t};\r\n\r\n\t\t// limit crop to size of canvas else safari might return transparent image\r\n\t\tif (crop.x < 0) {\r\n\t\t\tcrop.x = 0;\r\n\t\t}\r\n\r\n\t\tif (crop.y < 0) {\r\n\t\t\tcrop.y = 0;\r\n\t\t}\r\n\r\n\t\tif (crop.width > space.width) {\r\n\t\t\tcrop.width = space.width;\r\n\t\t}\r\n\r\n\t\tif (crop.height > space.height) {\r\n\t\t\tcrop.height = space.height;\r\n\t\t}\r\n\r\n\t\tif (crop.y + crop.height > space.height) {\r\n\t\t\tcrop.y = Math.max(0, space.height - crop.height);\r\n\t\t}\r\n\r\n\t\tif (crop.x + crop.width > space.width) {\r\n\t\t\tcrop.x = Math.max(0, space.width - crop.width);\r\n\t\t}\r\n\r\n\t\t// crop offsets in percentages\r\n\t\tvar px = crop.x / space.width;\r\n\t\tvar py = crop.y / space.height;\r\n\t\tvar pw = crop.width / space.width;\r\n\t\tvar ph = crop.height / space.height;\r\n\r\n\t\t// resize canvas to the final crop result size\r\n\t\tresult.width = crop.width;\r\n\t\tresult.height = crop.height;\r\n\r\n\t\t// draw the crop\r\n\t\tvar ctx = result.getContext('2d');\r\n\r\n\t\tif (rotation === 90) {\r\n\r\n\t\t\tctx.translate(result.width * .5, result.height * .5);\r\n\t\t\tctx.rotate(-90 * Math.PI / 180);\r\n\t\t\tctx.drawImage(canvas,\r\n\r\n\t\t\t// source rectangle (crop area)\r\n\t\t\t(1 - py) * canvas.width - canvas.width * ph, crop.x, crop.height, crop.width,\r\n\r\n\t\t\t// target area (cover)\r\n\t\t\t-result.height * .5, -result.width * .5, result.height, result.width);\r\n\t\t} else if (rotation === 180) {\r\n\r\n\t\t\tctx.translate(result.width * .5, result.height * .5);\r\n\t\t\tctx.rotate(-180 * Math.PI / 180);\r\n\t\t\tctx.drawImage(canvas,\r\n\r\n\t\t\t// source rectangle (crop area)\r\n\t\t\t(1 - (px + pw)) * space.width, (1 - (py + ph)) * space.height, pw * space.width, ph * space.height,\r\n\r\n\t\t\t// target area (cover)\r\n\t\t\t-result.width * .5, -result.height * .5, result.width, result.height);\r\n\t\t} else if (rotation === 270) {\r\n\r\n\t\t\tctx.translate(result.width * .5, result.height * .5);\r\n\t\t\tctx.rotate(-270 * Math.PI / 180);\r\n\t\t\tctx.drawImage(canvas,\r\n\r\n\t\t\t// source rectangle (crop area)\r\n\t\t\tcrop.y, (1 - px) * canvas.height - canvas.height * pw, crop.height, crop.width,\r\n\r\n\t\t\t// target area (cover)\r\n\t\t\t-result.height * .5, -result.width * .5, result.height, result.width);\r\n\t\t} else {\r\n\r\n\t\t\tctx.drawImage(canvas,\r\n\r\n\t\t\t// source rectangle (crop area)\r\n\t\t\tcrop.x, crop.y, crop.width, crop.height,\r\n\r\n\t\t\t// target area (cover)\r\n\t\t\t0, 0, result.width, result.height);\r\n\t\t}\r\n\t}\r\n\r\n\t// do size transforms\r\n\tif (size) {\r\n\r\n\t\tvar scalarX = size.width / result.width;\r\n\t\tvar scalarY = size.height / result.height;\r\n\t\tvar scalar = Math.min(scalarX, scalarY);\r\n\r\n\t\tscaleCanvas(result, scalar, size, minSize);\r\n\r\n\t\t// sharpen result\r\n\t\tif (filters.sharpen > 0) {\r\n\t\t\tfilter(result, sharpen(filters.sharpen));\r\n\t\t}\r\n\t}\r\n\r\n\tcb(result);\r\n};\r\n\r\nfunction scaleCanvas(canvas, scalar, bounds, min) {\r\n\r\n\t// if not scaling down, bail out\r\n\tif (scalar >= 1) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar targetWidth = Math.max(min.width, Math.min(bounds.width, Math.round(canvas.width * scalar)));\r\n\tvar targetHeight = Math.max(min.height, Math.min(bounds.height, Math.round(canvas.height * scalar)));\r\n\tvar w = canvas.width;\r\n\tvar h = canvas.height;\r\n\tvar tmp = canvas;\r\n\tvar c = void 0;\r\n\tvar ctx = void 0;\r\n\r\n\twhile (w > targetWidth && h > targetHeight) {\r\n\r\n\t\tc = document.createElement('canvas');\r\n\t\tw = Math.round(tmp.width * .5);\r\n\t\th = Math.round(tmp.height * .5);\r\n\r\n\t\tif (w < targetWidth) {\r\n\t\t\tw = targetWidth;\r\n\t\t}\r\n\r\n\t\tif (h < targetHeight) {\r\n\t\t\th = targetHeight;\r\n\t\t}\r\n\r\n\t\tc.width = w;\r\n\t\tc.height = h;\r\n\t\tctx = c.getContext('2d');\r\n\t\tctx.drawImage(tmp, 0, 0, w, h);\r\n\r\n\t\ttmp = cloneCanvas(c);\r\n\t}\r\n\r\n\tcanvas.width = targetWidth;\r\n\tcanvas.height = targetHeight;\r\n\r\n\tctx = canvas.getContext('2d');\r\n\tctx.drawImage(tmp, 0, 0, targetWidth, targetHeight);\r\n}\r\n\r\nvar getPixels = function getPixels(canvas) {\r\n\tvar ctx = canvas.getContext('2d');\r\n\treturn ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n};\r\n\r\nvar filter = function filter(canvas, _filter) {\r\n\tvar ctx = canvas.getContext('2d');\r\n\tctx.putImageData(_filter(getPixels(canvas), canvas.width, canvas.height), 0, 0);\r\n};\r\n\r\nvar createImageData = function createImageData(w, h, pixels) {\r\n\tvar c = document.createElement('canvas');\r\n\tc.width = w;\r\n\tc.height = h;\r\n\tvar ctx = c.getContext('2d');\r\n\tvar data = ctx.createImageData(c.width, c.height);\r\n\tif (pixels) {\r\n\t\tdata.set(pixels.data);\r\n\t}\r\n\treturn data;\r\n};\r\n\r\nvar sharpen = function sharpen(mix) {\r\n\r\n\treturn function (pixels, w, h) {\r\n\r\n\t\tvar weights = [0, -1, 0, -1, 5, -1, 0, -1, 0],\r\n\t\t    katet = Math.round(Math.sqrt(weights.length)),\r\n\t\t    half = katet * 0.5 | 0,\r\n\t\t    dstData = createImageData(w, h),\r\n\t\t    dstBuff = dstData.data,\r\n\t\t    srcBuff = pixels.data,\r\n\t\t    y = h,\r\n\t\t    x = void 0;\r\n\r\n\t\twhile (y--) {\r\n\r\n\t\t\tx = w;\r\n\r\n\t\t\twhile (x--) {\r\n\r\n\t\t\t\tvar sy = y,\r\n\t\t\t\t    sx = x,\r\n\t\t\t\t    dstOff = (y * w + x) * 4,\r\n\t\t\t\t    r = 0,\r\n\t\t\t\t    g = 0,\r\n\t\t\t\t    b = 0,\r\n\t\t\t\t    a = 0;\r\n\r\n\t\t\t\tfor (var cy = 0; cy < katet; cy++) {\r\n\t\t\t\t\tfor (var cx = 0; cx < katet; cx++) {\r\n\r\n\t\t\t\t\t\tvar scy = sy + cy - half;\r\n\t\t\t\t\t\tvar scx = sx + cx - half;\r\n\r\n\t\t\t\t\t\tif (scy >= 0 && scy < h && scx >= 0 && scx < w) {\r\n\r\n\t\t\t\t\t\t\tvar srcOff = (scy * w + scx) * 4;\r\n\t\t\t\t\t\t\tvar wt = weights[cy * katet + cx];\r\n\r\n\t\t\t\t\t\t\tr += srcBuff[srcOff] * wt;\r\n\t\t\t\t\t\t\tg += srcBuff[srcOff + 1] * wt;\r\n\t\t\t\t\t\t\tb += srcBuff[srcOff + 2] * wt;\r\n\t\t\t\t\t\t\ta += srcBuff[srcOff + 3] * wt;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdstBuff[dstOff] = r * mix + srcBuff[dstOff] * (1 - mix);\r\n\t\t\t\tdstBuff[dstOff + 1] = g * mix + srcBuff[dstOff + 1] * (1 - mix);\r\n\t\t\t\tdstBuff[dstOff + 2] = b * mix + srcBuff[dstOff + 2] * (1 - mix);\r\n\t\t\t\tdstBuff[dstOff + 3] = srcBuff[dstOff + 3];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn dstData;\r\n\t};\r\n};\r\n\r\nvar sizeDist = function sizeDist(rect, canvas) {\r\n\r\n\tvar dx = Math.abs(rect.width - canvas.width);\r\n\tvar dy = Math.abs(rect.height - canvas.height);\r\n\r\n\treturn Math.max(dx, dy);\r\n};\r\n\r\nvar cloneCanvas = function cloneCanvas(original) {\r\n\treturn cloneCanvasScaled(original, 1);\r\n};\r\n\r\nvar cloneCanvasScaled = function cloneCanvasScaled(original, scalar) {\r\n\r\n\tif (!original) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar duplicate = document.createElement('canvas');\r\n\tvar ctx = duplicate.getContext('2d');\r\n\tduplicate.width = original.width;\r\n\tduplicate.height = original.height;\r\n\tctx.drawImage(original, 0, 0);\r\n\tif (scalar > 0 && scalar != 1) {\r\n\t\tscaleCanvas(duplicate, scalar, {\r\n\t\t\twidth: Math.round(original.width * scalar),\r\n\t\t\theight: Math.round(original.height * scalar)\r\n\t\t}, {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0\r\n\t\t});\r\n\t}\r\n\r\n\treturn duplicate;\r\n};\r\n\r\nvar canvasHasDimensions = function canvasHasDimensions(canvas) {\r\n\treturn canvas.width && canvas.height;\r\n};\r\n\r\nvar copyCanvas = function copyCanvas(original, destination) {\r\n\r\n\tvar ctx = destination.getContext('2d');\r\n\tif (canvasHasDimensions(destination)) {\r\n\t\tctx.drawImage(original, 0, 0, destination.width, destination.height);\r\n\t} else {\r\n\t\tdestination.width = original.width;\r\n\t\tdestination.height = original.height;\r\n\t\tctx.drawImage(original, 0, 0);\r\n\t}\r\n};\r\n\r\nvar clearCanvas = function clearCanvas(canvas) {\r\n\tvar ctx = canvas.getContext('2d');\r\n\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n};\r\n\r\nvar blurCanvas = function blurCanvas(canvas) {\r\n\tstackBlur(canvas, 0, 0, canvas.width, canvas.height, 3);\r\n};\r\n\r\nvar covers = function covers(image, rect) {\r\n\treturn parseInt(image.width, 10) >= rect.width && parseInt(image.height, 10) >= rect.height;\r\n};\r\n\r\nvar scaleRect = function scaleRect(rect, w, h) {\r\n\treturn {\r\n\t\tx: rect.x * w,\r\n\t\ty: rect.y * h,\r\n\t\twidth: rect.width * w,\r\n\t\theight: rect.height * h\r\n\t};\r\n};\r\n\r\nvar divideRect = function divideRect(rect, w, h) {\r\n\treturn {\r\n\t\tx: rect.x / w,\r\n\t\ty: rect.y / h,\r\n\t\twidth: rect.width / w,\r\n\t\theight: rect.height / h\r\n\t};\r\n};\r\n\r\nvar resetFileInput = function resetFileInput(input) {\r\n\r\n\t// no value, no need to reset\r\n\tif (!input || input.value === '') {\r\n\t\treturn;\r\n\t}\r\n\r\n\ttry {\r\n\t\t// for modern browsers\r\n\t\tinput.value = '';\r\n\t} catch (err) {}\r\n\r\n\t// for IE10\r\n\tif (input.value) {\r\n\r\n\t\t// quickly append input to temp form and reset form\r\n\t\tvar form = document.createElement('form');\r\n\t\tvar parentNode = input.parentNode;\r\n\t\tvar ref = input.nextSibling;\r\n\t\tform.appendChild(input);\r\n\t\tform.reset();\r\n\r\n\t\t// re-inject input where it originally was\r\n\t\tif (ref) {\r\n\t\t\tparentNode.insertBefore(input, ref);\r\n\t\t} else {\r\n\t\t\tparentNode.appendChild(input);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar clone = function clone(obj) {\r\n\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) {\r\n\t\treturn JSON.parse(JSON.stringify(obj));\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nvar cloneFile = function cloneFile(file) {\r\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n\r\n\tif (!file) {\r\n\t\treturn null;\r\n\t}\r\n\tvar dupe = file.slice(0, file.size, type || file.type);\r\n\tdupe.name = file.name;\r\n\r\n\tif ('lastModified' in File.prototype && file.lastModified) {\r\n\t\tdupe.lastModified = new Date(file.lastModified);\r\n\t} else if (file.lastModifiedDate) {\r\n\t\tdupe.lastModifiedDate = new Date(file.lastModifiedDate);\r\n\t}\r\n\treturn dupe;\r\n};\r\n\r\nvar cloneData = function cloneData(obj) {\r\n\tvar dupe = clone(obj);\r\n\tdupe.input.file = cloneFile(obj.input.file);\r\n\tdupe.output.image = cloneCanvas(obj.output.image);\r\n\treturn dupe;\r\n};\r\n\r\n/**\r\n * @param image\r\n * @param type\r\n * @param jpegCompression - value between 0 and 100 or undefined/null to use default compression\r\n * @returns {*}\r\n */\r\nvar toDataURL = function toDataURL(image, type, jpegCompression) {\r\n\tif (!image || !type) {\r\n\t\treturn null;\r\n\t}\r\n\treturn image.toDataURL(type, isJPEGMimeType(type) && typeof jpegCompression === 'number' ? jpegCompression / 100 : undefined);\r\n};\r\n\r\nvar getMimeTypeFromDataURI = function getMimeTypeFromDataURI(dataUri) {\r\n\tif (!dataUri) {\r\n\t\treturn null;\r\n\t}\r\n\tvar matches = dataUri.substr(0, 16).match(/^.+;/);\r\n\tif (matches.length) {\r\n\t\treturn matches[0].substring(5, matches[0].length - 1);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nvar flattenData = function flattenData(obj) {\r\n\tvar props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n\tvar jpegCompression = arguments[2];\r\n\tvar forcedType = arguments[3];\r\n\tvar async = arguments[4];\r\n\r\n\r\n\tvar data = {\r\n\t\tserver: clone(obj.server),\r\n\t\tmeta: clone(obj.meta),\r\n\t\tinput: {\r\n\t\t\tname: obj.input.name,\r\n\t\t\ttype: obj.input.type,\r\n\t\t\tsize: obj.input.size,\r\n\t\t\twidth: obj.input.width,\r\n\t\t\theight: obj.input.height,\r\n\t\t\tfield: obj.input.field\r\n\t\t}\r\n\t};\r\n\r\n\tif (inArray('input', props) && !async) {\r\n\t\tdata.input.image = toDataURL(obj.input.image, obj.input.type);\r\n\t}\r\n\r\n\tif (inArray('output', props)) {\r\n\r\n\t\tdata.output = {\r\n\t\t\tname: forcedType ? getFileNameWithoutExtension(obj.input.name) + '.' + forcedType : obj.input.name,\r\n\t\t\ttype: MimeTypes[forcedType] || obj.input.type,\r\n\t\t\twidth: obj.output.width,\r\n\t\t\theight: obj.output.height\r\n\t\t};\r\n\r\n\t\tdata.output.image = toDataURL(obj.output.image, data.output.type, jpegCompression);\r\n\t\tdata.output.type = getMimeTypeFromDataURI(data.output.image);\r\n\r\n\t\t// browser problem:\r\n\t\t// if output is of type png and input was of type jpeg we need to fix extension of filename\r\n\t\t// so instead of testing the above situation we just always fix extension when handling PNGs\r\n\t\tif (data.output.type === 'image/png') {\r\n\t\t\tdata.output.name = getFileNameWithoutExtension(data.input.name) + '.png';\r\n\t\t}\r\n\t}\r\n\r\n\tif (inArray('actions', props)) {\r\n\t\tdata.actions = clone(obj.actions);\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\nvar downloadCanvas = function downloadCanvas(data, jpegCompression, forcedType) {\r\n\r\n\tvar canvas = data.output.image;\r\n\tvar filename = forcedType ? getFileNameWithoutExtension(data.input.name) + '.' + forcedType : data.input.name;\r\n\tvar type = MimeTypes[forcedType] || data.input.type;\r\n\r\n\t// browser problem:\r\n\t// if output is of type png and input was of type jpeg we need to fix extension of filename\r\n\t// so instead of testing the above situation we just always fix extension when handling PNGs\r\n\tif (type === 'image/png') {\r\n\t\tfilename = getFileNameWithoutExtension(data.input.name) + '.png';\r\n\t}\r\n\r\n\tcanvas.toBlob(function (blob) {\r\n\r\n\t\tif ('msSaveBlob' in window.navigator) {\r\n\t\t\twindow.navigator.msSaveBlob(blob, filename);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar url = (window.URL || window.webkitURL).createObjectURL(blob);\r\n\r\n\t\t// setup hidden link\r\n\t\tvar link = create('a');\r\n\t\tlink.style.display = 'none';\r\n\t\tlink.download = filename;\r\n\t\tlink.href = url;\r\n\r\n\t\t// attach to DOM otherwise this does not work in Firefox\r\n\t\tdocument.body.appendChild(link);\r\n\r\n\t\t// fire click\r\n\t\tlink.click();\r\n\r\n\t\t// delay on remove otherwise does not work in Firefox\r\n\t\tsetTimeout(function () {\r\n\t\t\tdocument.body.removeChild(link);\r\n\t\t\t(window.URL || window.webkitURL).revokeObjectURL(url);\r\n\t\t}, 0);\r\n\t}, type, typeof jpegCompression === 'number' ? jpegCompression / 100 : undefined);\r\n};\r\n\r\nvar toggleDisplayBySelector = function toggleDisplayBySelector(selector, enabled, root) {\r\n\tvar node = root.querySelector(selector);\r\n\tif (!node) {\r\n\t\treturn;\r\n\t}\r\n\tnode.style.display = enabled ? '' : 'none';\r\n};\r\n\r\nvar nodeListToArray = function nodeListToArray(nl) {\r\n\treturn Array.prototype.slice.call(nl);\r\n};\r\n\r\nvar removeElement = function removeElement(el) {\r\n\tel.parentNode.removeChild(el);\r\n};\r\n\r\nvar wrap = function wrap(element) {\r\n\tvar wrapper = create('div');\r\n\tif (element.parentNode) {\r\n\t\tif (element.nextSibling) {\r\n\t\t\telement.parentNode.insertBefore(wrapper, element.nextSibling);\r\n\t\t} else {\r\n\t\t\telement.parentNode.appendChild(wrapper);\r\n\t\t}\r\n\t}\r\n\twrapper.appendChild(element);\r\n\treturn wrapper;\r\n};\r\n\r\nvar polarToCartesian = function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n\tvar angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\r\n\r\n\treturn {\r\n\t\tx: centerX + radius * Math.cos(angleInRadians),\r\n\t\ty: centerY + radius * Math.sin(angleInRadians)\r\n\t};\r\n};\r\n\r\nvar describeArc = function describeArc(x, y, radius, startAngle, endAngle) {\r\n\r\n\tvar start = polarToCartesian(x, y, radius, endAngle);\r\n\tvar end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n\tvar arcSweep = endAngle - startAngle <= 180 ? '0' : '1';\r\n\r\n\tvar d = ['M', start.x, start.y, 'A', radius, radius, 0, arcSweep, 0, end.x, end.y].join(' ');\r\n\r\n\treturn d;\r\n};\r\n\r\nvar percentageArc = function percentageArc(x, y, radius, p) {\r\n\treturn describeArc(x, y, radius, 0, p * 360);\r\n};\r\nvar CropArea = function () {\r\n\r\n\tvar resizers = {\r\n\t\t'n': function n(rect, offset, space, ratio) {\r\n\r\n\t\t\tvar t, r, b, l, w, h, p, d;\r\n\r\n\t\t\t// bottom is fixed\r\n\t\t\tb = rect.y + rect.height;\r\n\r\n\t\t\t// intended top\r\n\t\t\tt = limit(offset.y, 0, b);\r\n\r\n\t\t\t// if is too small vertically\r\n\t\t\tif (b - t < space.min.height) {\r\n\t\t\t\tt = b - space.min.height;\r\n\t\t\t}\r\n\r\n\t\t\t// if should scale by ratio, pick width by ratio of new height\r\n\t\t\tw = ratio ? (b - t) / ratio : rect.width;\r\n\r\n\t\t\t// check if has fallen below min width or height\r\n\t\t\tif (w < space.min.width) {\r\n\t\t\t\tw = space.min.width;\r\n\t\t\t\tt = b - w * ratio;\r\n\t\t\t}\r\n\r\n\t\t\t// add half to left and half to right edge\r\n\t\t\tp = (w - rect.width) * .5;\r\n\t\t\tl = rect.x - p;\r\n\t\t\tr = rect.x + rect.width + p;\r\n\r\n\t\t\t// check if any of the edges has moved out of the available space, if so,\r\n\t\t\t// set max size of rectangle from original position\r\n\t\t\tif (l < 0 || r > space.width) {\r\n\r\n\t\t\t\t// smallest distance to edge of space\r\n\t\t\t\td = Math.min(rect.x, space.width - (rect.x + rect.width));\r\n\r\n\t\t\t\t// new left and right offsets\r\n\t\t\t\tl = rect.x - d;\r\n\t\t\t\tr = rect.x + rect.width + d;\r\n\r\n\t\t\t\t// resulting width\r\n\t\t\t\tw = r - l;\r\n\r\n\t\t\t\t// resulting height based on ratio\r\n\t\t\t\th = w * ratio;\r\n\r\n\t\t\t\t// new top position\r\n\t\t\t\tt = b - h;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: l,\r\n\t\t\t\ty: t,\r\n\t\t\t\twidth: r - l,\r\n\t\t\t\theight: b - t\r\n\t\t\t};\r\n\t\t},\r\n\t\t's': function s(rect, offset, space, ratio) {\r\n\r\n\t\t\tvar t, r, b, l, w, h, p, d;\r\n\r\n\t\t\t// top is fixed\r\n\t\t\tt = rect.y;\r\n\r\n\t\t\t// intended bottom\r\n\t\t\tb = limit(offset.y, t, space.height);\r\n\r\n\t\t\t// if is too small vertically\r\n\t\t\tif (b - t < space.min.height) {\r\n\t\t\t\tb = t + space.min.height;\r\n\t\t\t}\r\n\r\n\t\t\t// if should scale by ratio, pick width by ratio of new height\r\n\t\t\tw = ratio ? (b - t) / ratio : rect.width;\r\n\r\n\t\t\t// check if has fallen below min width or height\r\n\t\t\tif (w < space.min.width) {\r\n\t\t\t\tw = space.min.width;\r\n\t\t\t\tb = t + w * ratio;\r\n\t\t\t}\r\n\r\n\t\t\t// add half to left and half to right edge\r\n\t\t\tp = (w - rect.width) * .5;\r\n\t\t\tl = rect.x - p;\r\n\t\t\tr = rect.x + rect.width + p;\r\n\r\n\t\t\t// check if any of the edges has moved out of the available space, if so,\r\n\t\t\t// set max size of rectangle from original position\r\n\t\t\tif (l < 0 || r > space.width) {\r\n\r\n\t\t\t\t// smallest distance to edge of space\r\n\t\t\t\td = Math.min(rect.x, space.width - (rect.x + rect.width));\r\n\r\n\t\t\t\t// new left and right offsets\r\n\t\t\t\tl = rect.x - d;\r\n\t\t\t\tr = rect.x + rect.width + d;\r\n\r\n\t\t\t\t// resulting width\r\n\t\t\t\tw = r - l;\r\n\r\n\t\t\t\t// resulting height based on ratio\r\n\t\t\t\th = w * ratio;\r\n\r\n\t\t\t\t// new bottom position\r\n\t\t\t\tb = t + h;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: l,\r\n\t\t\t\ty: t,\r\n\t\t\t\twidth: r - l,\r\n\t\t\t\theight: b - t\r\n\t\t\t};\r\n\t\t},\r\n\t\t'e': function e(rect, offset, space, ratio) {\r\n\r\n\t\t\tvar t, r, b, l, w, h, p, d;\r\n\r\n\t\t\t// left is fixed\r\n\t\t\tl = rect.x;\r\n\r\n\t\t\t// intended right edge\r\n\t\t\tr = limit(offset.x, l, space.width);\r\n\r\n\t\t\t// if is too small vertically\r\n\t\t\tif (r - l < space.min.width) {\r\n\t\t\t\tr = l + space.min.width;\r\n\t\t\t}\r\n\r\n\t\t\t// if should scale by ratio, pick height by ratio of new width\r\n\t\t\th = ratio ? (r - l) * ratio : rect.height;\r\n\r\n\t\t\t// check if has fallen below min width or height\r\n\t\t\tif (h < space.min.height) {\r\n\t\t\t\th = space.min.height;\r\n\t\t\t\tr = l + h / ratio;\r\n\t\t\t}\r\n\r\n\t\t\t// add half to top and bottom\r\n\t\t\tp = (h - rect.height) * .5;\r\n\t\t\tt = rect.y - p;\r\n\t\t\tb = rect.y + rect.height + p;\r\n\r\n\t\t\t// check if any of the edges has moved out of the available space, if so,\r\n\t\t\t// set max size of rectangle from original position\r\n\t\t\tif (t < 0 || b > space.height) {\r\n\r\n\t\t\t\t// smallest distance to edge of space\r\n\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\r\n\r\n\t\t\t\t// new top and bottom offsets\r\n\t\t\t\tt = rect.y - d;\r\n\t\t\t\tb = rect.y + rect.height + d;\r\n\r\n\t\t\t\t// resulting height\r\n\t\t\t\th = b - t;\r\n\r\n\t\t\t\t// resulting width based on ratio\r\n\t\t\t\tw = h / ratio;\r\n\r\n\t\t\t\t// new right position\r\n\t\t\t\tr = l + w;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: l,\r\n\t\t\t\ty: t,\r\n\t\t\t\twidth: r - l,\r\n\t\t\t\theight: b - t\r\n\t\t\t};\r\n\t\t},\r\n\t\t'w': function w(rect, offset, space, ratio) {\r\n\r\n\t\t\tvar t, r, b, l, w, h, p, d;\r\n\r\n\t\t\t// right is fixed\r\n\t\t\tr = rect.x + rect.width;\r\n\r\n\t\t\t// intended left edge\r\n\t\t\tl = limit(offset.x, 0, r);\r\n\r\n\t\t\t// if is too small vertically\r\n\t\t\tif (r - l < space.min.width) {\r\n\t\t\t\tl = r - space.min.width;\r\n\t\t\t}\r\n\r\n\t\t\t// if should scale by ratio, pick height by ratio of new width\r\n\t\t\th = ratio ? (r - l) * ratio : rect.height;\r\n\r\n\t\t\t// check if has fallen below min width or height\r\n\t\t\tif (h < space.min.height) {\r\n\t\t\t\th = space.min.height;\r\n\t\t\t\tl = r - h / ratio;\r\n\t\t\t}\r\n\r\n\t\t\t// add half to top and bottom\r\n\t\t\tp = (h - rect.height) * .5;\r\n\t\t\tt = rect.y - p;\r\n\t\t\tb = rect.y + rect.height + p;\r\n\r\n\t\t\t// check if any of the edges has moved out of the available space, if so,\r\n\t\t\t// set max size of rectangle from original position\r\n\t\t\tif (t < 0 || b > space.height) {\r\n\r\n\t\t\t\t// smallest distance to edge of space\r\n\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\r\n\r\n\t\t\t\t// new top and bottom offsets\r\n\t\t\t\tt = rect.y - d;\r\n\t\t\t\tb = rect.y + rect.height + d;\r\n\r\n\t\t\t\t// resulting height\r\n\t\t\t\th = b - t;\r\n\r\n\t\t\t\t// resulting width based on ratio\r\n\t\t\t\tw = h / ratio;\r\n\r\n\t\t\t\t// new right position\r\n\t\t\t\tl = r - w;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: l,\r\n\t\t\t\ty: t,\r\n\t\t\t\twidth: r - l,\r\n\t\t\t\theight: b - t\r\n\t\t\t};\r\n\t\t},\r\n\t\t'ne': function ne(rect, offset, space, ratio) {\r\n\r\n\t\t\tvar t, r, b, l, w, h, d;\r\n\r\n\t\t\t// left and bottom are fixed\r\n\t\t\tl = rect.x;\r\n\t\t\tb = rect.y + rect.height;\r\n\r\n\t\t\t// intended right edge\r\n\t\t\tr = limit(offset.x, l, space.width);\r\n\r\n\t\t\t// if is too small vertically\r\n\t\t\tif (r - l < space.min.width) {\r\n\t\t\t\tr = l + space.min.width;\r\n\t\t\t}\r\n\r\n\t\t\t// if should scale by ratio, pick height by ratio of new width\r\n\t\t\th = ratio ? (r - l) * ratio : limit(b - offset.y, space.min.height, b);\r\n\r\n\t\t\t// check if has fallen below min width or height\r\n\t\t\tif (h < space.min.height) {\r\n\t\t\t\th = space.min.height;\r\n\t\t\t\tr = l + h / ratio;\r\n\t\t\t}\r\n\r\n\t\t\t// add height difference with original height to top\r\n\t\t\tt = rect.y - (h - rect.height);\r\n\r\n\t\t\t// check if any of the edges has moved out of the available space, if so,\r\n\t\t\t// set max size of rectangle from original position\r\n\t\t\tif (t < 0 || b > space.height) {\r\n\r\n\t\t\t\t// smallest distance to edge of space\r\n\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\r\n\r\n\t\t\t\t// new top and bottom offsets\r\n\t\t\t\tt = rect.y - d;\r\n\r\n\t\t\t\t// resulting height\r\n\t\t\t\th = b - t;\r\n\r\n\t\t\t\t// resulting width based on ratio\r\n\t\t\t\tw = h / ratio;\r\n\r\n\t\t\t\t// new right position\r\n\t\t\t\tr = l + w;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: l,\r\n\t\t\t\ty: t,\r\n\t\t\t\twidth: r - l,\r\n\t\t\t\theight: b - t\r\n\t\t\t};\r\n\t\t},\r\n\t\t'se': function se(rect, offset, space, ratio) {\r\n\r\n\t\t\tvar t, r, b, l, w, h, d;\r\n\r\n\t\t\t// left and top are fixed\r\n\t\t\tl = rect.x;\r\n\t\t\tt = rect.y;\r\n\r\n\t\t\t// intended right edge\r\n\t\t\tr = limit(offset.x, l, space.width);\r\n\r\n\t\t\t// if is too small vertically\r\n\t\t\tif (r - l < space.min.width) {\r\n\t\t\t\tr = l + space.min.width;\r\n\t\t\t}\r\n\r\n\t\t\t// if should scale by ratio, pick height by ratio of new width\r\n\t\t\th = ratio ? (r - l) * ratio : limit(offset.y - rect.y, space.min.height, space.height - t);\r\n\r\n\t\t\t// check if has fallen below min width or height\r\n\t\t\tif (h < space.min.height) {\r\n\t\t\t\th = space.min.height;\r\n\t\t\t\tr = l + h / ratio;\r\n\t\t\t}\r\n\r\n\t\t\t// add height difference with original height to bottom\r\n\t\t\tb = rect.y + rect.height + (h - rect.height);\r\n\r\n\t\t\t// check if any of the edges has moved out of the available space, if so,\r\n\t\t\t// set max size of rectangle from original position\r\n\t\t\tif (t < 0 || b > space.height) {\r\n\r\n\t\t\t\t// smallest distance to edge of space\r\n\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\r\n\r\n\t\t\t\t// new bottom offset\r\n\t\t\t\tb = rect.y + rect.height + d;\r\n\r\n\t\t\t\t// resulting height\r\n\t\t\t\th = b - t;\r\n\r\n\t\t\t\t// resulting width based on ratio\r\n\t\t\t\tw = h / ratio;\r\n\r\n\t\t\t\t// new right position\r\n\t\t\t\tr = l + w;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: l,\r\n\t\t\t\ty: t,\r\n\t\t\t\twidth: r - l,\r\n\t\t\t\theight: b - t\r\n\t\t\t};\r\n\t\t},\r\n\t\t'sw': function sw(rect, offset, space, ratio) {\r\n\r\n\t\t\tvar t, r, b, l, w, h, d;\r\n\r\n\t\t\t// right and top are fixed\r\n\t\t\tr = rect.x + rect.width;\r\n\t\t\tt = rect.y;\r\n\r\n\t\t\t// intended left edge\r\n\t\t\tl = limit(offset.x, 0, r);\r\n\r\n\t\t\t// if is too small vertically\r\n\t\t\tif (r - l < space.min.width) {\r\n\t\t\t\tl = r - space.min.width;\r\n\t\t\t}\r\n\r\n\t\t\t// if should scale by ratio, pick height by ratio of new width\r\n\t\t\th = ratio ? (r - l) * ratio : limit(offset.y - rect.y, space.min.height, space.height - t);\r\n\r\n\t\t\t// check if has fallen below min width or height\r\n\t\t\tif (h < space.min.height) {\r\n\t\t\t\th = space.min.height;\r\n\t\t\t\tl = r - h / ratio;\r\n\t\t\t}\r\n\r\n\t\t\t// add height difference with original height to bottom\r\n\t\t\tb = rect.y + rect.height + (h - rect.height);\r\n\r\n\t\t\t// check if any of the edges has moved out of the available space, if so,\r\n\t\t\t// set max size of rectangle from original position\r\n\t\t\tif (t < 0 || b > space.height) {\r\n\r\n\t\t\t\t// smallest distance to edge of space\r\n\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\r\n\r\n\t\t\t\t// new bottom offset\r\n\t\t\t\tb = rect.y + rect.height + d;\r\n\r\n\t\t\t\t// resulting height\r\n\t\t\t\th = b - t;\r\n\r\n\t\t\t\t// resulting width based on ratio\r\n\t\t\t\tw = h / ratio;\r\n\r\n\t\t\t\t// new left position\r\n\t\t\t\tl = r - w;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: l,\r\n\t\t\t\ty: t,\r\n\t\t\t\twidth: r - l,\r\n\t\t\t\theight: b - t\r\n\t\t\t};\r\n\t\t},\r\n\t\t'nw': function nw(rect, offset, space, ratio) {\r\n\r\n\t\t\tvar t, r, b, l, w, h, d;\r\n\r\n\t\t\t// right and bottom are fixed\r\n\t\t\tr = rect.x + rect.width;\r\n\t\t\tb = rect.y + rect.height;\r\n\r\n\t\t\t// intended left edge\r\n\t\t\tl = limit(offset.x, 0, r);\r\n\r\n\t\t\t// if is too small vertically\r\n\t\t\tif (r - l < space.min.width) {\r\n\t\t\t\tl = r - space.min.width;\r\n\t\t\t}\r\n\r\n\t\t\t// if should scale by ratio, pick height by ratio of new width\r\n\t\t\th = ratio ? (r - l) * ratio : limit(b - offset.y, space.min.height, b);\r\n\r\n\t\t\t// check if has fallen below min width or height\r\n\t\t\tif (h < space.min.height) {\r\n\t\t\t\th = space.min.height;\r\n\t\t\t\tl = r - h / ratio;\r\n\t\t\t}\r\n\r\n\t\t\t// add height difference with original height to bottom\r\n\t\t\tt = rect.y - (h - rect.height);\r\n\r\n\t\t\t// check if any of the edges has moved out of the available space, if so,\r\n\t\t\t// set max size of rectangle from original position\r\n\t\t\tif (t < 0 || b > space.height) {\r\n\r\n\t\t\t\t// smallest distance to edge of space\r\n\t\t\t\td = Math.min(rect.y, space.height - (rect.y + rect.height));\r\n\r\n\t\t\t\t// new bottom offset\r\n\t\t\t\tt = rect.y - d;\r\n\r\n\t\t\t\t// resulting height\r\n\t\t\t\th = b - t;\r\n\r\n\t\t\t\t// resulting width based on ratio\r\n\t\t\t\tw = h / ratio;\r\n\r\n\t\t\t\t// new left position\r\n\t\t\t\tl = r - w;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: l,\r\n\t\t\t\ty: t,\r\n\t\t\t\twidth: r - l,\r\n\t\t\t\theight: b - t\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/**\r\n  * CropArea\r\n  */\r\n\treturn function () {\r\n\t\tfunction CropArea() {\r\n\t\t\tvar element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.createElement('div');\r\n\r\n\t\t\t_classCallCheck(this, CropArea);\r\n\r\n\t\t\tthis._element = element;\r\n\r\n\t\t\tthis._interaction = null;\r\n\r\n\t\t\tthis._minWidth = 0;\r\n\t\t\tthis._minHeight = 0;\r\n\r\n\t\t\tthis._ratio = null;\r\n\r\n\t\t\tthis._rect = {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\r\n\t\t\tthis._space = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\r\n\t\t\tthis._rectChanged = false;\r\n\r\n\t\t\tthis._init();\r\n\t\t}\r\n\r\n\t\t_createClass(CropArea, [{\r\n\t\t\tkey: '_init',\r\n\t\t\tvalue: function _init() {\r\n\r\n\t\t\t\tthis._element.className = 'slim-crop-area';\r\n\r\n\t\t\t\t// lines\r\n\t\t\t\tvar lines = create('div', 'grid');\r\n\t\t\t\tthis._element.appendChild(lines);\r\n\r\n\t\t\t\t// corner & edge resize buttons\r\n\t\t\t\tfor (var handler in resizers) {\r\n\t\t\t\t\tif (!resizers.hasOwnProperty(handler)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar _btn = create('button', handler);\r\n\t\t\t\t\tthis._element.appendChild(_btn);\r\n\t\t\t\t}\r\n\t\t\t\tvar btn = create('button', 'c');\r\n\t\t\t\tthis._element.appendChild(btn);\r\n\r\n\t\t\t\taddEvents(document, Events.DOWN, this);\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'reset',\r\n\t\t\tvalue: function reset() {\r\n\r\n\t\t\t\tthis._interaction = null;\r\n\r\n\t\t\t\tthis._rect = {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._rectChanged = true;\r\n\r\n\t\t\t\tthis._redraw();\r\n\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'rescale',\r\n\t\t\tvalue: function rescale(scale) {\r\n\r\n\t\t\t\t// no rescale\r\n\t\t\t\tif (scale === 1) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._interaction = null;\r\n\r\n\t\t\t\tthis._rectChanged = true;\r\n\r\n\t\t\t\tthis._rect.x *= scale;\r\n\t\t\t\tthis._rect.y *= scale;\r\n\t\t\t\tthis._rect.width *= scale;\r\n\t\t\t\tthis._rect.height *= scale;\r\n\r\n\t\t\t\tthis._redraw();\r\n\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'limit',\r\n\t\t\tvalue: function limit(width, height) {\r\n\t\t\t\tthis._space.width = width;\r\n\t\t\t\tthis._space.height = height;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'offset',\r\n\t\t\tvalue: function offset(x, y) {\r\n\t\t\t\tthis._space.x = x;\r\n\t\t\t\tthis._space.y = y;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'resize',\r\n\t\t\tvalue: function resize(x, y, width, height) {\r\n\r\n\t\t\t\tthis._interaction = null;\r\n\r\n\t\t\t\tthis._rect = {\r\n\t\t\t\t\tx: limit(x, 0, this._space.width - this._minWidth),\r\n\t\t\t\t\ty: limit(y, 0, this._space.height - this._minHeight),\r\n\t\t\t\t\twidth: limit(width, this._minWidth, this._space.width),\r\n\t\t\t\t\theight: limit(height, this._minHeight, this._space.height)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._rectChanged = true;\r\n\r\n\t\t\t\tthis._redraw();\r\n\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'handleEvent',\r\n\t\t\tvalue: function handleEvent(e) {\r\n\r\n\t\t\t\tswitch (e.type) {\r\n\r\n\t\t\t\t\tcase 'touchstart':\r\n\t\t\t\t\tcase 'pointerdown':\r\n\t\t\t\t\tcase 'mousedown':\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._onStartDrag(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'touchmove':\r\n\t\t\t\t\tcase 'pointermove':\r\n\t\t\t\t\tcase 'mousemove':\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._onDrag(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'touchend':\r\n\t\t\t\t\tcase 'touchcancel':\r\n\t\t\t\t\tcase 'pointerup':\r\n\t\t\t\t\tcase 'mouseup':\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._onStopDrag(e);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onStartDrag',\r\n\t\t\tvalue: function _onStartDrag(e) {\r\n\r\n\t\t\t\t// is not my event?\r\n\t\t\t\tif (!this._element.contains(e.target)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// listen to drag related events\r\n\t\t\t\taddEvents(document, Events.MOVE, this);\r\n\t\t\t\taddEvents(document, Events.UP, this);\r\n\r\n\t\t\t\tthis._interaction = {\r\n\t\t\t\t\ttype: e.target.className,\r\n\t\t\t\t\toffset: getEventOffsetScroll(e)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._interaction.offset.x -= this._rect.x;\r\n\t\t\t\tthis._interaction.offset.y -= this._rect.y;\r\n\r\n\t\t\t\t// now dragging\r\n\t\t\t\tthis._element.setAttribute('data-dragging', 'true');\r\n\r\n\t\t\t\t// start the redraw update loop\r\n\t\t\t\tthis._redraw();\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onDrag',\r\n\t\t\tvalue: function _onDrag(e) {\r\n\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// get local offset for this event\r\n\t\t\t\tvar offset = getEventOffsetScroll(e);\r\n\t\t\t\tvar type = this._interaction.type;\r\n\r\n\t\t\t\t// drag\r\n\t\t\t\tif (type === 'c') {\r\n\r\n\t\t\t\t\tthis._rect.x = limit(offset.x - this._interaction.offset.x, 0, this._space.width - this._rect.width);\r\n\t\t\t\t\tthis._rect.y = limit(offset.y - this._interaction.offset.y, 0, this._space.height - this._rect.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// resize\r\n\t\t\t\telse if (resizers[type]) {\r\n\t\t\t\t\t\tthis._rect = resizers[type](this._rect, {\r\n\t\t\t\t\t\t\tx: offset.x - this._space.x,\r\n\t\t\t\t\t\t\ty: offset.y - this._space.y\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t\twidth: this._space.width,\r\n\t\t\t\t\t\t\theight: this._space.height,\r\n\t\t\t\t\t\t\tmin: {\r\n\t\t\t\t\t\t\t\twidth: this._minWidth,\r\n\t\t\t\t\t\t\t\theight: this._minHeight\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this._ratio);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tthis._rectChanged = true;\r\n\r\n\t\t\t\t// dispatch\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('input'));\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onStopDrag',\r\n\t\t\tvalue: function _onStopDrag(e) {\r\n\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// stop listening to drag related events\r\n\t\t\t\tremoveEvents(document, Events.MOVE, this);\r\n\t\t\t\tremoveEvents(document, Events.UP, this);\r\n\r\n\t\t\t\t// no longer interacting, so no need to redraw\r\n\t\t\t\tthis._interaction = null;\r\n\r\n\t\t\t\t// now dragging\r\n\t\t\t\tthis._element.setAttribute('data-dragging', 'false');\r\n\r\n\t\t\t\t// fire change event\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_redraw',\r\n\t\t\tvalue: function _redraw() {\r\n\t\t\t\tvar _this = this;\r\n\r\n\t\t\t\tif (this._rectChanged) {\r\n\r\n\t\t\t\t\tvar transform = 'translate(' + this._rect.x + 'px,' + this._rect.y + 'px);';\r\n\t\t\t\t\tthis._element.style.cssText = '\\n\\t\\t\\t\\t\\t-webkit-transform: ' + transform + ';\\n\\t\\t\\t\\t\\ttransform: ' + transform + ';\\n\\t\\t\\t\\t\\twidth:' + this._rect.width + 'px;\\n\\t\\t\\t\\t\\theight:' + this._rect.height + 'px;\\n\\t\\t\\t\\t';\r\n\r\n\t\t\t\t\tthis._rectChanged = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if no longer interacting with crop area stop here\r\n\t\t\t\tif (!this._interaction) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// redraw\r\n\t\t\t\trequestAnimationFrame(function () {\r\n\t\t\t\t\treturn _this._redraw();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'destroy',\r\n\t\t\tvalue: function destroy() {\r\n\r\n\t\t\t\tthis._interaction = false;\r\n\t\t\t\tthis._rectChanged = false;\r\n\r\n\t\t\t\tremoveEvents(document, Events.DOWN, this);\r\n\t\t\t\tremoveEvents(document, Events.MOVE, this);\r\n\t\t\t\tremoveEvents(document, Events.UP, this);\r\n\r\n\t\t\t\tremoveElement(this._element);\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'element',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._element;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'space',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._space;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'area',\r\n\t\t\tget: function get() {\r\n\r\n\t\t\t\tvar x = this._rect.x / this._space.width;\r\n\t\t\t\tvar y = this._rect.y / this._space.height;\r\n\t\t\t\tvar width = this._rect.width / this._space.width;\r\n\t\t\t\tvar height = this._rect.height / this._space.height;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: x,\r\n\t\t\t\t\ty: y,\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: height\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'dirty',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._rect.x !== 0 || this._rect.y !== 0 || this._rect.width !== 0 || this._rect.height !== 0;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'minWidth',\r\n\t\t\tset: function set(value) {\r\n\t\t\t\tthis._minWidth = value;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'minHeight',\r\n\t\t\tset: function set(value) {\r\n\t\t\t\tthis._minHeight = value;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'ratio',\r\n\t\t\tset: function set(value) {\r\n\t\t\t\tthis._ratio = value;\r\n\t\t\t}\r\n\t\t}]);\r\n\r\n\t\treturn CropArea;\r\n\t}();\r\n}();\r\nvar ImageEditor = function () {\r\n\r\n\t/**\r\n  * ImageEditor\r\n  * @param element\r\n  * @param options\r\n  * @constructor\r\n  */\r\n\r\n\tvar CropAreaEvents = ['input', 'change'];\r\n\r\n\tvar ImageEditor = function () {\r\n\t\tfunction ImageEditor() {\r\n\t\t\tvar element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.createElement('div');\r\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n\t\t\t_classCallCheck(this, ImageEditor);\r\n\r\n\t\t\tthis._element = element;\r\n\t\t\tthis._options = mergeOptions(ImageEditor.options(), options);\r\n\r\n\t\t\tthis._ratio = null;\r\n\t\t\tthis._output = null;\r\n\r\n\t\t\tthis._input = null;\r\n\r\n\t\t\tthis._preview = null;\r\n\t\t\tthis._previewBlurred = null;\r\n\r\n\t\t\tthis._blurredPreview = false;\r\n\r\n\t\t\tthis._cropper = null;\r\n\t\t\tthis._straightCrop = null;\r\n\t\t\tthis._previewWrapper = null;\r\n\t\t\tthis._currentWindowSize = {};\r\n\r\n\t\t\tthis._btnGroup = null;\r\n\t\t\tthis._maskFrame = null;\r\n\r\n\t\t\tthis._dirty = false;\r\n\r\n\t\t\tthis._wrapperRotation = 0;\r\n\t\t\tthis._wrapperScale = 1.0;\r\n\r\n\t\t\tthis._init();\r\n\t\t}\r\n\r\n\t\t_createClass(ImageEditor, [{\r\n\t\t\tkey: '_init',\r\n\t\t\tvalue: function _init() {\r\n\t\t\t\tvar _this2 = this;\r\n\r\n\t\t\t\tthis._element.className = 'slim-image-editor';\r\n\r\n\t\t\t\t// container\r\n\t\t\t\tthis._container = create('div', 'slim-container');\r\n\r\n\t\t\t\t// wrapper\r\n\t\t\t\tthis._wrapper = create('div', 'slim-wrapper');\r\n\r\n\t\t\t\t// photo crop mark container\r\n\t\t\t\tthis._stage = create('div', 'slim-stage');\r\n\t\t\t\tthis._container.appendChild(this._stage);\r\n\r\n\t\t\t\t// create crop marks\r\n\t\t\t\tthis._cropper = new CropArea();\r\n\t\t\t\tCropAreaEvents.forEach(function (e) {\r\n\t\t\t\t\t_this2._cropper.element.addEventListener(e, _this2);\r\n\t\t\t\t});\r\n\t\t\t\tthis._stage.appendChild(this._cropper.element);\r\n\r\n\t\t\t\t// canvas ghost\r\n\t\t\t\tthis._previewWrapper = create('div', 'slim-image-editor-preview slim-crop-preview');\r\n\t\t\t\tthis._previewBlurred = create('canvas', 'slim-crop-blur');\r\n\t\t\t\tthis._previewWrapper.appendChild(this._previewBlurred);\r\n\t\t\t\tthis._wrapper.appendChild(this._previewWrapper);\r\n\r\n\t\t\t\tthis._previewMask = create('div', 'slim-crop-mask');\r\n\t\t\t\tthis._preview = create('img');\r\n\t\t\t\tthis._previewMask.appendChild(this._preview);\r\n\t\t\t\t//this._previewWrapper.appendChild(this._preview);\r\n\t\t\t\tthis._cropper.element.appendChild(this._previewMask);\r\n\r\n\t\t\t\t// buttons\r\n\t\t\t\tthis._btnGroup = create('div', 'slim-editor-btn-group');\r\n\t\t\t\tImageEditor.Buttons.forEach(function (c) {\r\n\t\t\t\t\tvar prop = capitalizeFirstLetter(c);\r\n\t\t\t\t\tvar label = _this2._options['button' + prop + 'Label'];\r\n\t\t\t\t\tvar title = _this2._options['button' + prop + 'Title'];\r\n\t\t\t\t\tvar className = _this2._options['button' + prop + 'ClassName'];\r\n\t\t\t\t\tvar btn = create('button', 'slim-editor-btn slim-btn-' + c + (className ? ' ' + className : ''));\r\n\t\t\t\t\tbtn.innerHTML = label;\r\n\t\t\t\t\tbtn.title = title || label;\r\n\t\t\t\t\tbtn.type = 'button';\r\n\t\t\t\t\tbtn.setAttribute('data-action', c);\r\n\t\t\t\t\tbtn.addEventListener('click', _this2);\r\n\t\t\t\t\t_this2._btnGroup.appendChild(btn);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// utils\r\n\t\t\t\tthis._utilsGroup = create('div', 'slim-editor-utils-group');\r\n\r\n\t\t\t\t// create rotation button\r\n\t\t\t\tvar btn = create('button', 'slim-editor-utils-btn slim-btn-rotate' + (this._options.buttonRotateClassName ? ' ' + this._options.buttonRotateClassName : ''));\r\n\t\t\t\tbtn.setAttribute('data-action', 'rotate');\r\n\t\t\t\tbtn.addEventListener('click', this);\r\n\t\t\t\tbtn.title = this._options.buttonRotateTitle;\r\n\t\t\t\tthis._utilsGroup.appendChild(btn);\r\n\r\n\t\t\t\tthis._container.appendChild(this._wrapper);\r\n\r\n\t\t\t\tthis._element.appendChild(this._container);\r\n\t\t\t\tthis._element.appendChild(this._utilsGroup);\r\n\t\t\t\tthis._element.appendChild(this._btnGroup);\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'dirty',\r\n\t\t\tvalue: function dirty() {\r\n\t\t\t\tthis._dirty = true;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'handleEvent',\r\n\t\t\tvalue: function handleEvent(e) {\r\n\r\n\t\t\t\tswitch (e.type) {\r\n\t\t\t\t\tcase 'click':\r\n\t\t\t\t\t\tthis._onClick(e);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'change':\r\n\t\t\t\t\t\tthis._onGridChange(e);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'input':\r\n\t\t\t\t\t\tthis._onGridInput(e);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'keydown':\r\n\t\t\t\t\t\tthis._onKeyDown(e);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'resize':\r\n\t\t\t\t\t\tthis._onResize(e);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onKeyDown',\r\n\t\t\tvalue: function _onKeyDown(e) {\r\n\r\n\t\t\t\tswitch (e.keyCode) {\r\n\t\t\t\t\tcase Key.RETURN:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._confirm();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase Key.ESC:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._cancel();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onClick',\r\n\t\t\tvalue: function _onClick(e) {\r\n\r\n\t\t\t\tif (e.target.classList.contains('slim-btn-cancel')) {\r\n\t\t\t\t\tthis._cancel();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (e.target.classList.contains('slim-btn-confirm')) {\r\n\t\t\t\t\tthis._confirm();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (e.target.classList.contains('slim-btn-rotate')) {\r\n\t\t\t\t\tthis._rotate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onResize',\r\n\t\t\tvalue: function _onResize() {\r\n\r\n\t\t\t\t// remember window size\r\n\t\t\t\tthis._currentWindowSize = {\r\n\t\t\t\t\twidth: window.innerWidth,\r\n\t\t\t\t\theight: window.innerHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// redraw the image editor based on new dimensions\r\n\t\t\t\tthis._redraw();\r\n\r\n\t\t\t\tthis._redrawCropper(this._cropper.area);\r\n\r\n\t\t\t\tthis._updateWrapperScale();\r\n\r\n\t\t\t\t// apply rotation and scale\r\n\t\t\t\tthis._redrawWrapper();\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_redrawWrapper',\r\n\t\t\tvalue: function _redrawWrapper() {\r\n\t\t\t\tvar matrix = snabbt.createMatrix();\r\n\t\t\t\tmatrix.scale(this._wrapperScale, this._wrapperScale);\r\n\t\t\t\tmatrix.rotateZ(this._wrapperRotation * (Math.PI / 180));\r\n\t\t\t\tsnabbt.setElementTransform(this._previewWrapper, matrix);\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onGridInput',\r\n\t\t\tvalue: function _onGridInput() {\r\n\r\n\t\t\t\tthis._redrawCropMask();\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onGridChange',\r\n\t\t\tvalue: function _onGridChange() {\r\n\r\n\t\t\t\tthis._redrawCropMask();\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_updateWrapperRotation',\r\n\t\t\tvalue: function _updateWrapperRotation() {\r\n\r\n\t\t\t\tif (this._options.minSize.width > this._input.height || this._options.minSize.height > this._input.width) {\r\n\t\t\t\t\tthis._wrapperRotation += 180;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._wrapperRotation += 90;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_updateWrapperScale',\r\n\t\t\tvalue: function _updateWrapperScale() {\r\n\r\n\t\t\t\t// test if is tilted\r\n\t\t\t\tvar isTilted = this._wrapperRotation % 180 !== 0;\r\n\r\n\t\t\t\t// if tilted determine correct scale factor\r\n\t\t\t\tif (isTilted) {\r\n\r\n\t\t\t\t\t// maximum size\r\n\t\t\t\t\tvar maxWidth = this._container.offsetWidth;\r\n\t\t\t\t\tvar maxHeight = this._container.offsetHeight;\r\n\r\n\t\t\t\t\t// get wrapper size\r\n\t\t\t\t\tvar wrapperWidth = this._wrapper.offsetHeight;\r\n\t\t\t\t\tvar wrapperHeight = this._wrapper.offsetWidth;\r\n\r\n\t\t\t\t\tvar scalar = maxWidth / wrapperWidth;\r\n\t\t\t\t\tif (scalar * wrapperHeight > maxHeight) {\r\n\t\t\t\t\t\tscalar = maxHeight / wrapperHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._wrapperScale = scalar;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._wrapperScale = 1.0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n    * Action handlers\r\n    */\r\n\r\n\t\t}, {\r\n\t\t\tkey: '_cancel',\r\n\t\t\tvalue: function _cancel() {\r\n\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('cancel'));\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_confirm',\r\n\t\t\tvalue: function _confirm() {\r\n\r\n\t\t\t\tvar isTilted = this._wrapperRotation % 180 !== 0;\r\n\t\t\t\tvar area = this._cropper.area;\r\n\r\n\t\t\t\tvar result = scaleRect(area, isTilted ? this._input.height : this._input.width, isTilted ? this._input.width : this._input.height);\r\n\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('confirm', {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\trotation: this._wrapperRotation % 360,\r\n\t\t\t\t\t\tcrop: result\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_rotate',\r\n\t\t\tvalue: function _rotate() {\r\n\t\t\t\tvar _this3 = this;\r\n\r\n\t\t\t\t// rotate!\r\n\t\t\t\tthis._updateWrapperRotation();\r\n\r\n\t\t\t\t// only pass current rect if is 1:1 or free\r\n\t\t\t\tvar rect = this.ratio === 1 || this._ratio === null ? this._cropper.area : null;\r\n\t\t\t\tif (rect) {\r\n\t\t\t\t\trotate(rect, 90);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// wrapper might also need to be scaled\r\n\t\t\t\tthis._updateWrapperScale();\r\n\r\n\t\t\t\t// hide the cropper\r\n\t\t\t\tthis._hideCropper();\r\n\r\n\t\t\t\t// rotation effect\r\n\t\t\t\tsnabbt(this._previewWrapper, {\r\n\t\t\t\t\trotation: [0, 0, this._wrapperRotation * (Math.PI / 180)],\r\n\t\t\t\t\tscale: [this._wrapperScale, this._wrapperScale],\r\n\t\t\t\t\teasing: 'spring',\r\n\t\t\t\t\tspringConstant: .8,\r\n\t\t\t\t\tspringDeceleration: .65,\r\n\t\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\t\t// redraws auto cropper\r\n\t\t\t\t\t\t_this3._redrawCropper(rect);\r\n\r\n\t\t\t\t\t\t// shows the cropper\r\n\t\t\t\t\t\t_this3._showCropper();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_showCropper',\r\n\t\t\tvalue: function _showCropper() {\r\n\r\n\t\t\t\tsnabbt(this._stage, {\r\n\t\t\t\t\teasing: 'ease',\r\n\t\t\t\t\tduration: 250,\r\n\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\topacity: 1.0\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_hideCropper',\r\n\t\t\tvalue: function _hideCropper() {\r\n\r\n\t\t\t\tsnabbt(this._stage, {\r\n\t\t\t\t\tduration: 0,\r\n\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\topacity: 0\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_redrawCropMask',\r\n\t\t\tvalue: function _redrawCropMask() {\r\n\t\t\t\tvar _this4 = this;\r\n\r\n\t\t\t\t// get rotation\r\n\t\t\t\tvar rotation = this._wrapperRotation % 360;\r\n\r\n\t\t\t\t// get scale\r\n\t\t\t\tvar scale = this._wrapperScale;\r\n\r\n\t\t\t\t// get image size\r\n\t\t\t\tvar canvas = {\r\n\t\t\t\t\twidth: this._wrapper.offsetWidth,\r\n\t\t\t\t\theight: this._wrapper.offsetHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// get default mask cropper area\r\n\t\t\t\tvar mask = this._cropper.area;\r\n\t\t\t\tvar preview = {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (rotation === 0) {\r\n\t\t\t\t\tpreview.x = -mask.x;\r\n\t\t\t\t\tpreview.y = -mask.y;\r\n\t\t\t\t} else if (rotation === 90) {\r\n\t\t\t\t\tpreview.x = -(1 - mask.y);\r\n\t\t\t\t\tpreview.y = -mask.x;\r\n\t\t\t\t} else if (rotation === 180) {\r\n\t\t\t\t\tpreview.x = -(1 - mask.x);\r\n\t\t\t\t\tpreview.y = -(1 - mask.y);\r\n\t\t\t\t} else if (rotation === 270) {\r\n\t\t\t\t\tpreview.x = -mask.y;\r\n\t\t\t\t\tpreview.y = -(1 - mask.x);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// scale rect to fit canvas\r\n\t\t\t\tpreview.x *= canvas.width;\r\n\t\t\t\tpreview.y *= canvas.height;\r\n\r\n\t\t\t\t// update on next frame (so it's in sync with crop area redraw)\r\n\t\t\t\tcancelAnimationFrame(this._maskFrame);\r\n\t\t\t\tthis._maskFrame = requestAnimationFrame(function () {\r\n\r\n\t\t\t\t\tvar transform = 'scale(' + scale + ') rotate(' + -rotation + 'deg) translate(' + preview.x + 'px, ' + preview.y + 'px);';\r\n\t\t\t\t\t_this4._preview.style.cssText = '\\n\\t\\t\\t\\t\\twidth: ' + _this4._previewSize.width + 'px;\\n\\t\\t\\t\\t\\theight: ' + _this4._previewSize.height + 'px;\\n\\t\\t\\t\\t\\t-webkit-transform: ' + transform + ';\\n\\t\\t\\t\\t\\ttransform: ' + transform + ';\\n\\t\\t\\t\\t';\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'open',\r\n\t\t\tvalue: function open(image, ratio, crop, rotation, complete) {\r\n\t\t\t\tvar _this5 = this;\r\n\r\n\t\t\t\t// test if is same image\r\n\t\t\t\tif (this._input && !this._dirty && this._ratio === ratio) {\r\n\t\t\t\t\tcomplete();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// remember current window size\r\n\t\t\t\tthis._currentWindowSize = {\r\n\t\t\t\t\twidth: window.innerWidth,\r\n\t\t\t\t\theight: window.innerHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// reset dirty value\r\n\t\t\t\tthis._dirty = false;\r\n\r\n\t\t\t\t// reset rotation\r\n\t\t\t\tthis._wrapperRotation = rotation || 0;\r\n\r\n\t\t\t\t// we'll always have to blur the preview of a newly opened image\r\n\t\t\t\tthis._blurredPreview = false;\r\n\r\n\t\t\t\t// set ratio\r\n\t\t\t\tthis._ratio = ratio;\r\n\r\n\t\t\t\t// reset preview size\r\n\t\t\t\tthis._previewSize = null;\r\n\r\n\t\t\t\t// hide editor\r\n\t\t\t\tthis._element.style.opacity = '0';\r\n\r\n\t\t\t\t// set as new input image\r\n\t\t\t\tthis._input = image;\r\n\r\n\t\t\t\t// calculate crop\r\n\t\t\t\tvar tilted = rotation % 180 !== 0;\r\n\t\t\t\tvar relativeCrop = divideRect(crop, tilted ? image.height : image.width, tilted ? image.width : image.height);\r\n\r\n\t\t\t\t// preview has now loaded\r\n\t\t\t\tthis._preview.onload = function () {\r\n\r\n\t\t\t\t\t// reset onload listener\r\n\t\t\t\t\t_this5._preview.onload = null;\r\n\r\n\t\t\t\t\t// setup cropper\r\n\t\t\t\t\t_this5._cropper.ratio = _this5.ratio;\r\n\r\n\t\t\t\t\t// redraw view (for first time)\r\n\t\t\t\t\t_this5._redraw();\r\n\r\n\t\t\t\t\t// redraw cropper\r\n\t\t\t\t\t_this5._redrawCropper(relativeCrop);\r\n\r\n\t\t\t\t\t// done\r\n\t\t\t\t\tcomplete();\r\n\r\n\t\t\t\t\t// fade in\r\n\t\t\t\t\t_this5._element.style.opacity = '';\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// load lower resolution preview image\r\n\t\t\t\tthis._preview.src = cloneCanvasScaled(this._input, Math.min(this._container.offsetWidth / this._input.width, this._container.offsetHeight / this._input.height)).toDataURL();\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_redrawCropper',\r\n\t\t\tvalue: function _redrawCropper(rect) {\r\n\r\n\t\t\t\tvar isTilted = this._wrapperRotation % 180 !== 0;\r\n\r\n\t\t\t\t// image ratio\r\n\t\t\t\tvar imageRatio = isTilted ? this._input.height / this._input.width : this._input.width / this._input.height;\r\n\r\n\t\t\t\t// get dimensions of image wrapper\r\n\t\t\t\tvar width = this._wrapper.offsetWidth;\r\n\t\t\t\tvar height = this._wrapper.offsetHeight;\r\n\r\n\t\t\t\t// get space\r\n\t\t\t\tvar maxWidth = this._container.offsetWidth;\r\n\t\t\t\tvar maxHeight = this._container.offsetHeight;\r\n\r\n\t\t\t\t// rescale wrapper\r\n\t\t\t\tthis._updateWrapperScale();\r\n\r\n\t\t\t\t// position cropper container to fit wrapper\r\n\t\t\t\tvar sw = this._wrapperScale * (isTilted ? height : width);\r\n\t\t\t\tvar sh = this._wrapperScale * (isTilted ? width : height);\r\n\t\t\t\tvar sx = isTilted ? (maxWidth - sw) * .5 : this._wrapper.offsetLeft;\r\n\t\t\t\tvar sy = isTilted ? (maxHeight - sh) * .5 : this._wrapper.offsetTop;\r\n\r\n\t\t\t\tthis._stage.style.cssText = '\\n\\t\\t\\t\\tleft:' + sx + 'px;\\n\\t\\t\\t\\ttop:' + sy + 'px;\\n\\t\\t\\t\\twidth:' + sw + 'px;\\n\\t\\t\\t\\theight:' + sh + 'px;\\n\\t\\t\\t';\r\n\r\n\t\t\t\t// set new size limit for crops\r\n\t\t\t\t// use image ratio so we have exact amount of pixels\r\n\t\t\t\tthis._cropper.limit(sw, sw / imageRatio);\r\n\t\t\t\tthis._cropper.offset(sx + this._element.offsetLeft, sy + this._element.offsetTop);\r\n\r\n\t\t\t\t// set min and max height of cropper\r\n\t\t\t\tthis._cropper.minWidth = this._wrapperScale * this._options.minSize.width * this.scalar;\r\n\t\t\t\tthis._cropper.minHeight = this._wrapperScale * this._options.minSize.height * this.scalar;\r\n\r\n\t\t\t\t// set crop rect\r\n\t\t\t\tvar crop = null;\r\n\t\t\t\tif (rect) {\r\n\t\t\t\t\tcrop = {\r\n\t\t\t\t\t\tx: rect.x * sw,\r\n\t\t\t\t\t\ty: rect.y * sh,\r\n\t\t\t\t\t\twidth: rect.width * sw,\r\n\t\t\t\t\t\theight: rect.height * sh\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcrop = getAutoCropRect(sw, sh, this._ratio || sh / sw);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._cropper.resize(crop.x, crop.y, crop.width, crop.height);\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_redraw',\r\n\t\t\tvalue: function _redraw() {\r\n\r\n\t\t\t\t// image ratio\r\n\t\t\t\tvar ratio = this._input.height / this._input.width;\r\n\r\n\t\t\t\t// determine rounded size\r\n\t\t\t\tvar maxWidth = this._container.clientWidth;\r\n\t\t\t\tvar maxHeight = this._container.clientHeight;\r\n\r\n\t\t\t\tvar width = maxWidth;\r\n\t\t\t\tvar height = width * ratio;\r\n\r\n\t\t\t\tif (height > maxHeight) {\r\n\t\t\t\t\theight = maxHeight;\r\n\t\t\t\t\twidth = height / ratio;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twidth = Math.round(width);\r\n\t\t\t\theight = Math.round(height);\r\n\r\n\t\t\t\t// rescale and recenter wrapper\r\n\t\t\t\tvar x = (maxWidth - width) / 2;\r\n\t\t\t\tvar y = (maxHeight - height) / 2;\r\n\r\n\t\t\t\tthis._wrapper.style.cssText = '\\n\\t\\t\\t\\tleft:' + x + 'px;\\n\\t\\t\\t\\ttop:' + y + 'px;\\n\\t\\t\\t\\twidth:' + width + 'px;\\n\\t\\t\\t\\theight:' + height + 'px;\\n\\t\\t\\t';\r\n\r\n\t\t\t\t// set image size based on container dimensions\r\n\t\t\t\tthis._previewBlurred.style.cssText = '\\n\\t\\t\\t\\twidth:' + width + 'px;\\n\\t\\t\\t\\theight:' + height + 'px;\\n\\t\\t\\t';\r\n\r\n\t\t\t\tthis._preview.style.cssText = '\\n\\t\\t\\t\\twidth:' + width + 'px;\\n\\t\\t\\t\\theight:' + height + 'px;\\n\\t\\t\\t';\r\n\r\n\t\t\t\tthis._previewSize = {\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: height\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// scale and blur the blurry preview\r\n\t\t\t\tif (!this._blurredPreview) {\r\n\r\n\t\t\t\t\tthis._previewBlurred.width = 300;\r\n\t\t\t\t\tthis._previewBlurred.height = this._previewBlurred.width * ratio;\r\n\r\n\t\t\t\t\tcopyCanvas(this._input, this._previewBlurred);\r\n\r\n\t\t\t\t\tblurCanvas(this._previewBlurred, 3);\r\n\r\n\t\t\t\t\tthis._blurredPreview = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'show',\r\n\t\t\tvalue: function show() {\r\n\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\r\n\r\n\r\n\t\t\t\t// test if window size has changed since previous showing\r\n\t\t\t\tif (this._currentWindowSize.width !== window.innerWidth || this._currentWindowSize.height !== window.innerHeight) {\r\n\r\n\t\t\t\t\t// if so, reposition elements\r\n\t\t\t\t\tthis._redraw();\r\n\r\n\t\t\t\t\t// redraw cropper position\r\n\t\t\t\t\tthis._redrawCropper(this._cropper.area);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// listen to keydown so we can close or confirm with RETURN / ESC\r\n\t\t\t\tdocument.addEventListener('keydown', this);\r\n\r\n\t\t\t\t// when window is scaled we want to resize the editor\r\n\t\t\t\twindow.addEventListener('resize', this);\r\n\r\n\t\t\t\t// fade in preview\r\n\t\t\t\tvar rotation = this._wrapperRotation * (Math.PI / 180);\r\n\t\t\t\tsnabbt(this._previewWrapper, {\r\n\t\t\t\t\tfromRotation: [0, 0, rotation],\r\n\t\t\t\t\trotation: [0, 0, rotation],\r\n\t\t\t\t\tfromPosition: [0, 0, 0],\r\n\t\t\t\t\tposition: [0, 0, 0],\r\n\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tfromScale: [this._wrapperScale - .02, this._wrapperScale - .02],\r\n\t\t\t\t\tscale: [this._wrapperScale, this._wrapperScale],\r\n\t\t\t\t\teasing: 'spring',\r\n\t\t\t\t\tspringConstant: .3,\r\n\t\t\t\t\tspringDeceleration: .85,\r\n\t\t\t\t\tdelay: 450,\r\n\t\t\t\t\tcomplete: function complete() {\r\n\t\t\t\t\t\t// don't reset transforms because we need rotation to stick\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (this._cropper.dirty) {\r\n\r\n\t\t\t\t\t// now show cropper\r\n\t\t\t\t\tsnabbt(this._stage, {\r\n\t\t\t\t\t\tfromPosition: [0, 0, 0],\r\n\t\t\t\t\t\tposition: [0, 0, 0],\r\n\t\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\t\topacity: 1,\r\n\t\t\t\t\t\tduration: 250,\r\n\t\t\t\t\t\tdelay: 850,\r\n\t\t\t\t\t\tcomplete: function complete() {\r\n\t\t\t\t\t\t\tresetTransforms(this);\r\n\t\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// now show cropper\r\n\t\t\t\t\tsnabbt(this._stage, {\r\n\t\t\t\t\t\tfromPosition: [0, 0, 0],\r\n\t\t\t\t\t\tposition: [0, 0, 0],\r\n\t\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\t\topacity: 1,\r\n\t\t\t\t\t\tduration: 250,\r\n\t\t\t\t\t\tdelay: 1000,\r\n\t\t\t\t\t\tcomplete: function complete() {\r\n\t\t\t\t\t\t\tresetTransforms(this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now show buttons\r\n\t\t\t\tsnabbt(this._btnGroup.childNodes, {\r\n\t\t\t\t\tfromScale: [.9, .9],\r\n\t\t\t\t\tscale: [1, 1],\r\n\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tdelay: function delay(i) {\r\n\t\t\t\t\t\treturn 1000 + i * 100;\r\n\t\t\t\t\t},\r\n\t\t\t\t\teasing: 'spring',\r\n\t\t\t\t\tspringConstant: .3,\r\n\t\t\t\t\tspringDeceleration: .85,\r\n\t\t\t\t\tcomplete: function complete() {\r\n\t\t\t\t\t\tresetTransforms(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsnabbt(this._utilsGroup.childNodes, {\r\n\t\t\t\t\tfromScale: [.9, .9],\r\n\t\t\t\t\tscale: [1, 1],\r\n\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\teasing: 'spring',\r\n\t\t\t\t\tspringConstant: .3,\r\n\t\t\t\t\tspringDeceleration: .85,\r\n\t\t\t\t\tdelay: 1250,\r\n\t\t\t\t\tcomplete: function complete() {\r\n\t\t\t\t\t\tresetTransforms(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'hide',\r\n\t\t\tvalue: function hide() {\r\n\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\r\n\r\n\r\n\t\t\t\t// no more need to listen to keydown\r\n\t\t\t\tdocument.removeEventListener('keydown', this);\r\n\r\n\t\t\t\t// no more need to resize editor when window is scaled\r\n\t\t\t\twindow.removeEventListener('resize', this);\r\n\r\n\t\t\t\t// fade out buttons\r\n\t\t\t\tsnabbt(this._utilsGroup.childNodes, {\r\n\t\t\t\t\tfromOpacity: 1,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tduration: 250\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsnabbt(this._btnGroup.childNodes, {\r\n\t\t\t\t\tfromOpacity: 1,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tdelay: 200,\r\n\t\t\t\t\tduration: 350\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsnabbt([this._stage, this._previewWrapper], {\r\n\t\t\t\t\tfromPosition: [0, 0, 0],\r\n\t\t\t\t\tposition: [0, -250, 0],\r\n\t\t\t\t\tfromOpacity: 1,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\teasing: 'spring',\r\n\t\t\t\t\tspringConstant: .3,\r\n\t\t\t\t\tspringDeceleration: .75,\r\n\t\t\t\t\tdelay: 250,\r\n\t\t\t\t\tallDone: function allDone() {\r\n\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'destroy',\r\n\t\t\tvalue: function destroy() {\r\n\t\t\t\tvar _this6 = this;\r\n\r\n\t\t\t\tnodeListToArray(this._btnGroup.children).forEach(function (btn) {\r\n\t\t\t\t\tbtn.removeEventListener('click', _this6);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tCropAreaEvents.forEach(function (e) {\r\n\t\t\t\t\t_this6._cropper.element.removeEventListener(e, _this6);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._cropper.destroy();\r\n\r\n\t\t\t\t// if still attached to DOM, detach\r\n\t\t\t\tif (this._element.parentNode) {\r\n\t\t\t\t\tremoveElement(this._element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'showRotateButton',\r\n\t\t\tset: function set(enabled) {\r\n\t\t\t\tif (enabled) {\r\n\t\t\t\t\tthis._element.classList.remove('slim-rotation-disabled');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._element.classList.add('slim-rotation-disabled');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'element',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._element;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'ratio',\r\n\t\t\tget: function get() {\r\n\t\t\t\tif (this._ratio === 'input') {\r\n\t\t\t\t\treturn this._input.height / this._input.width;\r\n\t\t\t\t}\r\n\t\t\t\treturn this._ratio;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'offset',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._element.getBoundingClientRect();\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'original',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._input;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'scalar',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._previewSize.width / this._input.width;\r\n\t\t\t}\r\n\t\t}], [{\r\n\t\t\tkey: 'options',\r\n\t\t\tvalue: function options() {\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tbuttonCancelClassName: null,\r\n\t\t\t\t\tbuttonConfirmClassName: null,\r\n\t\t\t\t\tbuttonCancelLabel: 'Cancel',\r\n\t\t\t\t\tbuttonConfirmLabel: 'Confirm',\r\n\t\t\t\t\tbuttonCancelTitle: null,\r\n\t\t\t\t\tbuttonConfirmTitle: null,\r\n\r\n\t\t\t\t\tbuttonRotateTitle: 'Rotate',\r\n\t\t\t\t\tbuttonRotateClassName: null,\r\n\r\n\t\t\t\t\tminSize: {\r\n\t\t\t\t\t\twidth: 0,\r\n\t\t\t\t\t\theight: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}]);\r\n\r\n\t\treturn ImageEditor;\r\n\t}();\r\n\r\n\tImageEditor.Buttons = ['cancel', 'confirm'];\r\n\r\n\treturn ImageEditor;\r\n}(CropArea);\r\nvar FileHopper = function () {\r\n\r\n\t/**\r\n  * FileHopper\r\n  * @param element\r\n  * @param options\r\n  * @constructor\r\n  */\r\n\tvar DragDropEvents = ['dragenter', 'dragover', 'dragleave', 'drop'];\r\n\r\n\treturn function () {\r\n\t\tfunction FileHopper() {\r\n\t\t\tvar element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.createElement('div');\r\n\r\n\t\t\t_classCallCheck(this, FileHopper);\r\n\r\n\t\t\tthis._element = element;\r\n\t\t\tthis._accept = [];\r\n\t\t\tthis._allowURLs = false;\r\n\r\n\t\t\tthis._dragPath = null;\r\n\r\n\t\t\tthis._init();\r\n\t\t}\r\n\r\n\t\t// public properties\r\n\r\n\r\n\t\t_createClass(FileHopper, [{\r\n\t\t\tkey: 'isValidDataTransfer',\r\n\t\t\tvalue: function isValidDataTransfer(dataTransfer) {\r\n\r\n\t\t\t\tif (dataTransfer.files && dataTransfer.files.length) {\r\n\t\t\t\t\treturn this.areValidDataTransferFiles(dataTransfer.files);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataTransfer.items && dataTransfer.items.length) {\r\n\t\t\t\t\treturn this.areValidDataTransferItems(dataTransfer.items);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'areValidDataTransferFiles',\r\n\t\t\tvalue: function areValidDataTransferFiles(files) {\r\n\t\t\t\tif (this._accept.length && files) {\r\n\t\t\t\t\treturn this._accept.indexOf(files[0].type) !== -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'areValidDataTransferItems',\r\n\t\t\tvalue: function areValidDataTransferItems(items) {\r\n\r\n\t\t\t\tif (this._accept.length && items) {\r\n\r\n\t\t\t\t\t// is possibly dropping url\r\n\t\t\t\t\tif (this._allowURLs && items[0].kind === 'string') {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// is http website so firefox will not return file type\r\n\t\t\t\t\tif (items[0].type && items[0].type.indexOf('application') === 0) {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this._accept.indexOf(items[0].type) !== -1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// public methods\r\n\r\n\t\t}, {\r\n\t\t\tkey: 'reset',\r\n\t\t\tvalue: function reset() {\r\n\t\t\t\tthis._element.files = null;\r\n\t\t\t}\r\n\r\n\t\t\t// private\r\n\r\n\t\t}, {\r\n\t\t\tkey: '_init',\r\n\t\t\tvalue: function _init() {\r\n\t\t\t\tvar _this7 = this;\r\n\r\n\t\t\t\tthis._element.className = 'slim-file-hopper';\r\n\r\n\t\t\t\tDragDropEvents.forEach(function (e) {\r\n\t\t\t\t\t_this7._element.addEventListener(e, _this7);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// the input has changed\r\n\r\n\t\t}, {\r\n\t\t\tkey: 'handleEvent',\r\n\t\t\tvalue: function handleEvent(e) {\r\n\r\n\t\t\t\tswitch (e.type) {\r\n\t\t\t\t\tcase 'dragenter':\r\n\t\t\t\t\tcase 'dragover':\r\n\t\t\t\t\t\tthis._onDragOver(e);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'dragleave':\r\n\t\t\t\t\t\tthis._onDragLeave(e);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'drop':\r\n\t\t\t\t\t\tthis._onDrop(e);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onDrop',\r\n\t\t\tvalue: function _onDrop(e) {\r\n\r\n\t\t\t\t// prevents browser from opening image\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// test if a url was dropped\r\n\t\t\t\tvar remote = null;\r\n\r\n\t\t\t\tif (this._allowURLs) {\r\n\r\n\t\t\t\t\tvar url = void 0;\r\n\t\t\t\t\tvar meta = void 0;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\turl = e.dataTransfer.getData('url');\r\n\t\t\t\t\t\tmeta = e.dataTransfer.getData('text/html');\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// nope nope nope (ie11 trouble)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (meta && meta.length) {\r\n\t\t\t\t\t\tvar parsed = meta.match(/src\\s*=\\s*\"(.+?)\"/);\r\n\t\t\t\t\t\tif (parsed) {\r\n\t\t\t\t\t\t\tremote = parsed[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (url && url.length) {\r\n\t\t\t\t\t\tremote = url;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (remote) {\r\n\t\t\t\t\tthis._element.files = [{ remote: remote }];\r\n\t\t\t\t}\r\n\t\t\t\t// nope, must have been a file\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t// test type in older browsers\r\n\t\t\t\t\t\tvar filesValidity = this.isValidDataTransfer(e.dataTransfer);\r\n\t\t\t\t\t\tif (!filesValidity) {\r\n\r\n\t\t\t\t\t\t\t// invalid files, stop here\r\n\t\t\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-invalid-drop'));\r\n\r\n\t\t\t\t\t\t\t// no longer hovering\r\n\t\t\t\t\t\t\tthis._dragPath = null;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// store dropped files on element files property, so can be accessed by same function as file input handler\r\n\t\t\t\t\t\tthis._element.files = e.dataTransfer.files;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// file has been dropped\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-drop', {\r\n\t\t\t\t\tdetail: getOffsetByEvent(e)\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// file list has changed, let's notify others\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('change'));\r\n\r\n\t\t\t\t// no longer hovering\r\n\t\t\t\tthis._dragPath = null;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onDragOver',\r\n\t\t\tvalue: function _onDragOver(e) {\r\n\r\n\t\t\t\t// prevents browser from opening image\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t// set drop effect\r\n\t\t\t\te.dataTransfer.dropEffect = 'copy';\r\n\r\n\t\t\t\t// determin if is valid data\r\n\t\t\t\tvar dataValidity = this.isValidDataTransfer(e.dataTransfer);\r\n\t\t\t\t// if validity is null is undetermined\r\n\t\t\t\tif (dataValidity !== null && !dataValidity) {\r\n\r\n\t\t\t\t\t// indicate drop mode to user\r\n\t\t\t\t\te.dataTransfer.dropEffect = 'none';\r\n\r\n\t\t\t\t\t// invalid files, stop here\r\n\t\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-invalid'));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now hovering file over the area\r\n\t\t\t\tif (!this._dragPath) {\r\n\t\t\t\t\tthis._dragPath = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// push location\r\n\t\t\t\tthis._dragPath.push(getOffsetByEvent(e));\r\n\r\n\t\t\t\t// file is hovering over element\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-over', {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tx: last(this._dragPath).x,\r\n\t\t\t\t\t\ty: last(this._dragPath).y\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: '_onDragLeave',\r\n\t\t\tvalue: function _onDragLeave(e) {\r\n\r\n\t\t\t\t// user has dragged file out of element area\r\n\t\t\t\tthis._element.dispatchEvent(new CustomEvent('file-out', {\r\n\t\t\t\t\tdetail: getOffsetByEvent(e)\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// now longer hovering file\r\n\t\t\t\tthis._dragPath = null;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'destroy',\r\n\t\t\tvalue: function destroy() {\r\n\t\t\t\tvar _this8 = this;\r\n\r\n\t\t\t\tDragDropEvents.forEach(function (e) {\r\n\t\t\t\t\t_this8._element.removeEventListener(e, _this8);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tremoveElement(this._element);\r\n\r\n\t\t\t\tthis._element = null;\r\n\t\t\t\tthis._dragPath = null;\r\n\t\t\t\tthis._accept = null;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'element',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._element;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'dragPath',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._dragPath;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'enabled',\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._element.style.display === '';\r\n\t\t\t},\r\n\t\t\tset: function set(value) {\r\n\t\t\t\tthis._element.style.display = value ? '' : 'none';\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'allowURLs',\r\n\t\t\tset: function set(value) {\r\n\t\t\t\tthis._allowURLs = value;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'accept',\r\n\t\t\tset: function set(mimetypes) {\r\n\t\t\t\tthis._accept = mimetypes;\r\n\t\t\t},\r\n\t\t\tget: function get() {\r\n\t\t\t\treturn this._accept;\r\n\t\t\t}\r\n\t\t}]);\r\n\r\n\t\treturn FileHopper;\r\n\t}();\r\n}();\r\nvar Popover = function () {\r\n\r\n\t/**\r\n  * Popover\r\n  */\r\n\treturn function () {\r\n\t\tfunction Popover() {\r\n\t\t\t_classCallCheck(this, Popover);\r\n\r\n\t\t\tthis._element = null;\r\n\t\t\tthis._inner = null;\r\n\r\n\t\t\tthis._init();\r\n\t\t}\r\n\r\n\t\t_createClass(Popover, [{\r\n\t\t\tkey: '_init',\r\n\t\t\tvalue: function _init() {\r\n\r\n\t\t\t\tthis._element = create('div', 'slim-popover');\r\n\t\t\t\tthis._element.setAttribute('data-state', 'off');\r\n\t\t\t\tdocument.body.appendChild(this._element);\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'show',\r\n\t\t\tvalue: function show() {\r\n\t\t\t\tvar _this9 = this;\r\n\r\n\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\r\n\r\n\r\n\t\t\t\t// turn on\r\n\t\t\t\tthis._element.setAttribute('data-state', 'on');\r\n\r\n\t\t\t\t// show and animate in\r\n\t\t\t\tsnabbt(this._element, {\r\n\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tduration: 350,\r\n\t\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\t\t// clean up transforms\r\n\t\t\t\t\t\tresetTransforms(_this9._element);\r\n\r\n\t\t\t\t\t\t// ready!\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'hide',\r\n\t\t\tvalue: function hide() {\r\n\t\t\t\tvar _this10 = this;\r\n\r\n\t\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\r\n\r\n\r\n\t\t\t\t// animate out and hide\r\n\t\t\t\tsnabbt(this._element, {\r\n\t\t\t\t\tfromOpacity: 1,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tduration: 500,\r\n\t\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\t\t// clean up transforms\r\n\t\t\t\t\t\tresetTransforms(_this10._element);\r\n\r\n\t\t\t\t\t\t// hide the editor\r\n\t\t\t\t\t\t_this10._element.setAttribute('data-state', 'off');\r\n\r\n\t\t\t\t\t\t// ready!\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'destroy',\r\n\t\t\tvalue: function destroy() {\r\n\t\t\t\tif (!this._element.parentNode) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._element.parentNode.removeChild(this._element);\r\n\t\t\t\tthis._element = null;\r\n\t\t\t\tthis._inner = null;\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'inner',\r\n\t\t\tset: function set(element) {\r\n\r\n\t\t\t\tthis._inner = element;\r\n\t\t\t\tif (this._element.firstChild) {\r\n\t\t\t\t\tthis._element.removeChild(this._element.firstChild);\r\n\t\t\t\t}\r\n\t\t\t\tthis._element.appendChild(this._inner);\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tkey: 'className',\r\n\t\t\tset: function set(value) {\r\n\t\t\t\tthis._element.className = 'slim-popover' + (value === null ? '' : ' ' + value);\r\n\t\t\t}\r\n\t\t}]);\r\n\r\n\t\treturn Popover;\r\n\t}();\r\n}();\r\nvar intSplit = function intSplit(v, c) {\r\n\treturn v.split(c).map(function (v) {\r\n\t\treturn parseInt(v, 10);\r\n\t});\r\n};\r\n\r\nvar isWrapper = function isWrapper(element) {\r\n\treturn element.nodeName === 'DIV' || element.nodeName === 'SPAN';\r\n};\r\n\r\nvar CropType = {\r\n\tAUTO: 'auto',\r\n\tINITIAL: 'initial',\r\n\tMANUAL: 'manual'\r\n};\r\n\r\nvar Rect = ['x', 'y', 'width', 'height'];\r\n\r\nvar HopperEvents = ['file-invalid-drop', 'file-invalid', 'file-drop', 'file-over', 'file-out', 'click'];\r\n\r\nvar ImageEditorEvents = ['cancel', 'confirm'];\r\n\r\nvar SlimButtons = ['remove', 'edit', 'download', 'upload'];\r\n\r\nvar SlimPopover = null;\r\nvar SlimCount = 0;\r\n\r\nvar SlimLoaderHTML = '\\n<div class=\"slim-loader\">\\n\\t<svg>\\n\\t\\t<path class=\"slim-loader-background\" fill=\"none\" stroke-width=\"3\" />\\n\\t\\t<path class=\"slim-loader-foreground\" fill=\"none\" stroke-width=\"3\" />\\n\\t</svg>\\n</div>\\n';\r\n\r\nvar SlimUploadStatusHTML = '\\n<div class=\"slim-upload-status\"></div>\\n';\r\n\r\nvar stringToSize = function stringToSize(str) {\r\n\tvar size = str.split(',');\r\n\treturn {\r\n\t\twidth: parseInt(size[0], 10),\r\n\t\theight: parseInt(size[1], 10)\r\n\t};\r\n};\r\n\r\nvar Slim = function () {\r\n\tfunction Slim(element) {\r\n\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n\t\t_classCallCheck(this, Slim);\r\n\r\n\t\t// create popover element if not already created\r\n\t\tif (!SlimPopover) {\r\n\t\t\tSlimPopover = new Popover();\r\n\t\t}\r\n\r\n\t\t// we create a new counter, we use this counter to determine if we need to clean up the popover\r\n\t\tthis._uid = SlimCount++;\r\n\r\n\t\t// the options to use\r\n\t\tthis._options = mergeOptions(Slim.options(), options);\r\n\r\n\t\t// test options correctness\r\n\t\tif (this._options.forceSize) {\r\n\t\t\tif (typeof this._options.forceSize === 'string') {\r\n\t\t\t\tthis._options.forceSize = stringToSize(this._options.forceSize);\r\n\t\t\t}\r\n\t\t\tthis._options.ratio = this._options.forceSize.width + ':' + this._options.forceSize.height;\r\n\t\t\tthis._options.size = clone(this._options.forceSize);\r\n\t\t}\r\n\r\n\t\t// test for size set as string\r\n\t\tif (typeof this._options.size === 'string') {\r\n\t\t\tthis._options.size = stringToSize(this._options.size);\r\n\t\t}\r\n\r\n\t\t// test for size set as string\r\n\t\tif (typeof this._options.minSize === 'string') {\r\n\t\t\tthis._options.minSize = stringToSize(this._options.minSize);\r\n\t\t}\r\n\r\n\t\t// reference to original element so we can restore original situation\r\n\t\tthis._originalElement = element;\r\n\t\tthis._originalElementInner = element.innerHTML;\r\n\t\tthis._originalElementAttributes = getElementAttributes(element);\r\n\r\n\t\t// should be file input, image or slim wrapper, if not wrapper, wrap\r\n\t\tif (!isWrapper(element)) {\r\n\r\n\t\t\tthis._element = wrap(element);\r\n\t\t\tthis._element.className = element.className;\r\n\t\t\telement.className = '';\r\n\r\n\t\t\t// ratio is used for CSS so let's set default attribute\r\n\t\t\tthis._element.setAttribute('data-ratio', this._options.ratio);\r\n\t\t} else {\r\n\t\t\tthis._element = element;\r\n\t\t}\r\n\t\tthis._element.classList.add('slim');\r\n\t\tthis._element.setAttribute('data-state', 'init');\r\n\r\n\t\t// editor state\r\n\t\tthis._state = [];\r\n\r\n\t\t// internal timer array for async processes\r\n\t\tthis._timers = [];\r\n\r\n\t\t// the source element (can either be an input or an img)\r\n\t\tthis._input = null;\r\n\r\n\t\t// the source element unique name if is input type file\r\n\t\tthis._inputReference = null;\r\n\r\n\t\t// the output element (hidden input that contains the resulting json object)\r\n\t\tthis._output = null;\r\n\r\n\t\t// current image ratio\r\n\t\tthis._ratio = null;\r\n\r\n\t\t// was required field\r\n\t\tthis._isRequired = false;\r\n\r\n\t\t// components\r\n\t\tthis._imageHopper = null;\r\n\t\tthis._imageEditor = null;\r\n\r\n\t\t// progress path\r\n\t\tthis._progressEnabled = true;\r\n\r\n\t\t// resulting data\r\n\t\tthis._data = {};\r\n\t\tthis._resetData();\r\n\r\n\t\t// the circle below the mouse hover point\r\n\t\tthis._drip = null;\r\n\r\n\t\t// had initial image\r\n\t\tthis._hasInitialImage = false;\r\n\r\n\t\t// initial crop\r\n\t\tthis._initialCrop = this._options.crop;\r\n\r\n\t\t// initial rotation\r\n\t\tthis._initialRotation = this._options.rotation && this._options.rotation % 90 === 0 ? this._options.rotation : null;\r\n\r\n\t\t// set to true when destroy method is called, used to halt any timeouts or async processes\r\n\t\tthis._isBeingDestroyed = false;\r\n\r\n\t\t// stop here if not supported\r\n\t\tif (!Slim.supported) {\r\n\t\t\tthis._fallback();\r\n\t\t} else {\r\n\t\t\t// let's go!\r\n\t\t\tthis._init();\r\n\t\t}\r\n\t}\r\n\r\n\t_createClass(Slim, [{\r\n\t\tkey: 'setRotation',\r\n\t\tvalue: function setRotation(rotation, callback) {\r\n\r\n\t\t\tif (typeof rotation !== 'number' && rotation % 90 !== 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._data.actions.rotation = rotation;\r\n\t\t\tvar isTilted = this._data.actions.rotation % 180 !== 0;\r\n\r\n\t\t\tif (this._data.input.image) {\r\n\t\t\t\tvar w = isTilted ? this._data.input.image.height : this._data.input.image.width;\r\n\t\t\t\tvar h = isTilted ? this._data.input.image.width : this._data.input.image.height;\r\n\t\t\t\tthis._data.actions.crop = getAutoCropRect(w, h, this._ratio);\r\n\t\t\t\tthis._data.actions.crop.type = CropType.AUTO;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._data.input.image && callback) {\r\n\t\t\t\tthis._manualTransform(callback);\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'setSize',\r\n\t\tvalue: function setSize(dimensions, callback) {\r\n\r\n\t\t\tif (typeof dimensions === 'string') {\r\n\t\t\t\tdimensions = stringToSize(dimensions);\r\n\t\t\t}\r\n\r\n\t\t\tif (!dimensions || !dimensions.width || !dimensions.height) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._options.size = clone(dimensions);\r\n\t\t\tthis._data.actions.size = clone(dimensions);\r\n\r\n\t\t\t// if a crop area is set do re-crop to conform to size\r\n\t\t\tif (this._data.input.image && callback) {\r\n\t\t\t\tthis._manualTransform(callback);\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'setRatio',\r\n\t\tvalue: function setRatio(ratio, callback) {\r\n\t\t\tvar _this11 = this;\r\n\r\n\t\t\tif (!ratio || typeof ratio !== 'string') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._options.ratio = ratio;\r\n\r\n\t\t\tif (this._isFixedRatio()) {\r\n\r\n\t\t\t\tvar parts = intSplit(this._options.ratio, ':');\r\n\t\t\t\tthis._ratio = parts[1] / parts[0];\r\n\r\n\t\t\t\tif (this._data.input.image && callback) {\r\n\t\t\t\t\tthis._cropAuto(function (data) {\r\n\t\t\t\t\t\t_this11._scaleDropArea(_this11._ratio);\r\n\t\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\t\tcallback(data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif (this._data.input.image) {\r\n\t\t\t\t\t\tthis._data.actions.crop = getAutoCropRect(this._data.input.image.width, this._data.input.image.height, this._ratio);\r\n\t\t\t\t\t\tthis._data.actions.crop.type = CropType.AUTO;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._scaleDropArea(this._ratio);\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// methods\r\n\t\t// Test if this Slim object has been bound to the given element\r\n\r\n\t}, {\r\n\t\tkey: 'isAttachedTo',\r\n\t\tvalue: function isAttachedTo(element) {\r\n\t\t\treturn this._element === element || this._originalElement === element;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'isDetached',\r\n\t\tvalue: function isDetached() {\r\n\t\t\treturn this._element.parentNode === null;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'load',\r\n\t\tvalue: function load(src) {\r\n\t\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\t\t\tvar callback = arguments[2];\r\n\r\n\r\n\t\t\tif (typeof options === 'function') {\r\n\t\t\t\tcallback = options;\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// store in options\r\n\t\t\t\tthis._options.crop = options.crop;\r\n\r\n\t\t\t\t// set rotation\r\n\t\t\t\tthis._options.rotation = options.rotation;\r\n\r\n\t\t\t\t// initial rotation\r\n\t\t\t\tthis._initialRotation = options.rotation && options.rotation % 90 === 0 ? options.rotation : null;\r\n\r\n\t\t\t\t// set initial crop\r\n\t\t\t\tthis._initialCrop = this._options.crop;\r\n\t\t\t}\r\n\r\n\t\t\tthis._load(src, callback);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'upload',\r\n\t\tvalue: function upload(callback) {\r\n\t\t\tthis._doUpload(callback);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'download',\r\n\t\tvalue: function download() {\r\n\t\t\tthis._doDownload();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'remove',\r\n\t\tvalue: function remove() {\r\n\t\t\treturn this._doRemove();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'destroy',\r\n\t\tvalue: function destroy() {\r\n\t\t\tthis._doDestroy();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'edit',\r\n\t\tvalue: function edit() {\r\n\t\t\tthis._doEdit();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'crop',\r\n\t\tvalue: function crop(rect, callback) {\r\n\t\t\tthis._crop(rect.x, rect.y, rect.width, rect.height, callback);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'containsImage',\r\n\t\tvalue: function containsImage() {\r\n\t\t\treturn this._data.input.name !== null;\r\n\t\t}\r\n\r\n\t\t/**\r\n   * State Related\r\n   */\r\n\r\n\t}, {\r\n\t\tkey: '_canInstantEdit',\r\n\t\tvalue: function _canInstantEdit() {\r\n\t\t\treturn this._options.instantEdit && !this._isInitialising;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_getFileInput',\r\n\t\tvalue: function _getFileInput() {\r\n\t\t\treturn this._element.querySelector('input[type=file]');\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_getInitialImage',\r\n\t\tvalue: function _getInitialImage() {\r\n\t\t\treturn this._element.querySelector('img');\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_getInputElement',\r\n\t\tvalue: function _getInputElement() {\r\n\t\t\treturn this._getFileInput() || this._getInitialImage();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_getRatioSpacerElement',\r\n\t\tvalue: function _getRatioSpacerElement() {\r\n\t\t\treturn this._element.children[0];\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_isImageOnly',\r\n\t\tvalue: function _isImageOnly() {\r\n\t\t\treturn this._input.nodeName !== 'INPUT';\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_isFixedRatio',\r\n\t\tvalue: function _isFixedRatio() {\r\n\t\t\treturn this._options.ratio.indexOf(':') !== -1;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_isAutoCrop',\r\n\t\tvalue: function _isAutoCrop() {\r\n\t\t\treturn this._data.actions.crop.type === CropType.AUTO;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_toggleButton',\r\n\t\tvalue: function _toggleButton(action, state) {\r\n\t\t\ttoggleDisplayBySelector('.slim-btn[data-action=\"' + action + '\"]', state, this._element);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_clearState',\r\n\t\tvalue: function _clearState() {\r\n\t\t\tthis._state = [];\r\n\t\t\tthis._updateState();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_removeState',\r\n\t\tvalue: function _removeState(state) {\r\n\t\t\tthis._state = this._state.filter(function (item) {\r\n\t\t\t\treturn item !== state;\r\n\t\t\t});\r\n\t\t\tthis._updateState();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_addState',\r\n\t\tvalue: function _addState(state) {\r\n\t\t\tif (inArray(state, this._state)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._state.push(state);\r\n\t\t\tthis._updateState();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_updateState',\r\n\t\tvalue: function _updateState() {\r\n\t\t\tif (!this._element) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._element.setAttribute('data-state', this._state.join(','));\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_resetData',\r\n\t\tvalue: function _resetData() {\r\n\r\n\t\t\t// resets data object\r\n\t\t\tthis._data = {\r\n\t\t\t\tserver: null,\r\n\t\t\t\tmeta: clone(this._options.meta),\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tfield: this._inputReference,\r\n\t\t\t\t\tname: null,\r\n\t\t\t\t\ttype: null,\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0,\r\n\t\t\t\t\tfile: null\r\n\t\t\t\t},\r\n\t\t\t\toutput: {\r\n\t\t\t\t\timage: null,\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t},\r\n\t\t\t\tactions: {\r\n\t\t\t\t\trotation: null,\r\n\t\t\t\t\tcrop: null,\r\n\t\t\t\t\tsize: null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// resets hidden input clone (has not yet been created when reset call in constructor, hence the check)\r\n\t\t\tif (this._output) {\r\n\t\t\t\tthis._output.value = '';\r\n\t\t\t}\r\n\r\n\t\t\t// should reset file input\r\n\t\t\tresetFileInput(this._getFileInput());\r\n\t\t}\r\n\r\n\t\t/**\r\n   * Initialisation\r\n   */\r\n\r\n\t}, {\r\n\t\tkey: '_init',\r\n\t\tvalue: function _init() {\r\n\t\t\tvar _this12 = this;\r\n\r\n\t\t\t// busy initialising\r\n\t\t\tthis._isInitialising = true;\r\n\r\n\t\t\t// cropper root is not file input\r\n\t\t\tthis._addState('empty');\r\n\r\n\t\t\t// define input reference field name\r\n\t\t\tif (inArray('input', this._options.post)) {\r\n\t\t\t\tthis._inputReference = 'slim_input_' + this._uid;\r\n\t\t\t}\r\n\r\n\t\t\t// get input element\r\n\t\t\tthis._input = this._getInputElement();\r\n\r\n\t\t\t// if no input supplied we'll automatically create one\r\n\t\t\tif (!this._input) {\r\n\t\t\t\tthis._input = create('input');\r\n\t\t\t\tthis._input.type = 'file';\r\n\t\t\t\tthis._element.appendChild(this._input);\r\n\t\t\t}\r\n\r\n\t\t\t// get required state of input element\r\n\t\t\tthis._isRequired = this._input.required === true;\r\n\r\n\t\t\t// set or create output field\r\n\t\t\tthis._output = this._element.querySelector('input[type=hidden]');\r\n\r\n\t\t\t// if no output element defined we'll create one automagically\r\n\t\t\tif (!this._output) {\r\n\t\t\t\tthis._output = create('input');\r\n\t\t\t\tthis._output.type = 'hidden';\r\n\t\t\t\tthis._output.name = this._input.name || this._options.defaultInputName;\r\n\t\t\t\tthis._element.appendChild(this._output);\r\n\t\t\t} else {\r\n\t\t\t\tvar initialData = null;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tinitialData = JSON.parse(this._output.value);\r\n\t\t\t\t} catch (e) {}\r\n\t\t\t\tif (initialData) {\r\n\t\t\t\t\tvar img = new Image();\r\n\t\t\t\t\timg.src = initialData.output.image;\r\n\t\t\t\t\timg.setAttribute('data-filename', initialData.output.name);\r\n\t\t\t\t\tthis._element.insertBefore(img, this._element.firstChild);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// prevent the original file input field from posting (value will be duplicated to output field)\r\n\t\t\tthis._input.removeAttribute('name');\r\n\r\n\t\t\t// create drop area\r\n\t\t\tvar area = create('div', 'slim-area');\r\n\r\n\t\t\t// test if contains initial image\r\n\t\t\tvar initialImage = this._getInitialImage();\r\n\t\t\tvar initialImageSrc = (initialImage || {}).src;\r\n\t\t\tvar initialImageName = initialImage ? initialImage.getAttribute('data-filename') : null;\r\n\r\n\t\t\tif (initialImageSrc) {\r\n\t\t\t\tthis._hasInitialImage = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis._initialCrop = null;\r\n\t\t\t\tthis._initialRotation = null;\r\n\t\t\t}\r\n\r\n\t\t\tvar resultHTML = '\\n\\t\\t<div class=\"slim-result\">\\n\\t\\t\\t<img class=\"in\" style=\"opacity:0\" ' + (initialImageSrc ? 'src=\"' + initialImageSrc + '\"' : '') + '><img><img style=\"opacity:0\">\\n\\t\\t</div>';\r\n\r\n\t\t\t// add drop overlay\r\n\t\t\tif (this._isImageOnly()) {\r\n\t\t\t\tarea.innerHTML = '\\n\\t\\t\\t\\t' + SlimLoaderHTML + '\\n\\t\\t\\t\\t' + SlimUploadStatusHTML + '\\n\\t\\t\\t\\t' + resultHTML + '\\n\\t\\t\\t\\t<div class=\"slim-status\"><div class=\"slim-label-loading\">' + (this._options.labelLoading || '') + '</div></div>\\n\\t\\t\\t';\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// if should post input data\r\n\t\t\t\tif (inArray('input', this._options.post)) {\r\n\r\n\t\t\t\t\tthis._data.input.field = this._inputReference;\r\n\r\n\t\t\t\t\t// if is sync post\r\n\t\t\t\t\t// and should post input data\r\n\t\t\t\t\tif (!this._options.service) {\r\n\t\t\t\t\t\tthis._input.name = this._inputReference;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set common image mime type to the accept attribute\r\n\t\t\t\tvar mimetypes = void 0;\r\n\t\t\t\tif (!this._input.hasAttribute('accept') || this._input.getAttribute('accept') === 'image/*') {\r\n\t\t\t\t\tmimetypes = getCommonMimeTypes();\r\n\t\t\t\t\tthis._input.setAttribute('accept', mimetypes.join(','));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmimetypes = this._input.accept.split(',').map(function (mimetype) {\r\n\t\t\t\t\t\treturn mimetype.trim();\r\n\t\t\t\t\t}).filter(function (mimetype) {\r\n\t\t\t\t\t\treturn mimetype.length > 0;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// setup hopper\r\n\t\t\t\tthis._imageHopper = new FileHopper();\r\n\t\t\t\tthis._imageHopper.accept = mimetypes;\r\n\t\t\t\tthis._imageHopper.allowURLs = typeof this._options.fetcher === 'string';\r\n\t\t\t\tthis._element.appendChild(this._imageHopper.element);\r\n\t\t\t\tHopperEvents.forEach(function (e) {\r\n\t\t\t\t\t_this12._imageHopper.element.addEventListener(e, _this12);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// render area\r\n\t\t\t\tarea.innerHTML = '\\n\\t\\t\\t\\t' + SlimLoaderHTML + '\\n\\t\\t\\t\\t' + SlimUploadStatusHTML + '\\n\\t\\t\\t\\t<div class=\"slim-drip\"><span><span></span></span></div>\\n\\t\\t\\t\\t<div class=\"slim-status\"><div class=\"slim-label\">' + (this._options.label || '') + '</div><div class=\"slim-label-loading\">' + (this._options.labelLoading || '') + '</div></div>\\n\\t\\t\\t\\t' + resultHTML + '\\n\\t\\t\\t';\r\n\r\n\t\t\t\t// start listening for events so we can load image on file input change\r\n\t\t\t\tthis._input.addEventListener('change', this);\r\n\t\t\t}\r\n\r\n\t\t\t// add area node\r\n\t\t\tthis._element.appendChild(area);\r\n\r\n\t\t\t// add button group\r\n\t\t\tthis._btnGroup = create('div', 'slim-btn-group');\r\n\t\t\tthis._btnGroup.style.display = 'none';\r\n\t\t\tthis._element.appendChild(this._btnGroup);\r\n\t\t\tSlimButtons.filter(function (c) {\r\n\t\t\t\treturn _this12._isButtonAllowed(c);\r\n\t\t\t}).forEach(function (c) {\r\n\t\t\t\tvar prop = capitalizeFirstLetter(c);\r\n\t\t\t\tvar label = _this12._options['button' + prop + 'Label'];\r\n\t\t\t\tvar title = _this12._options['button' + prop + 'Title'] || label;\r\n\t\t\t\tvar className = _this12._options['button' + prop + 'ClassName'];\r\n\t\t\t\tvar btn = create('button', 'slim-btn slim-btn-' + c + (className ? ' ' + className : ''));\r\n\t\t\t\tbtn.innerHTML = label;\r\n\t\t\t\tbtn.title = title;\r\n\t\t\t\tbtn.type = 'button';\r\n\t\t\t\tbtn.addEventListener('click', _this12);\r\n\t\t\t\tbtn.setAttribute('data-action', c);\r\n\t\t\t\t_this12._btnGroup.appendChild(btn);\r\n\t\t\t});\r\n\r\n\t\t\t// add ratio padding\r\n\t\t\tif (this._isFixedRatio()) {\r\n\t\t\t\tvar parts = intSplit(this._options.ratio, ':');\r\n\t\t\t\tthis._ratio = parts[1] / parts[0];\r\n\t\t\t\tthis._scaleDropArea(this._ratio);\r\n\t\t\t}\r\n\r\n\t\t\t// setup loader\r\n\t\t\tthis._updateProgress(.5);\r\n\r\n\t\t\t// preload source\r\n\t\t\tif (initialImageSrc) {\r\n\r\n\t\t\t\tthis._load(initialImageSrc, function () {\r\n\t\t\t\t\t_this12._onInit();\r\n\t\t\t\t}, { name: initialImageName });\r\n\t\t\t} else {\r\n\t\t\t\tthis._onInit();\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onInit',\r\n\t\tvalue: function _onInit() {\r\n\t\t\tvar _this13 = this;\r\n\r\n\t\t\t// we're done initialising\r\n\t\t\tthis._isInitialising = false;\r\n\r\n\t\t\t// done initialising now, else is only called after image load\r\n\t\t\tvar done = function done() {\r\n\t\t\t\t// we call this async so the constructor of Slim has returned before the onInit is called, allowing clean immidiate destroy\r\n\t\t\t\tvar timer = setTimeout(function () {\r\n\t\t\t\t\t_this13._options.didInit.apply(_this13, [_this13.data, _this13]);\r\n\t\t\t\t}, 0);\r\n\t\t\t\t_this13._timers.push(timer);\r\n\t\t\t};\r\n\r\n\t\t\t// save initial image\r\n\t\t\tif (this._options.saveInitialImage && this.containsImage()) {\r\n\r\n\t\t\t\tif (!this._options.service) {\r\n\t\t\t\t\tthis._save(function () {\r\n\t\t\t\t\t\tdone();\r\n\t\t\t\t\t}, false);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// by default upload button is disabled for existing images\r\n\t\t\t\tif (this._options.service && this.containsImage()) {\r\n\t\t\t\t\tthis._toggleButton('upload', false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdone();\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_updateProgress',\r\n\t\tvalue: function _updateProgress(progress) {\r\n\r\n\t\t\tprogress = Math.min(.99999, progress);\r\n\r\n\t\t\tif (!this._element) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._progressEnabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar loader = this._element.querySelector('.slim-loader');\r\n\t\t\tif (!loader) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar size = loader.offsetWidth;\r\n\t\t\tvar paths = loader.querySelectorAll('path');\r\n\t\t\tvar ringWidth = parseInt(paths[0].getAttribute('stroke-width'), 10);\r\n\r\n\t\t\tpaths[0].setAttribute('d', percentageArc(size * .5, size * .5, size * .5 - ringWidth, .9999));\r\n\r\n\t\t\tpaths[1].setAttribute('d', percentageArc(size * .5, size * .5, size * .5 - ringWidth, progress));\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_startProgress',\r\n\t\tvalue: function _startProgress(cb) {\r\n\t\t\tvar _this14 = this;\r\n\r\n\t\t\tif (!this._element) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._progressEnabled = false;\r\n\r\n\t\t\tvar loader = this._element.querySelector('.slim-loader');\r\n\t\t\tif (!loader) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar ring = loader.children[0];\r\n\r\n\t\t\tthis._stopProgressLoop(function () {\r\n\r\n\t\t\t\tloader.removeAttribute('style');\r\n\t\t\t\tring.removeAttribute('style');\r\n\r\n\t\t\t\t_this14._progressEnabled = true;\r\n\r\n\t\t\t\t_this14._updateProgress(0);\r\n\r\n\t\t\t\t_this14._progressEnabled = false;\r\n\r\n\t\t\t\tsnabbt(ring, {\r\n\r\n\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tduration: 250,\r\n\t\t\t\t\tcomplete: function complete() {\r\n\t\t\t\t\t\t_this14._progressEnabled = true;\r\n\t\t\t\t\t\tif (cb) {\r\n\t\t\t\t\t\t\tcb();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_stopProgress',\r\n\t\tvalue: function _stopProgress() {\r\n\t\t\tvar _this15 = this;\r\n\r\n\t\t\tif (!this._element) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar loader = this._element.querySelector('.slim-loader');\r\n\t\t\tif (!loader) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar ring = loader.children[0];\r\n\r\n\t\t\tthis._updateProgress(1);\r\n\r\n\t\t\tsnabbt(ring, {\r\n\t\t\t\tfromOpacity: 1,\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tduration: 250,\r\n\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\tloader.removeAttribute('style');\r\n\t\t\t\t\tring.removeAttribute('style');\r\n\r\n\t\t\t\t\t_this15._updateProgress(.5);\r\n\r\n\t\t\t\t\t_this15._progressEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_startProgressLoop',\r\n\t\tvalue: function _startProgressLoop() {\r\n\r\n\t\t\tif (!this._element) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// start loading animation\r\n\t\t\tvar loader = this._element.querySelector('.slim-loader');\r\n\t\t\tif (!loader) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar ring = loader.children[0];\r\n\t\t\tloader.removeAttribute('style');\r\n\t\t\tring.removeAttribute('style');\r\n\r\n\t\t\t// set infinite load state\r\n\t\t\tthis._updateProgress(.5);\r\n\r\n\t\t\t// repeat!\r\n\t\t\tvar repeat = 1000;\r\n\r\n\t\t\tsnabbt(loader, 'stop');\r\n\r\n\t\t\tsnabbt(loader, {\r\n\t\t\t\trotation: [0, 0, -(Math.PI * 2) * repeat],\r\n\t\t\t\teasing: 'linear',\r\n\t\t\t\tduration: repeat * 1000\r\n\t\t\t});\r\n\r\n\t\t\tsnabbt(ring, {\r\n\t\t\t\tfromOpacity: 0,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tduration: 250\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_stopProgressLoop',\r\n\t\tvalue: function _stopProgressLoop(callback) {\r\n\r\n\t\t\tif (!this._element) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar loader = this._element.querySelector('.slim-loader');\r\n\t\t\tif (!loader) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar ring = loader.children[0];\r\n\r\n\t\t\tsnabbt(ring, {\r\n\t\t\t\tfromOpacity: parseFloat(ring.style.opacity),\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tduration: 250,\r\n\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\tsnabbt(loader, 'stop');\r\n\r\n\t\t\t\t\tloader.removeAttribute('style');\r\n\t\t\t\t\tring.removeAttribute('style');\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_isButtonAllowed',\r\n\t\tvalue: function _isButtonAllowed(button) {\r\n\r\n\t\t\tif (button === 'edit') {\r\n\t\t\t\treturn this._options.edit;\r\n\t\t\t}\r\n\r\n\t\t\tif (button === 'download') {\r\n\t\t\t\treturn this._options.download;\r\n\t\t\t}\r\n\r\n\t\t\tif (button === 'upload') {\r\n\r\n\t\t\t\t// if no service defined upload button makes no sense\r\n\t\t\t\tif (!this._options.service) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if push mode is set, no need for upload button\r\n\t\t\t\tif (this._options.push) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set upload button\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif (button === 'remove') {\r\n\t\t\t\treturn !this._isImageOnly();\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_fallback',\r\n\t\tvalue: function _fallback() {\r\n\r\n\t\t\t// create status area\r\n\t\t\tvar area = create('div', 'slim-area');\r\n\t\t\tarea.innerHTML = '\\n\\t\\t\\t<div class=\"slim-status\"><div class=\"slim-label\">' + (this._options.label || '') + '</div></div>\\n\\t\\t';\r\n\t\t\tthis._element.appendChild(area);\r\n\r\n\t\t\tthis._throwError(this._options.statusNoSupport);\r\n\t\t}\r\n\r\n\t\t/**\r\n   * Event routing\r\n   */\r\n\r\n\t}, {\r\n\t\tkey: 'handleEvent',\r\n\t\tvalue: function handleEvent(e) {\r\n\r\n\t\t\tswitch (e.type) {\r\n\t\t\t\tcase 'click':\r\n\t\t\t\t\tthis._onClick(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'change':\r\n\t\t\t\t\tthis._onChange(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'cancel':\r\n\t\t\t\t\tthis._onCancel(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confirm':\r\n\t\t\t\t\tthis._onConfirm(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'file-over':\r\n\t\t\t\t\tthis._onFileOver(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'file-out':\r\n\t\t\t\t\tthis._onFileOut(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'file-drop':\r\n\t\t\t\t\tthis._onDropFile(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'file-invalid':\r\n\t\t\t\t\tthis._onInvalidFile(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'file-invalid-drop':\r\n\t\t\t\t\tthis._onInvalidFileDrop(e);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_getIntro',\r\n\t\tvalue: function _getIntro() {\r\n\t\t\treturn this._element.querySelector('.slim-result .in');\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_getOutro',\r\n\t\tvalue: function _getOutro() {\r\n\t\t\treturn this._element.querySelector('.slim-result .out');\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_getInOut',\r\n\t\tvalue: function _getInOut() {\r\n\t\t\treturn this._element.querySelectorAll('.slim-result img');\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_getDrip',\r\n\t\tvalue: function _getDrip() {\r\n\t\t\tif (!this._drip) {\r\n\t\t\t\tthis._drip = this._element.querySelector('.slim-drip > span');\r\n\t\t\t}\r\n\t\t\treturn this._drip;\r\n\t\t}\r\n\r\n\t\t// errors\r\n\r\n\t}, {\r\n\t\tkey: '_throwError',\r\n\t\tvalue: function _throwError(error) {\r\n\r\n\t\t\tthis._addState('error');\r\n\r\n\t\t\tthis._element.querySelector('.slim-label').style.display = 'none';\r\n\r\n\t\t\tvar node = this._element.querySelector('.slim-error');\r\n\t\t\tif (!node) {\r\n\t\t\t\tnode = create('div', 'slim-error');\r\n\t\t\t\tthis._element.querySelector('.slim-status').appendChild(node);\r\n\t\t\t}\r\n\r\n\t\t\tnode.innerHTML = error;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_removeError',\r\n\t\tvalue: function _removeError() {\r\n\r\n\t\t\tthis._removeState('error');\r\n\t\t\tthis._element.querySelector('.slim-label').style.display = '';\r\n\r\n\t\t\tvar error = this._element.querySelector('.slim-error');\r\n\t\t\tif (error) {\r\n\t\t\t\terror.parentNode.removeChild(error);\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_openFileDialog',\r\n\t\tvalue: function _openFileDialog() {\r\n\t\t\tthis._removeError();\r\n\t\t\tthis._input.click();\r\n\t\t}\r\n\r\n\t\t// drop area clicked\r\n\r\n\t}, {\r\n\t\tkey: '_onClick',\r\n\t\tvalue: function _onClick(e) {\r\n\t\t\tvar _this16 = this;\r\n\r\n\t\t\tvar list = e.target.classList;\r\n\t\t\tvar target = e.target;\r\n\r\n\t\t\t// no preview, so possible to drop file\r\n\t\t\tif (list.contains('slim-file-hopper')) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis._openFileDialog();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// decide what button was clicked\r\n\t\t\tswitch (target.getAttribute('data-action')) {\r\n\t\t\t\tcase 'remove':\r\n\t\t\t\t\tthis._options.willRemove.apply(this, [this.data, function () {\r\n\t\t\t\t\t\t_this16._doRemove();\r\n\t\t\t\t\t}]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'edit':\r\n\t\t\t\t\tthis._doEdit();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'download':\r\n\t\t\t\t\tthis._doDownload();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'upload':\r\n\t\t\t\t\tthis._doUpload();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onInvalidFileDrop',\r\n\t\tvalue: function _onInvalidFileDrop() {\r\n\r\n\t\t\tthis._onInvalidFile();\r\n\r\n\t\t\tthis._removeState('file-over');\r\n\r\n\t\t\t// animate out drip\r\n\t\t\tvar drip = this._getDrip();\r\n\t\t\tsnabbt(drip.firstChild, {\r\n\t\t\t\tfromScale: [.5, .5],\r\n\t\t\t\tscale: [0, 0],\r\n\t\t\t\tfromOpacity: .5,\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tduration: 150,\r\n\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\t// clean up transforms\r\n\t\t\t\t\tresetTransforms(drip.firstChild);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onInvalidFile',\r\n\t\tvalue: function _onInvalidFile() {\r\n\r\n\t\t\tvar types = this._imageHopper.accept.map(getExtensionByMimeType);\r\n\t\t\tvar error = this._options.statusFileType.replace('$0', types.join(', '));\r\n\t\t\tthis._throwError(error);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onImageTooSmall',\r\n\t\tvalue: function _onImageTooSmall() {\r\n\r\n\t\t\tvar error = this._options.statusImageTooSmall.replace('$0', this._options.minSize.width + ' \\xD7 ' + this._options.minSize.height);\r\n\t\t\tthis._throwError(error);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onOverWeightFile',\r\n\t\tvalue: function _onOverWeightFile() {\r\n\r\n\t\t\tvar error = this._options.statusFileSize.replace('$0', this._options.maxFileSize);\r\n\t\t\tthis._throwError(error);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onRemoteURLProblem',\r\n\t\tvalue: function _onRemoteURLProblem(error) {\r\n\t\t\tthis._throwError(error);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onFileOver',\r\n\t\tvalue: function _onFileOver(e) {\r\n\r\n\t\t\tthis._addState('file-over');\r\n\t\t\tthis._removeError();\r\n\r\n\t\t\t// animations\r\n\t\t\tvar drip = this._getDrip();\r\n\r\n\t\t\t// move around drip\r\n\t\t\tvar matrix = snabbt.createMatrix();\r\n\t\t\tmatrix.translate(e.detail.x, e.detail.y, 0);\r\n\t\t\tsnabbt.setElementTransform(drip, matrix);\r\n\r\n\t\t\t// on first entry fade in blob\r\n\t\t\tif (this._imageHopper.dragPath.length == 1) {\r\n\r\n\t\t\t\t// show\r\n\t\t\t\tdrip.style.opacity = 1;\r\n\r\n\t\t\t\t// animate in\r\n\t\t\t\tsnabbt(drip.firstChild, {\r\n\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\topacity: .5,\r\n\t\t\t\t\tfromScale: [0, 0],\r\n\t\t\t\t\tscale: [.5, .5],\r\n\t\t\t\t\tduration: 150\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onFileOut',\r\n\t\tvalue: function _onFileOut(e) {\r\n\r\n\t\t\tthis._removeState('file-over');\r\n\t\t\tthis._removeState('file-invalid');\r\n\t\t\tthis._removeError();\r\n\r\n\t\t\t// move to last position\r\n\t\t\tvar drip = this._getDrip();\r\n\t\t\tvar matrix = snabbt.createMatrix();\r\n\t\t\tmatrix.translate(e.detail.x, e.detail.y, 0);\r\n\t\t\tsnabbt.setElementTransform(drip, matrix);\r\n\r\n\t\t\t// animate out\r\n\t\t\tsnabbt(drip.firstChild, {\r\n\t\t\t\tfromScale: [.5, .5],\r\n\t\t\t\tscale: [0, 0],\r\n\t\t\t\tfromOpacity: .5,\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tduration: 150,\r\n\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\t// clean up transforms\r\n\t\t\t\t\tresetTransforms(drip.firstChild);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n   * When a file was literally dropped on the drop area\r\n   * @param e\r\n   * @private\r\n   */\r\n\r\n\t}, {\r\n\t\tkey: '_onDropFile',\r\n\t\tvalue: function _onDropFile(e) {\r\n\t\t\tvar _this17 = this;\r\n\r\n\t\t\tthis._removeState('file-over');\r\n\r\n\t\t\t// get drip node reference and set to last position\r\n\t\t\tvar drip = this._getDrip();\r\n\t\t\tvar matrix = snabbt.createMatrix();\r\n\t\t\tmatrix.translate(e.detail.x, e.detail.y, 0);\r\n\t\t\tsnabbt.setElementTransform(drip, matrix);\r\n\r\n\t\t\t// get element minimum 10 entries distant from the last entry so we can calculate velocity of movement\r\n\t\t\tvar l = this._imageHopper.dragPath.length;\r\n\t\t\tvar jump = this._imageHopper.dragPath[l - Math.min(10, l)];\r\n\r\n\t\t\t// velocity\r\n\t\t\tvar dx = e.detail.x - jump.x;\r\n\t\t\tvar dy = e.detail.y - jump.y;\r\n\r\n\t\t\tsnabbt(drip, {\r\n\t\t\t\tfromPosition: [e.detail.x, e.detail.y, 0],\r\n\t\t\t\tposition: [e.detail.x + dx, e.detail.y + dy, 0],\r\n\t\t\t\tduration: 200\r\n\t\t\t});\r\n\r\n\t\t\t// animate out drip\r\n\t\t\tsnabbt(drip.firstChild, {\r\n\r\n\t\t\t\tfromScale: [.5, .5],\r\n\t\t\t\tscale: [2, 2],\r\n\t\t\t\tfromOpacity: 1,\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tduration: 200,\r\n\r\n\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\t// clean up transforms\r\n\t\t\t\t\tresetTransforms(drip.firstChild);\r\n\r\n\t\t\t\t\t// load dropped resource\r\n\t\t\t\t\t_this17._load(e.target.files[0]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n   * When a file has been selected after a click on the drop area\r\n   * @param e\r\n   * @private\r\n   */\r\n\r\n\t}, {\r\n\t\tkey: '_onChange',\r\n\t\tvalue: function _onChange(e) {\r\n\r\n\t\t\tif (e.target.files.length) {\r\n\t\t\t\tthis._load(e.target.files[0]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n   * Loads a resource (blocking operation)\r\n   * @param resource\r\n   * @param callback(err)\r\n   * @param options\r\n   * @private\r\n   */\r\n\r\n\t}, {\r\n\t\tkey: '_load',\r\n\t\tvalue: function _load(resource, callback, options) {\r\n\t\t\tvar _this18 = this;\r\n\r\n\t\t\t// stop here\r\n\t\t\tif (this._isBeingDestroyed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// if currently contains image, remove it\r\n\t\t\tif (this.containsImage()) {\r\n\r\n\t\t\t\tclearTimeout(this._replaceTimeout);\r\n\r\n\t\t\t\tthis._doRemove(function () {\r\n\r\n\t\t\t\t\t_this18._replaceTimeout = setTimeout(function () {\r\n\t\t\t\t\t\t_this18._load(resource, callback, options);\r\n\t\t\t\t\t}, 100);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// no longer empty\r\n\t\t\tthis._removeState('empty');\r\n\t\t\tthis._addState('busy');\r\n\r\n\t\t\t// start loading indicator\r\n\t\t\tthis._startProgressLoop();\r\n\r\n\t\t\t// can't drop any other image while loading\r\n\t\t\tif (this._imageHopper) {\r\n\t\t\t\tthis._imageHopper.enabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tclearTimeout(this._loadTimeout);\r\n\t\t\tvar load = function load() {\r\n\t\t\t\tclearTimeout(_this18._loadTimeout);\r\n\t\t\t\t_this18._loadTimeout = setTimeout(function () {\r\n\r\n\t\t\t\t\tif (_this18._isBeingDestroyed) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_this18._addState('loading');\r\n\r\n\t\t\t\t\tsnabbt(_this18._element.querySelector('.slim-label-loading'), {\r\n\t\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\t\topacity: 1,\r\n\t\t\t\t\t\tduration: 250\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 500);\r\n\t\t\t};\r\n\r\n\t\t\t// early exit\r\n\t\t\tvar exit = function exit() {\r\n\t\t\t\tif (_this18._imageHopper) {\r\n\t\t\t\t\t_this18._imageHopper.enabled = true;\r\n\t\t\t\t}\r\n\t\t\t\t_this18._removeState('loading');\r\n\t\t\t\t_this18._removeState('busy');\r\n\t\t\t\t_this18._addState('empty');\r\n\t\t\t\t_this18._stopProgressLoop();\r\n\t\t\t};\r\n\r\n\t\t\t// turn string based resources (url / base64) into file objects\r\n\t\t\tif (typeof resource === 'string') {\r\n\r\n\t\t\t\tif (resourceIsBase64Data(resource)) {\r\n\t\t\t\t\t// resource is base64 data, turn into file\r\n\t\t\t\t\tthis._load(base64ToBlob(resource), callback, options);\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// will take a while, show loading indicator\r\n\t\t\t\t\tload();\r\n\r\n\t\t\t\t\t// resource is url, load with XHR\r\n\t\t\t\t\tloadURL(resource, function (file) {\r\n\t\t\t\t\t\t// continue with file object\r\n\t\t\t\t\t\t_this18._load(file, callback, options);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// don't continue, wait for load\r\n\t\t\t\treturn;\r\n\t\t\t} else if (typeof resource.remote !== 'undefined' && this._options.fetcher) {\r\n\r\n\t\t\t\tloadRemoteURL(this._options.fetcher, resource.remote, function (error) {\r\n\r\n\t\t\t\t\texit();\r\n\r\n\t\t\t\t\t_this18._onRemoteURLProblem('<p>' + error + '</p>');\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback.apply(_this18, ['remote-url-problem']);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (file) {\r\n\t\t\t\t\t// continue with file object\r\n\t\t\t\t\t_this18._load(file, callback, options);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// don't continue wait for server fetch\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// let's continue with file resource\r\n\t\t\tvar file = resource;\r\n\r\n\t\t\t// re-test if is valid file type\r\n\t\t\t// in case of loading base64 data or url\r\n\t\t\tif (this._imageHopper && this._imageHopper.accept.indexOf(file.type) === -1) {\r\n\r\n\t\t\t\texit();\r\n\r\n\t\t\t\tthis._onInvalidFile();\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\tcallback.apply(this, ['file-invalid']);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// test if too big\r\n\t\t\tif (file.size && this._options.maxFileSize && bytesToMegaBytes(file.size) > this._options.maxFileSize) {\r\n\r\n\t\t\t\texit();\r\n\r\n\t\t\t\tthis._onOverWeightFile();\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\tcallback.apply(this, ['file-too-big']);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// if has loaded image editor set to dirty\r\n\t\t\tif (this._imageEditor) {\r\n\t\t\t\tthis._imageEditor.dirty();\r\n\t\t\t}\r\n\r\n\t\t\t// continue\r\n\t\t\tthis._data.input.name = options && options.name ? options.name : getFileNameByFile(file);\r\n\t\t\tthis._data.input.type = getFileTypeByFile(file);\r\n\t\t\tthis._data.input.size = file.size;\r\n\t\t\tthis._data.input.file = file;\r\n\r\n\t\t\t// fetch resource\r\n\t\t\tgetImageAsCanvas(file, this._options.internalCanvasSize, function (image, meta) {\r\n\r\n\t\t\t\tvar rewind = function rewind() {\r\n\r\n\t\t\t\t\t// rewind state\r\n\t\t\t\t\tif (_this18._imageHopper) {\r\n\t\t\t\t\t\t_this18._imageHopper.enabled = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_this18._removeState('loading');\r\n\t\t\t\t\t_this18._removeState('busy');\r\n\t\t\t\t\t_this18._addState('empty');\r\n\t\t\t\t\t_this18._stopProgressLoop();\r\n\t\t\t\t\t_this18._resetData();\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// if no image, something went wrong\r\n\t\t\t\tif (!image) {\r\n\r\n\t\t\t\t\trewind();\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback.apply(_this18, ['file-not-found']);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// test if image is too small\r\n\t\t\t\tif (!covers(image, _this18._options.minSize)) {\r\n\r\n\t\t\t\t\trewind();\r\n\r\n\t\t\t\t\t_this18._onImageTooSmall();\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback.apply(_this18, ['image-too-small']);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar status = _this18._options.didLoad.apply(_this18, [file, image, meta, _this18]);\r\n\t\t\t\tif (status !== true) {\r\n\r\n\t\t\t\t\trewind();\r\n\r\n\t\t\t\t\tif (status !== false) {\r\n\t\t\t\t\t\t_this18._throwError(status);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback.apply(_this18, [status]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// done loading file\r\n\t\t\t\t_this18._removeState('loading');\r\n\r\n\t\t\t\tvar revealCanvas = function revealCanvas(done) {\r\n\r\n\t\t\t\t\t// done, enable hopper\r\n\t\t\t\t\tif (_this18._imageHopper && _this18._options.dropReplace) {\r\n\t\t\t\t\t\t_this18._imageHopper.enabled = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// do intro stuff\r\n\t\t\t\t\tvar intro = _this18._getIntro();\r\n\r\n\t\t\t\t\t// setup base animation\r\n\t\t\t\t\tvar animation = {\r\n\t\t\t\t\t\tfromScale: [1.25, 1.25],\r\n\t\t\t\t\t\tscale: [1, 1],\r\n\t\t\t\t\t\tfromOpacity: 0,\r\n\t\t\t\t\t\topacity: 1,\r\n\t\t\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\t\t\tresetTransforms(intro);\r\n\r\n\t\t\t\t\t\t\tintro.style.opacity = 1;\r\n\r\n\t\t\t\t\t\t\tdone();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// if not attached to DOM, don't animate\r\n\t\t\t\t\tif (_this18.isDetached()) {\r\n\t\t\t\t\t\tanimation.duration = 1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tanimation.easing = 'spring';\r\n\t\t\t\t\t\tanimation.springConstant = .3;\r\n\t\t\t\t\t\tanimation.springDeceleration = .7;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if is instant edit mode don't zoom out but zoom in\r\n\t\t\t\t\tif (_this18._canInstantEdit()) {\r\n\t\t\t\t\t\tanimation.delay = 500;\r\n\t\t\t\t\t\tanimation.duration = 1;\r\n\r\n\t\t\t\t\t\t// instant edit mode just fire up the editor immidiately\r\n\t\t\t\t\t\t_this18._doEdit();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// reveal loaded image\r\n\t\t\t\t\tsnabbt(intro, animation);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// load the image\r\n\t\t\t\t_this18._loadCanvas(image,\r\n\r\n\t\t\t\t// done loading the canvas\r\n\t\t\t\tfunction (isUploading) {\r\n\r\n\t\t\t\t\t_this18._addState('preview');\r\n\r\n\t\t\t\t\trevealCanvas(function () {\r\n\r\n\t\t\t\t\t\t// don't show buttons when instant editing\r\n\t\t\t\t\t\t// the buttons will be triggered by the closing of the popup\r\n\t\t\t\t\t\tif (!_this18._canInstantEdit() && !isUploading) {\r\n\t\t\t\t\t\t\t_this18._showButtons();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!isUploading) {\r\n\t\t\t\t\t\t\t_this18._stopProgressLoop();\r\n\t\t\t\t\t\t\t_this18._removeState('busy');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\t\tcallback.apply(_this18, [null, _this18.data]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// done uploading\r\n\t\t\t\tfunction () {\r\n\r\n\t\t\t\t\t// don't show buttons when instant editing\r\n\t\t\t\t\tif (!_this18._canInstantEdit()) {\r\n\t\t\t\t\t\t_this18._showButtons();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_this18._removeState('busy');\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_loadCanvas',\r\n\t\tvalue: function _loadCanvas(image, ready, complete) {\r\n\t\t\tvar _this19 = this;\r\n\r\n\t\t\t// halt here if cropper is currently being destroyed\r\n\t\t\tif (this._isBeingDestroyed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// store raw data\r\n\t\t\tthis._data.input.image = image;\r\n\t\t\tthis._data.input.width = image.width;\r\n\t\t\tthis._data.input.height = image.height;\r\n\r\n\t\t\tif (this._initialRotation) {\r\n\t\t\t\tthis._data.actions.rotation = this._initialRotation;\r\n\t\t\t\tthis._initialRotation = null;\r\n\t\t\t}\r\n\r\n\t\t\tvar isTilted = this._data.actions.rotation % 180 !== 0;\r\n\r\n\t\t\t// scales the drop area\r\n\t\t\t// if is 'input' or 'free' parameter\r\n\t\t\tif (!this._isFixedRatio()) {\r\n\t\t\t\tif (this._initialCrop) {\r\n\t\t\t\t\tthis._ratio = this._initialCrop.height / this._initialCrop.width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._ratio = isTilted ? image.width / image.height : image.height / image.width;\r\n\t\t\t\t}\r\n\t\t\t\tthis._scaleDropArea(this._ratio);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._initialCrop) {\r\n\r\n\t\t\t\t// use initial supplied crop rectangle\r\n\t\t\t\tthis._data.actions.crop = clone(this._initialCrop);\r\n\t\t\t\tthis._data.actions.crop.type = CropType.INITIAL;\r\n\r\n\t\t\t\t// clear initial crop, it's no longer useful\r\n\t\t\t\tthis._initialCrop = null;\r\n\t\t\t} else {\r\n\t\t\t\t// get automagical crop rectangle\r\n\t\t\t\tthis._data.actions.crop = getAutoCropRect(isTilted ? image.height : image.width, isTilted ? image.width : image.height, this._ratio);\r\n\t\t\t\tthis._data.actions.crop.type = CropType.AUTO;\r\n\t\t\t}\r\n\r\n\t\t\t// if max size set\r\n\t\t\tif (this._options.size) {\r\n\t\t\t\tthis._data.actions.size = {\r\n\t\t\t\t\twidth: this._options.size.width,\r\n\t\t\t\t\theight: this._options.size.height\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// do initial auto transform\r\n\t\t\tthis._applyTransforms(image, function (transformedImage) {\r\n\r\n\t\t\t\tvar intro = _this19._getIntro();\r\n\t\t\t\tvar scalar = intro.offsetWidth / transformedImage.width;\r\n\r\n\t\t\t\t// store data, if has preview image this prevents initial load from pushing\r\n\t\t\t\tvar willUpload = false;\r\n\r\n\t\t\t\t// can only do auto upload when service is defined and push is enabled...\r\n\t\t\t\tif (_this19._options.service && _this19._options.push) {\r\n\r\n\t\t\t\t\t// ...and is not transformation of initial image\r\n\t\t\t\t\t// + is not instant edit mode\r\n\t\t\t\t\tif (!_this19._hasInitialImage && !_this19._canInstantEdit()) {\r\n\t\t\t\t\t\twillUpload = true;\r\n\t\t\t\t\t\t_this19._stopProgressLoop(function () {\r\n\t\t\t\t\t\t\t_this19._startProgress(function () {\r\n\t\t\t\t\t\t\t\t_this19._updateProgress(.1);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// no service set, and instant edit\r\n\t\t\t\tif (!_this19._canInstantEdit()) {\r\n\r\n\t\t\t\t\t// store data (possibly)\r\n\t\t\t\t\t_this19._save(function () {\r\n\t\t\t\t\t\tif (_this19._isBeingDestroyed) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (willUpload) {\r\n\t\t\t\t\t\t\t_this19._stopProgress();\r\n\t\t\t\t\t\t\tcomplete();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, willUpload);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// show intro animation\r\n\t\t\t\tintro.src = '';\r\n\t\t\t\tintro.src = cloneCanvasScaled(transformedImage, scalar).toDataURL();\r\n\t\t\t\tintro.onload = function () {\r\n\r\n\t\t\t\t\tintro.onload = null;\r\n\r\n\t\t\t\t\t// bail out if we've been cleaned up\r\n\t\t\t\t\tif (_this19._isBeingDestroyed) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ready) {\r\n\t\t\t\t\t\tready(willUpload);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_applyTransforms',\r\n\t\tvalue: function _applyTransforms(image, ready) {\r\n\t\t\tvar _this20 = this;\r\n\r\n\t\t\tvar actions = clone(this._data.actions);\r\n\t\t\tactions.filters = {\r\n\t\t\t\tsharpen: this._options.filterSharpen / 100\r\n\t\t\t};\r\n\t\t\tactions.minSize = this._options.minSize;\r\n\r\n\t\t\ttransformCanvas(image, actions, function (transformedImage) {\r\n\r\n\t\t\t\tvar outputImage = transformedImage;\r\n\r\n\t\t\t\t// if should force/correct output size?\r\n\t\t\t\t// - is forced size set?\r\n\t\t\t\t// - is a discrepancy found between requested output size and transformed size\r\n\t\t\t\tif (_this20._options.forceSize || _this20._options.size && sizeDist(_this20._options.size, transformedImage) == 1) {\r\n\t\t\t\t\toutputImage = create('canvas');\r\n\t\t\t\t\toutputImage.width = _this20._options.size.width;\r\n\t\t\t\t\toutputImage.height = _this20._options.size.height;\r\n\t\t\t\t\tvar ctx = outputImage.getContext('2d');\r\n\t\t\t\t\tctx.drawImage(transformedImage, 0, 0, _this20._options.size.width, _this20._options.size.height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// make sure min size is respected when size is equal to min size\r\n\t\t\t\tif (_this20._options.size && _this20._options.minSize.width === _this20._options.size.width && _this20._options.minSize.height === _this20._options.size.height && (outputImage.width < _this20._options.minSize.width || outputImage.height < _this20._options.minSize.height)) {\r\n\r\n\t\t\t\t\tvar w = Math.max(outputImage.width, _this20._options.minSize.width);\r\n\t\t\t\t\tvar h = Math.max(outputImage.height, _this20._options.minSize.height);\r\n\t\t\t\t\toutputImage = create('canvas');\r\n\t\t\t\t\toutputImage.width = w;\r\n\t\t\t\t\toutputImage.height = h;\r\n\t\t\t\t\tvar _ctx = outputImage.getContext('2d');\r\n\t\t\t\t\t_ctx.drawImage(transformedImage, 0, 0, w, h);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// store output\r\n\t\t\t\t_this20._data.output.width = outputImage.width;\r\n\t\t\t\t_this20._data.output.height = outputImage.height;\r\n\t\t\t\t_this20._data.output.image = outputImage;\r\n\r\n\t\t\t\t_this20._onTransformCanvas(function (transformedData) {\r\n\r\n\t\t\t\t\t_this20._data = transformedData;\r\n\r\n\t\t\t\t\t_this20._options.didTransform.apply(_this20, [_this20.data, _this20]);\r\n\r\n\t\t\t\t\tready(_this20._data.output.image);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_onTransformCanvas',\r\n\t\tvalue: function _onTransformCanvas(ready) {\r\n\r\n\t\t\tthis._options.willTransform.apply(this, [this.data, ready, this]);\r\n\t\t}\r\n\r\n\t\t/**\r\n   * Creates the editor nodes\r\n   * @private\r\n   */\r\n\r\n\t}, {\r\n\t\tkey: '_appendEditor',\r\n\t\tvalue: function _appendEditor() {\r\n\t\t\tvar _this21 = this;\r\n\r\n\t\t\t// we already have an editor\r\n\t\t\tif (this._imageEditor) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// add editor\r\n\t\t\tthis._imageEditor = new ImageEditor(create('div'), {\r\n\t\t\t\tminSize: this._options.minSize,\r\n\r\n\t\t\t\tbuttonConfirmClassName: this._options.buttonConfirmClassName,\r\n\t\t\t\tbuttonCancelClassName: this._options.buttonCancelClassName,\r\n\t\t\t\tbuttonRotateClassName: this._options.buttonRotateClassName,\r\n\r\n\t\t\t\tbuttonConfirmLabel: this._options.buttonConfirmLabel,\r\n\t\t\t\tbuttonCancelLabel: this._options.buttonCancelLabel,\r\n\t\t\t\tbuttonRotateLabel: this._options.buttonRotateLabel,\r\n\r\n\t\t\t\tbuttonConfirmTitle: this._options.buttonConfirmTitle,\r\n\t\t\t\tbuttonCancelTitle: this._options.buttonCancelTitle,\r\n\t\t\t\tbuttonRotateTitle: this._options.buttonRotateTitle\r\n\r\n\t\t\t});\r\n\r\n\t\t\t// listen to events\r\n\t\t\tImageEditorEvents.forEach(function (e) {\r\n\t\t\t\t_this21._imageEditor.element.addEventListener(e, _this21);\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_scaleDropArea',\r\n\t\tvalue: function _scaleDropArea(ratio) {\r\n\t\t\tvar node = this._getRatioSpacerElement();\r\n\t\t\tif (!node || !this._element) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tnode.style.marginBottom = ratio * 100 + '%';\r\n\t\t\tthis._element.setAttribute('data-ratio', '1:' + ratio);\r\n\t\t}\r\n\r\n\t\t/**\r\n   * Data Layer\r\n   * @private\r\n   */\r\n\t\t// image editor closed\r\n\r\n\t}, {\r\n\t\tkey: '_onCancel',\r\n\t\tvalue: function _onCancel(e) {\r\n\r\n\t\t\tthis._removeState('editor');\r\n\r\n\t\t\tthis._options.didCancel.apply(this, [this]);\r\n\r\n\t\t\tthis._showButtons();\r\n\r\n\t\t\tthis._hideEditor();\r\n\r\n\t\t\tif (this._options.instantEdit && !this._hasInitialImage && this._isAutoCrop()) {\r\n\t\t\t\tthis._doRemove();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// user confirmed changes\r\n\r\n\t}, {\r\n\t\tkey: '_onConfirm',\r\n\t\tvalue: function _onConfirm(e) {\r\n\t\t\tvar _this22 = this;\r\n\r\n\t\t\t// if\r\n\t\t\t// - service set\r\n\t\t\t// - and we are pushing\r\n\t\t\t// - and we don't instant edit\r\n\t\t\t// we will upload\r\n\t\t\tvar willUpload = this._options.service && this._options.push;\r\n\t\t\tif (willUpload) {\r\n\t\t\t\tthis._startProgress(function () {\r\n\t\t\t\t\t_this22._updateProgress(.1);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis._startProgressLoop();\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeState('editor');\r\n\r\n\t\t\tthis._addState('busy');\r\n\r\n\t\t\t// clear data\r\n\t\t\tthis._output.value = '';\r\n\r\n\t\t\t// apply new action object to this._data\r\n\t\t\tthis._data.actions.rotation = e.detail.rotation;\r\n\t\t\tthis._data.actions.crop = e.detail.crop;\r\n\t\t\tthis._data.actions.crop.type = CropType.MANUAL;\r\n\r\n\t\t\t// do transforms\r\n\t\t\tthis._applyTransforms(this._data.input.image, function (transformedImage) {\r\n\r\n\t\t\t\t// user confirmed the crop (and changes have been applied to data)\r\n\t\t\t\t_this22._options.didConfirm.apply(_this22, [_this22.data, _this22]);\r\n\r\n\t\t\t\t// set new image result\r\n\t\t\t\tvar images = _this22._getInOut();\r\n\t\t\t\tvar intro = images[0].className === 'out' ? images[0] : images[1];\r\n\t\t\t\tvar outro = intro === images[0] ? images[1] : images[0];\r\n\r\n\t\t\t\tintro.className = 'in';\r\n\t\t\t\tintro.style.opacity = '0';\r\n\t\t\t\tintro.style.zIndex = '2';\r\n\t\t\t\toutro.className = 'out';\r\n\t\t\t\toutro.style.zIndex = '1';\r\n\r\n\t\t\t\t// new image get's\r\n\t\t\t\tintro.src = '';\r\n\t\t\t\tintro.src = cloneCanvasScaled(transformedImage, intro.offsetWidth / transformedImage.width).toDataURL();\r\n\t\t\t\tintro.onload = function () {\r\n\r\n\t\t\t\t\tintro.onload = null;\r\n\r\n\t\t\t\t\t// scale the dropzone\r\n\t\t\t\t\tif (_this22._options.ratio === 'free') {\r\n\t\t\t\t\t\t_this22._ratio = intro.naturalHeight / intro.naturalWidth;\r\n\t\t\t\t\t\t_this22._scaleDropArea(_this22._ratio);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// close the editor\r\n\t\t\t\t\t_this22._hideEditor();\r\n\r\n\t\t\t\t\t// wait a tiny bit so animations sync up nicely\r\n\t\t\t\t\tvar timer = setTimeout(function () {\r\n\r\n\t\t\t\t\t\t// show the preview\r\n\t\t\t\t\t\t_this22._showPreview(intro, function () {\r\n\r\n\t\t\t\t\t\t\t// save the data\r\n\t\t\t\t\t\t\t_this22._save(function (err, data, res) {\r\n\r\n\t\t\t\t\t\t\t\t// done!\r\n\t\t\t\t\t\t\t\t_this22._toggleButton('upload', true);\r\n\r\n\t\t\t\t\t\t\t\tif (willUpload) {\r\n\t\t\t\t\t\t\t\t\t_this22._stopProgress();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t_this22._stopProgressLoop();\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t_this22._removeState('busy');\r\n\r\n\t\t\t\t\t\t\t\t_this22._showButtons();\r\n\t\t\t\t\t\t\t}, willUpload);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, 250);\r\n\r\n\t\t\t\t\t_this22._timers.push(timer);\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_cropAuto',\r\n\t\tvalue: function _cropAuto() {\r\n\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (data) {};\r\n\r\n\r\n\t\t\tvar isTilted = this._data.actions.rotation % 180 !== 0;\r\n\r\n\t\t\tvar rect = getAutoCropRect(isTilted ? this._data.input.image.width : this._data.input.image.height, isTilted ? this._data.input.image.height : this._data.input.image.width, this._ratio);\r\n\r\n\t\t\tthis._crop(rect.x, rect.y, rect.width, rect.height, callback, CropType.AUTO);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_crop',\r\n\t\tvalue: function _crop(x, y, width, height) {\r\n\t\t\tvar callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function (data) {};\r\n\t\t\tvar cropType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : CropType.MANUAL;\r\n\r\n\r\n\t\t\t// clear data\r\n\t\t\tthis._output.value = '';\r\n\r\n\t\t\t// apply new action object to this._data\r\n\t\t\tthis._data.actions.crop = {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\twidth: width,\r\n\t\t\t\theight: height\r\n\t\t\t};\r\n\t\t\tthis._data.actions.crop.type = cropType;\r\n\r\n\t\t\tthis._manualTransform(callback);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_manualTransform',\r\n\t\tvalue: function _manualTransform(callback) {\r\n\t\t\tvar _this23 = this;\r\n\r\n\t\t\tthis._startProgressLoop();\r\n\t\t\tthis._addState('busy');\r\n\r\n\t\t\t// do transforms\r\n\t\t\tthis._applyTransforms(this._data.input.image, function (transformedImage) {\r\n\r\n\t\t\t\t// set new image result\r\n\t\t\t\tvar images = _this23._getInOut();\r\n\t\t\t\tvar intro = images[0].className === 'out' ? images[0] : images[1];\r\n\t\t\t\tvar outro = intro === images[0] ? images[1] : images[0];\r\n\r\n\t\t\t\tintro.className = 'in';\r\n\t\t\t\tintro.style.opacity = '1';\r\n\t\t\t\tintro.style.zIndex = '2';\r\n\t\t\t\toutro.className = 'out';\r\n\t\t\t\toutro.style.zIndex = '0';\r\n\r\n\t\t\t\t// new image\r\n\t\t\t\tintro.src = '';\r\n\t\t\t\tintro.src = cloneCanvasScaled(transformedImage, intro.offsetWidth / transformedImage.width).toDataURL();\r\n\t\t\t\tintro.onload = function () {\r\n\t\t\t\t\tintro.onload = null;\r\n\r\n\t\t\t\t\t// scale the dropzone\r\n\t\t\t\t\tif (_this23._options.ratio === 'free') {\r\n\t\t\t\t\t\t_this23._ratio = intro.naturalHeight / intro.naturalWidth;\r\n\t\t\t\t\t\t_this23._scaleDropArea(_this23._ratio);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// determine if will also upload\r\n\t\t\t\t\tvar willUpload = _this23._options.service && _this23._options.push;\r\n\r\n\t\t\t\t\tvar save = function save() {\r\n\r\n\t\t\t\t\t\t// save the data\r\n\t\t\t\t\t\t_this23._save(function (err, data, res) {\r\n\r\n\t\t\t\t\t\t\t// stop loader\r\n\t\t\t\t\t\t\tif (!willUpload) {\r\n\t\t\t\t\t\t\t\t_this23._stopProgressLoop();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_this23._removeState('busy');\r\n\r\n\t\t\t\t\t\t\tcallback.apply(_this23, [_this23.data]);\r\n\t\t\t\t\t\t}, willUpload);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif (willUpload) {\r\n\t\t\t\t\t\t_this23._startProgress(save);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsave();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_save',\r\n\t\tvalue: function _save() {\r\n\t\t\tvar _this24 = this;\r\n\r\n\t\t\tvar callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\r\n\t\t\tvar allowUpload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\r\n\r\n\r\n\t\t\tif (this._isBeingDestroyed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// flatten data also turns output canvas into data uri\r\n\t\t\t// removes input file object and image object\r\n\t\t\tvar data = this.dataBase64;\r\n\r\n\t\t\t// decide if we need to\r\n\t\t\t// - A. Store the data in an output field\r\n\t\t\t// - B. Upload the data and store the response in output field\r\n\r\n\t\t\t// - we are not doing async uploading (in which case output is used for response)\r\n\t\t\t// - we are not initialising a replaceable image\r\n\t\t\tif (!this._options.service && !(this._isInitialising && !this._isImageOnly())) {\r\n\r\n\t\t\t\tthis._options.willSave.apply(this, [data, function (data) {\r\n\r\n\t\t\t\t\t_this24._store(data);\r\n\r\n\t\t\t\t\t_this24._options.didSave.apply(_this24, [data, _this24]);\r\n\t\t\t\t}, this]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._isBeingDestroyed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// is remote service defined upload async\r\n\t\t\tif (this._options.service && allowUpload) {\r\n\r\n\t\t\t\t// allow user to modify the data\r\n\t\t\t\tthis._options.willSave.apply(this, [data, function (data) {\r\n\r\n\t\t\t\t\t_this24._addState('upload');\r\n\r\n\t\t\t\t\tif (_this24._imageHopper && _this24._options.dropReplace) {\r\n\t\t\t\t\t\t_this24._imageHopper.enabled = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// do the actual uploading\r\n\t\t\t\t\t_this24._upload(data, function (err, res) {\r\n\r\n\t\t\t\t\t\tif (_this24._imageHopper && _this24._options.dropReplace) {\r\n\t\t\t\t\t\t\t_this24._imageHopper.enabled = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// store response\r\n\t\t\t\t\t\tif (!err) {\r\n\t\t\t\t\t\t\t_this24._storeServerResponse(res);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// we did upload data\r\n\t\t\t\t\t\t_this24._options.didUpload.apply(_this24, [err, data, res, _this24]);\r\n\r\n\t\t\t\t\t\t_this24._removeState('upload');\r\n\r\n\t\t\t\t\t\t// done!\r\n\t\t\t\t\t\tcallback(err, data, res);\r\n\t\t\t\t\t});\r\n\t\t\t\t}, this]);\r\n\t\t\t}\r\n\r\n\t\t\t// if no service, we're done here\r\n\t\t\tif (!this._options.service || !allowUpload) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// stores active file information in hidden output field\r\n\r\n\t}, {\r\n\t\tkey: '_storeServerResponse',\r\n\t\tvalue: function _storeServerResponse(data) {\r\n\r\n\t\t\t// remove required flag\r\n\t\t\tif (this._isRequired) {\r\n\t\t\t\tthis._input.required = false;\r\n\t\t\t}\r\n\r\n\t\t\t// store data returned from server\r\n\t\t\tthis._data.server = data;\r\n\r\n\t\t\t// sync with output value\r\n\t\t\tthis._output.value = (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' ? JSON.stringify(this._data.server) : data;\r\n\t\t}\r\n\r\n\t\t// stores data in output field\r\n\r\n\t}, {\r\n\t\tkey: '_store',\r\n\t\tvalue: function _store(data) {\r\n\r\n\t\t\tif (this._isRequired) {\r\n\t\t\t\tthis._input.required = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis._output.value = JSON.stringify(data);\r\n\t\t}\r\n\r\n\t\t// uploads given data to server\r\n\r\n\t}, {\r\n\t\tkey: '_upload',\r\n\t\tvalue: function _upload(data, callback) {\r\n\t\t\tvar _this25 = this;\r\n\r\n\t\t\t// done parsing input file\r\n\t\t\tvar inputParsed = function inputParsed(imageData) {\r\n\r\n\t\t\t\tvar fileData = [];\r\n\t\t\t\tvar formData = new FormData();\r\n\r\n\t\t\t\t// if input should be posted along, append data\r\n\t\t\t\t// to FormData object as file\r\n\t\t\t\tif (inArray('input', _this25._options.post)) {\r\n\r\n\t\t\t\t\t// add to data array\r\n\t\t\t\t\tfileData.push(_this25._data.input.file);\r\n\r\n\t\t\t\t\t// add to formdata\r\n\t\t\t\t\tformData.append(_this25._inputReference, _this25._data.input.file, _this25._data.input.file.name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if image data is defined, turn it into a file object (we can send files if we're uploading)\r\n\t\t\t\tif (inArray('output', _this25._options.post) && _this25._data.output.image !== null && _this25._options.uploadBase64 === false) {\r\n\r\n\t\t\t\t\tvar output = base64ToBlob(data.output.image, data.output.name);\r\n\r\n\t\t\t\t\t// if image head available, inject in output\r\n\t\t\t\t\tif (imageData.imageHead && _this25._options.copyImageHead) {\r\n\r\n\t\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\t\toutput = new Blob([imageData.imageHead, loadImage.blobSlice.call(output, 20)], { type: getMimeTypeFromDataURI(data.output.image) });\r\n\r\n\t\t\t\t\t\t\toutput = blobToFile(output, data.output.name);\r\n\t\t\t\t\t\t} catch (e) {}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// add to data array\r\n\t\t\t\t\tfileData.push(output);\r\n\r\n\t\t\t\t\t// add to formdata\r\n\t\t\t\t\tvar field = 'slim_output_' + _this25._uid;\r\n\t\t\t\t\tdata.output.image = null;\r\n\t\t\t\t\tdata.output.field = field;\r\n\t\t\t\t\tformData.append(field, output, data.output.name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// output dataset\r\n\t\t\t\tformData.append(_this25._output.name, JSON.stringify(data));\r\n\r\n\t\t\t\tvar statusNode = _this25._element.querySelector('.slim-upload-status');\r\n\r\n\t\t\t\tvar requestDecorator = _this25._options.willRequest;\r\n\r\n\t\t\t\t// callback methods\r\n\t\t\t\tvar onProgress = function onProgress(loaded, total) {\r\n\t\t\t\t\t_this25._updateProgress(Math.max(.1, loaded / total));\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar onSuccess = function onSuccess(obj) {\r\n\t\t\t\t\tvar timer = setTimeout(function () {\r\n\r\n\t\t\t\t\t\t// it's possible that Slim has been destroyed in the mean time.\r\n\t\t\t\t\t\tif (_this25._isBeingDestroyed) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstatusNode.innerHTML = _this25._options.statusUploadSuccess;\r\n\t\t\t\t\t\tstatusNode.setAttribute('data-state', 'success');\r\n\t\t\t\t\t\tstatusNode.style.opacity = 1;\r\n\r\n\t\t\t\t\t\t// hide status update after 2 seconds\r\n\t\t\t\t\t\tvar timer = setTimeout(function () {\r\n\t\t\t\t\t\t\tstatusNode.style.opacity = 0;\r\n\t\t\t\t\t\t}, 2000);\r\n\r\n\t\t\t\t\t\t_this25._timers.push(timer);\r\n\t\t\t\t\t}, 250);\r\n\r\n\t\t\t\t\t_this25._timers.push(timer);\r\n\r\n\t\t\t\t\tcallback(null, obj);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar onError = function onError(status) {\r\n\r\n\t\t\t\t\tvar html = '';\r\n\t\t\t\t\tif (status === 'file-too-big') {\r\n\t\t\t\t\t\thtml = _this25._options.statusContentLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thtml = _this25._options.didReceiveServerError.apply(_this25, [status, _this25._options.statusUnknownResponse, _this25]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// when an error occurs the status update is not automatically hidden\r\n\t\t\t\t\tvar timer = setTimeout(function () {\r\n\r\n\t\t\t\t\t\tstatusNode.innerHTML = html;\r\n\t\t\t\t\t\tstatusNode.setAttribute('data-state', 'error');\r\n\t\t\t\t\t\tstatusNode.style.opacity = 1;\r\n\t\t\t\t\t}, 250);\r\n\r\n\t\t\t\t\t_this25._timers.push(timer);\r\n\r\n\t\t\t\t\tcallback(status);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// use default send method or custom implementation\r\n\t\t\t\tif (typeof _this25._options.service === 'string') {\r\n\t\t\t\t\tsend(_this25._options.service, formData, requestDecorator, onProgress, onSuccess, onError);\r\n\t\t\t\t} else if (typeof _this25._options.service === 'function') {\r\n\t\t\t\t\t_this25._options.service.apply(_this25, [_this25._options.serviceFormat === 'file' ? fileData : formData, onProgress, // function(loaded, total) {}   // loaded bytes (number), total bytes (number)\r\n\t\t\t\t\tonSuccess, // function(response) {} \t\t// response (object or string)\r\n\t\t\t\t\tonError // function(error) {} \t\t\t// error message (string)\r\n\t\t\t\t\t]);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// copy the meta data of the original file to the output\r\n\t\t\tloadImage.parseMetaData(this._data.input.file, inputParsed, {\r\n\t\t\t\tmaxMetaDataSize: 262144,\r\n\t\t\t\tdisableImageHead: false\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_showEditor',\r\n\t\tvalue: function _showEditor() {\r\n\r\n\t\t\tSlimPopover.className = this._options.popoverClassName;\r\n\r\n\t\t\tSlimPopover.show();\r\n\r\n\t\t\tthis._imageEditor.show();\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_hideEditor',\r\n\t\tvalue: function _hideEditor() {\r\n\r\n\t\t\tthis._imageEditor.hide();\r\n\r\n\t\t\tvar timer = setTimeout(function () {\r\n\r\n\t\t\t\tSlimPopover.hide();\r\n\t\t\t}, 250);\r\n\r\n\t\t\tthis._timers.push(timer);\r\n\t\t}\r\n\r\n\t\t/**\r\n   * Animations\r\n   */\r\n\r\n\t}, {\r\n\t\tkey: '_showPreview',\r\n\t\tvalue: function _showPreview(intro, callback) {\r\n\r\n\t\t\tsnabbt(intro, {\r\n\r\n\t\t\t\tfromPosition: [0, 50, 0],\r\n\t\t\t\tposition: [0, 0, 0],\r\n\r\n\t\t\t\tfromScale: [1.5, 1.5],\r\n\t\t\t\tscale: [1, 1],\r\n\r\n\t\t\t\tfromOpacity: 0,\r\n\t\t\t\topacity: 1,\r\n\r\n\t\t\t\teasing: 'spring',\r\n\t\t\t\tspringConstant: .3,\r\n\t\t\t\tspringDeceleration: .7,\r\n\r\n\t\t\t\tcomplete: function complete() {\r\n\r\n\t\t\t\t\tresetTransforms(intro);\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_hideResult',\r\n\t\tvalue: function _hideResult(callback) {\r\n\r\n\t\t\tvar intro = this._getIntro();\r\n\t\t\tif (!intro) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsnabbt(intro, {\r\n\r\n\t\t\t\tfromScale: [1, 1],\r\n\t\t\t\tscale: [.5, .5],\r\n\r\n\t\t\t\tfromOpacity: 1,\r\n\t\t\t\topacity: 0,\r\n\r\n\t\t\t\teasing: 'spring',\r\n\t\t\t\tspringConstant: .3,\r\n\t\t\t\tspringDeceleration: .75,\r\n\r\n\t\t\t\tcomplete: function complete() {\r\n\t\t\t\t\tresetTransforms(intro);\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_showButtons',\r\n\t\tvalue: function _showButtons(callback) {\r\n\r\n\t\t\tif (!this._btnGroup) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._btnGroup.style.display = '';\r\n\r\n\t\t\t// setup animation\r\n\t\t\tvar animation = {\r\n\t\t\t\tfromScale: [.5, .5],\r\n\t\t\t\tscale: [1, 1],\r\n\t\t\t\tfromPosition: [0, 10, 0],\r\n\t\t\t\tposition: [0, 0, 0],\r\n\t\t\t\tfromOpacity: 0,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tcomplete: function complete() {\r\n\t\t\t\t\tresetTransforms(this);\r\n\t\t\t\t},\r\n\t\t\t\tallDone: function allDone() {\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// don't animate when detached\r\n\t\t\tif (this.isDetached()) {\r\n\t\t\t\tanimation.duration = 1;\r\n\t\t\t} else {\r\n\t\t\t\tanimation.delay = function (i) {\r\n\t\t\t\t\treturn 250 + i * 50;\r\n\t\t\t\t};\r\n\t\t\t\tanimation.easing = 'spring';\r\n\t\t\t\tanimation.springConstant = .3;\r\n\t\t\t\tanimation.springDeceleration = .85;\r\n\t\t\t}\r\n\r\n\t\t\tsnabbt(this._btnGroup.childNodes, animation);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_hideButtons',\r\n\t\tvalue: function _hideButtons(callback) {\r\n\t\t\tvar _this26 = this;\r\n\r\n\t\t\tif (!this._btnGroup) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar animation = {\r\n\t\t\t\tfromScale: [1, 1],\r\n\t\t\t\tscale: [.85, .85],\r\n\t\t\t\tfromOpacity: 1,\r\n\t\t\t\topacity: 0,\r\n\t\t\t\tallDone: function allDone() {\r\n\t\t\t\t\t_this26._btnGroup.style.display = 'none';\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// don't animate when detached\r\n\t\t\tif (this.isDetached()) {\r\n\t\t\t\tanimation.duration = 1;\r\n\t\t\t} else {\r\n\t\t\t\tanimation.easing = 'spring';\r\n\t\t\t\tanimation.springConstant = .3;\r\n\t\t\t\tanimation.springDeceleration = .75;\r\n\t\t\t}\r\n\r\n\t\t\t// go hide the buttons\r\n\t\t\tsnabbt(this._btnGroup.childNodes, animation);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_hideStatus',\r\n\t\tvalue: function _hideStatus() {\r\n\r\n\t\t\tvar statusNode = this._element.querySelector('.slim-upload-status');\r\n\t\t\tstatusNode.style.opacity = 0;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_doEdit',\r\n\t\tvalue: function _doEdit() {\r\n\t\t\tvar _this27 = this;\r\n\r\n\t\t\t// if no input data available, can't edit anything\r\n\t\t\tif (!this._data.input.image) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// now in editor mode\r\n\t\t\tthis._addState('editor');\r\n\r\n\t\t\t// create editor (if not already created)\r\n\t\t\tif (!this._imageEditor) {\r\n\t\t\t\tthis._appendEditor();\r\n\t\t\t}\r\n\r\n\t\t\t// hide or show rotate button\r\n\t\t\tthis._imageEditor.showRotateButton = this._options.rotateButton;\r\n\r\n\t\t\t// append to popover\r\n\t\t\tSlimPopover.inner = this._imageEditor.element;\r\n\r\n\t\t\t// read the data\r\n\t\t\tthis._imageEditor.open(\r\n\r\n\t\t\t// send copy of canvas to the editor\r\n\t\t\tcloneCanvas(this._data.input.image),\r\n\r\n\t\t\t// determine ratio\r\n\t\t\tthis._options.ratio === 'free' ? null : this._ratio,\r\n\r\n\t\t\t// the initial crop to show\r\n\t\t\tthis._data.actions.crop,\r\n\r\n\t\t\t// the initial rotation of the image\r\n\t\t\tthis._data.actions.rotation,\r\n\r\n\t\t\t// handle editor load\r\n\t\t\tfunction () {\r\n\r\n\t\t\t\t_this27._showEditor();\r\n\r\n\t\t\t\t_this27._hideButtons();\r\n\r\n\t\t\t\t_this27._hideStatus();\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_doRemove',\r\n\t\tvalue: function _doRemove(done) {\r\n\t\t\tvar _this28 = this;\r\n\r\n\t\t\t// cannot remove when is only one image\r\n\t\t\tif (this._isImageOnly()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._clearState();\r\n\t\t\tthis._addState('empty');\r\n\r\n\t\t\tthis._hasInitialImage = false;\r\n\t\t\tif (this._imageHopper) {\r\n\t\t\t\tthis._imageHopper.enabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._isRequired) {\r\n\t\t\t\tthis._input.required = true;\r\n\t\t\t}\r\n\r\n\t\t\tvar out = this._getOutro();\r\n\t\t\tif (out) {\r\n\t\t\t\tout.style.opacity = '0';\r\n\t\t\t}\r\n\r\n\t\t\t// get public available clone of data\r\n\t\t\tvar data = this.data;\r\n\r\n\t\t\t// now reset all data\r\n\t\t\tthis._resetData();\r\n\r\n\t\t\tvar timer = setTimeout(function () {\r\n\r\n\t\t\t\tif (_this28._isBeingDestroyed) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this28._hideButtons(function () {\r\n\r\n\t\t\t\t\t_this28._toggleButton('upload', true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t_this28._hideStatus();\r\n\r\n\t\t\t\t_this28._hideResult();\r\n\r\n\t\t\t\t_this28._options.didRemove.apply(_this28, [data, _this28]);\r\n\r\n\t\t\t\tif (done) {\r\n\t\t\t\t\tdone();\r\n\t\t\t\t}\r\n\t\t\t}, this.isDetached() ? 0 : 250);\r\n\r\n\t\t\tthis._timers.push(timer);\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_doUpload',\r\n\t\tvalue: function _doUpload(callback) {\r\n\t\t\tvar _this29 = this;\r\n\r\n\t\t\t// if no input data available, can't upload anything\r\n\t\t\tif (!this._data.input.image) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._addState('upload');\r\n\t\t\tthis._startProgress();\r\n\r\n\t\t\tthis._hideButtons(function () {\r\n\r\n\t\t\t\t// block upload button\r\n\t\t\t\t_this29._toggleButton('upload', false);\r\n\r\n\t\t\t\t_this29._save(function (err, data, res) {\r\n\r\n\t\t\t\t\t_this29._removeState('upload');\r\n\t\t\t\t\t_this29._stopProgress();\r\n\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback.apply(_this29, [err, data, res]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t_this29._toggleButton('upload', true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_this29._showButtons();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_doDownload',\r\n\t\tvalue: function _doDownload() {\r\n\r\n\t\t\tvar image = this._data.output.image;\r\n\t\t\tif (!image) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tdownloadCanvas(this._data, this._options.jpegCompression, this._options.forceType);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: '_doDestroy',\r\n\t\tvalue: function _doDestroy() {\r\n\t\t\tvar _this30 = this;\r\n\r\n\t\t\t// set destroy flag to halt any running functionality\r\n\t\t\tthis._isBeingDestroyed = true;\r\n\r\n\t\t\t// clear timers\r\n\t\t\tthis._timers.forEach(function (timer) {\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t});\r\n\t\t\tthis._timers = [];\r\n\r\n\t\t\t// clean up snabbt animations\r\n\t\t\tsnabbt(this._element, 'detach');\r\n\r\n\t\t\t// this removes the image hopper if it's attached\r\n\t\t\tif (this._imageHopper) {\r\n\t\t\t\tHopperEvents.forEach(function (e) {\r\n\t\t\t\t\t_this30._imageHopper.element.removeEventListener(e, _this30);\r\n\t\t\t\t});\r\n\t\t\t\tthis._imageHopper.destroy();\r\n\t\t\t\tthis._imageHopper = null;\r\n\t\t\t}\r\n\r\n\t\t\t// this block removes the image editor\r\n\t\t\tif (this._imageEditor) {\r\n\t\t\t\tImageEditorEvents.forEach(function (e) {\r\n\t\t\t\t\t_this30._imageEditor.element.removeEventListener(e, _this30);\r\n\t\t\t\t});\r\n\t\t\t\tthis._imageEditor.destroy();\r\n\t\t\t\tthis._imageEditor = null;\r\n\t\t\t}\r\n\r\n\t\t\t// remove button event listeners\r\n\t\t\tnodeListToArray(this._btnGroup.children).forEach(function (btn) {\r\n\t\t\t\tbtn.removeEventListener('click', _this30);\r\n\t\t\t});\r\n\r\n\t\t\t// stop listening to input\r\n\t\t\tthis._input.removeEventListener('change', this);\r\n\r\n\t\t\t// detect if was wrapped, if so, remove wrapping (needs to have parent node)\r\n\t\t\tif (this._element !== this._originalElement && this._element.parentNode) {\r\n\t\t\t\tthis._element.parentNode.replaceChild(this._originalElement, this._element);\r\n\t\t\t}\r\n\r\n\t\t\t// restore HTML of original element\r\n\t\t\tthis._originalElement.innerHTML = this._originalElementInner;\r\n\r\n\t\t\t// get current attributes and remove all, then add original attributes\r\n\t\t\tfunction matchesAttributeInList(a, attributes) {\r\n\t\t\t\treturn attributes.filter(function (attr) {\r\n\t\t\t\t\treturn a.name === attr.name && a.value === attr.value;\r\n\t\t\t\t}).length !== 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar attributes = getElementAttributes(this._originalElement);\r\n\t\t\tattributes.forEach(function (attribute) {\r\n\r\n\t\t\t\t// if attribute  is contained in original element attribute list and is the same, don't remove\r\n\t\t\t\tif (matchesAttributeInList(attribute, _this30._originalElementAttributes)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// else remove\r\n\t\t\t\t_this30._originalElement.removeAttribute(attribute.name);\r\n\t\t\t});\r\n\r\n\t\t\tthis._originalElementAttributes.forEach(function (attribute) {\r\n\r\n\t\t\t\t// attribute was never removed\r\n\t\t\t\tif (matchesAttributeInList(attribute, attributes)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add attribute\r\n\t\t\t\t_this30._originalElement.setAttribute(attribute.name, attribute.value);\r\n\t\t\t});\r\n\r\n\t\t\t// now destroyed this counter so the total Slim count can be lowered\r\n\t\t\tSlimCount = Math.max(0, SlimCount - 1);\r\n\r\n\t\t\t// if slim count has reached 0 it's time to clean up the popover\r\n\t\t\tif (SlimPopover && SlimCount === 0) {\r\n\t\t\t\tSlimPopover.destroy();\r\n\t\t\t\tSlimPopover = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis._originalElement = null;\r\n\t\t\tthis._element = null;\r\n\t\t\tthis._input = null;\r\n\t\t\tthis._output = null;\r\n\t\t\tthis._btnGroup = null;\r\n\t\t\tthis._options = null;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'dataBase64',\r\n\r\n\r\n\t\t/**\r\n   * Public API\r\n   */\r\n\t\t// properties\r\n\t\tget: function get() {\r\n\t\t\treturn flattenData(this._data, this._options.post, this._options.jpegCompression, this._options.forceType, this._options.service !== null);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'data',\r\n\t\tget: function get() {\r\n\t\t\treturn cloneData(this._data);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'element',\r\n\t\tget: function get() {\r\n\t\t\treturn this._element;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'service',\r\n\t\tset: function set(service) {\r\n\t\t\tthis._options.service = service;\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'size',\r\n\t\tset: function set(dimensions) {\r\n\t\t\tthis.setSize(dimensions, null);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'rotation',\r\n\t\tset: function set(rotation) {\r\n\t\t\tthis.setRotation(rotation, null);\r\n\t\t}\r\n\t}, {\r\n\t\tkey: 'ratio',\r\n\t\tset: function set(ratio) {\r\n\t\t\tthis.setRatio(ratio, null);\r\n\t\t}\r\n\t}], [{\r\n\t\tkey: 'options',\r\n\t\tvalue: function options() {\r\n\r\n\t\t\tvar defaults = {\r\n\r\n\t\t\t\t// edit button is enabled by default\r\n\t\t\t\tedit: true,\r\n\r\n\t\t\t\t// immidiately summons editor on load\r\n\t\t\t\tinstantEdit: false,\r\n\r\n\t\t\t\t// set to true to upload data as base64 string\r\n\t\t\t\tuploadBase64: false,\r\n\r\n\t\t\t\t// metadata values\r\n\t\t\t\tmeta: {},\r\n\r\n\t\t\t\t// ratio of crop by default is the same as input image ratio\r\n\t\t\t\tratio: 'free',\r\n\r\n\t\t\t\t// dimensions to resize the resulting image to\r\n\t\t\t\tsize: null,\r\n\r\n\t\t\t\t// set initial rotation\r\n\t\t\t\trotation: null,\r\n\r\n\t\t\t\t// initial crop settings for example: {x:0, y:0, width:100, height:100}\r\n\t\t\t\tcrop: null,\r\n\r\n\t\t\t\t// post these values\r\n\t\t\t\tpost: ['output', 'actions'],\r\n\r\n\t\t\t\t// call this service to submit cropped data\r\n\t\t\t\tservice: null,\r\n\t\t\t\tserviceFormat: null,\r\n\r\n\t\t\t\t// sharpen filter value, really low values might improve image output\r\n\t\t\t\tfilterSharpen: 0,\r\n\r\n\t\t\t\t// when service is set, and this is set to true, Soon will auto upload all crops (also auto crops)\r\n\t\t\t\tpush: false,\r\n\r\n\t\t\t\t// default fallback name for field\r\n\t\t\t\tdefaultInputName: 'slim[]',\r\n\r\n\t\t\t\t// minimum size of cropped area object with width and height property\r\n\t\t\t\tminSize: {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// maximum file size in MB to upload\r\n\t\t\t\tmaxFileSize: null,\r\n\r\n\t\t\t\t// compression of JPEG (between 0 and 100)\r\n\t\t\t\tjpegCompression: null,\r\n\r\n\t\t\t\t// render download link\r\n\t\t\t\tdownload: false,\r\n\r\n\t\t\t\t// save initially loaded image\r\n\t\t\t\tsaveInitialImage: false,\r\n\r\n\t\t\t\t// the type to force (jpe|jpg|jpeg or png)\r\n\t\t\t\tforceType: false,\r\n\r\n\t\t\t\t// the forced output size of the image\r\n\t\t\t\tforceSize: null,\r\n\r\n\t\t\t\t// disable drop to replace\r\n\t\t\t\tdropReplace: true,\r\n\r\n\t\t\t\t// remote URL service\r\n\t\t\t\tfetcher: null,\r\n\r\n\t\t\t\t// set the internal canvas size\r\n\t\t\t\tinternalCanvasSize: {\r\n\t\t\t\t\twidth: 4096,\r\n\t\t\t\t\theight: 4096\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// copies the input image meta data to the output image\r\n\t\t\t\tcopyImageHead: false,\r\n\r\n\t\t\t\t// enable or disable rotation\r\n\t\t\t\trotateButton: true,\r\n\r\n\t\t\t\t// popover classname\r\n\t\t\t\tpopoverClassName: null,\r\n\r\n\t\t\t\t// label HTML to show inside drop area\r\n\t\t\t\tlabel: '<p>Drop your image here</p>',\r\n\t\t\t\tlabelLoading: '<p>Loading image...</p>',\r\n\r\n\t\t\t\t// error messages\r\n\t\t\t\tstatusFileType: '<p>Invalid file type, expects: $0.</p>',\r\n\t\t\t\tstatusFileSize: '<p>File is too big, maximum file size: $0 MB.</p>',\r\n\t\t\t\tstatusNoSupport: '<p>Your browser does not support image cropping.</p>',\r\n\t\t\t\tstatusImageTooSmall: '<p>Image is too small, minimum size is: $0 pixels.</p>',\r\n\t\t\t\tstatusContentLength: '<span class=\"slim-upload-status-icon\"></span> The file is probably too big',\r\n\t\t\t\tstatusUnknownResponse: '<span class=\"slim-upload-status-icon\"></span> An unknown error occurred',\r\n\t\t\t\tstatusUploadSuccess: '<span class=\"slim-upload-status-icon\"></span> Saved',\r\n\r\n\t\t\t\t// callback methods\r\n\t\t\t\tdidInit: function didInit(data) {},\r\n\t\t\t\tdidLoad: function didLoad(file, image, meta) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tdidSave: function didSave(data) {},\r\n\t\t\t\tdidUpload: function didUpload(err, data, res) {},\r\n\t\t\t\tdidReceiveServerError: function didReceiveServerError(err, defaultError) {\r\n\t\t\t\t\treturn defaultError;\r\n\t\t\t\t},\r\n\t\t\t\tdidRemove: function didRemove(data) {},\r\n\t\t\t\tdidTransform: function didTransform(data) {},\r\n\t\t\t\tdidConfirm: function didConfirm(data) {},\r\n\t\t\t\tdidCancel: function didCancel() {},\r\n\r\n\t\t\t\twillTransform: function willTransform(data, cb) {\r\n\t\t\t\t\tcb(data);\r\n\t\t\t\t},\r\n\t\t\t\twillSave: function willSave(data, cb) {\r\n\t\t\t\t\tcb(data);\r\n\t\t\t\t},\r\n\t\t\t\twillRemove: function willRemove(data, cb) {\r\n\t\t\t\t\tcb();\r\n\t\t\t\t},\r\n\t\t\t\twillRequest: function willRequest(xhr) {}\r\n\r\n\t\t\t};\r\n\r\n\t\t\t// add default button labels\r\n\t\t\tSlimButtons.concat(ImageEditor.Buttons).concat('rotate').forEach(function (btn) {\r\n\t\t\t\tvar capitalized = capitalizeFirstLetter(btn);\r\n\t\t\t\tdefaults['button' + capitalized + 'ClassName'] = null;\r\n\t\t\t\tdefaults['button' + capitalized + 'Label'] = capitalized;\r\n\t\t\t\tdefaults['button' + capitalized + 'Title'] = capitalized;\r\n\t\t\t});\r\n\r\n\t\t\treturn defaults;\r\n\t\t}\r\n\t}]);\r\n\r\n\treturn Slim;\r\n}();\r\n\r\n/**\r\n * Slim Static Methods\r\n */\r\n\r\n\r\n(function () {\r\n\r\n\tvar instances = [];\r\n\r\n\tvar indexOfElement = function indexOfElement(element) {\r\n\t\tvar i = 0;\r\n\t\tvar l = instances.length;\r\n\t\tfor (; i < l; i++) {\r\n\t\t\tif (instances[i].isAttachedTo(element)) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t};\r\n\r\n\tfunction toLabel(v) {\r\n\t\t// if value set, use as label\r\n\t\tif (v) {\r\n\t\t\treturn '<p>' + v + '</p>';\r\n\t\t}\r\n\r\n\t\t// else use default text\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction toFunctionReference(name) {\r\n\t\tvar ref = window;\r\n\t\tvar levels = name.split('.');\r\n\t\tlevels.forEach(function (level, index) {\r\n\t\t\tif (!ref[levels[index]]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tref = ref[levels[index]];\r\n\t\t});\r\n\t\treturn ref !== window ? ref : null;\r\n\t}\r\n\r\n\tvar passThrough = function passThrough(v) {\r\n\t\treturn v;\r\n\t};\r\n\tvar defaultFalse = function defaultFalse(v) {\r\n\t\treturn v === 'true';\r\n\t};\r\n\tvar defaultTrue = function defaultTrue(v) {\r\n\t\treturn v ? v === 'true' : true;\r\n\t};\r\n\tvar defaultLabel = function defaultLabel(v) {\r\n\t\treturn toLabel(v);\r\n\t};\r\n\tvar defaultFunction = function defaultFunction(v) {\r\n\t\treturn v ? toFunctionReference(v) : null;\r\n\t};\r\n\tvar defaultSize = function defaultSize(v) {\r\n\t\tif (!v) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar parts = intSplit(v, ',');\r\n\t\treturn {\r\n\t\t\twidth: parts[0],\r\n\t\t\theight: parts[1]\r\n\t\t};\r\n\t};\r\n\r\n\tvar toFloat = function toFloat(v) {\r\n\t\tif (!v) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn parseFloat(v);\r\n\t};\r\n\r\n\tvar toInt = function toInt(v) {\r\n\t\tif (!v) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn parseInt(v, 10);\r\n\t};\r\n\r\n\tvar toRect = function toRect(v) {\r\n\t\tif (!v) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar obj = {};\r\n\t\tv.split(',').map(function (p) {\r\n\t\t\treturn parseInt(p, 10);\r\n\t\t}).forEach(function (v, i) {\r\n\t\t\tobj[Rect[i]] = v;\r\n\t\t});\r\n\t\treturn obj;\r\n\t};\r\n\r\n\tvar defaults = {\r\n\r\n\t\t// is user allowed to download the cropped image?\r\n\t\t'download': defaultFalse,\r\n\r\n\t\t// is user allowed to edit the cropped image?\r\n\t\t'edit': defaultTrue,\r\n\r\n\t\t// open editor immidiately on file drop\r\n\t\t'instantEdit': defaultFalse,\r\n\r\n\t\t// minimum crop size in pixels of original image\r\n\t\t'minSize': defaultSize,\r\n\r\n\t\t// the final bounding box of the output image\r\n\t\t'size': defaultSize,\r\n\r\n\t\t// the forced output size of the image\r\n\t\t'forceSize': defaultSize,\r\n\r\n\t\t// the internal data canvas size\r\n\t\t'internalCanvasSize': defaultSize,\r\n\r\n\t\t// url to post to\r\n\t\t'service': function service(v) {\r\n\t\t\tif (typeof v === 'undefined') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tvar fn = toFunctionReference(v);\r\n\t\t\tif (fn) {\r\n\t\t\t\treturn fn;\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t},\r\n\r\n\t\t// format of service data\r\n\t\t'serviceFormat': function serviceFormat(v) {\r\n\t\t\treturn typeof v === 'undefined' ? null : v;\r\n\t\t},\r\n\r\n\t\t// url to fetch service\r\n\t\t'fetcher': function fetcher(v) {\r\n\t\t\treturn typeof v === 'undefined' ? null : v;\r\n\t\t},\r\n\r\n\t\t// set auto push mode\r\n\t\t'push': defaultFalse,\r\n\r\n\t\t// initial rotation\r\n\t\t'rotation': function rotation(v) {\r\n\t\t\treturn typeof v === 'undefined' ? null : parseInt(v, 10);\r\n\t\t},\r\n\r\n\t\t// set crop rect\r\n\t\t'crop': toRect,\r\n\r\n\t\t// what to post\r\n\t\t'post': function post(v) {\r\n\t\t\tif (!v) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn v.split(',').map(function (item) {\r\n\t\t\t\treturn item.trim();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// default input name\r\n\t\t'defaultInputName': passThrough,\r\n\r\n\t\t// the ratio of the crop\r\n\t\t'ratio': function ratio(v) {\r\n\t\t\tif (!v) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn v;\r\n\t\t},\r\n\r\n\t\t// maximum file size\r\n\t\t'maxFileSize': toFloat,\r\n\r\n\t\t// sharpen filter\r\n\t\t'filterSharpen': toInt,\r\n\r\n\t\t// jpeg compression\r\n\t\t'jpegCompression': toInt,\r\n\r\n\t\t// base64 data uploading\r\n\t\t'uploadBase64': defaultFalse,\r\n\r\n\t\t// sets file type to force output to\r\n\t\t'forceType': passThrough,\r\n\r\n\t\t// drop to replace\r\n\t\t'dropReplace': defaultTrue,\r\n\r\n\t\t// bool determining if initial image should be saved\r\n\t\t'saveInitialImage': defaultFalse,\r\n\r\n\t\t// copies input image head to output image\r\n\t\t'copyImageHead': defaultFalse,\r\n\r\n\t\t// rotate button\r\n\t\t'rotateButton': defaultTrue,\r\n\r\n\t\t// default labels\r\n\t\t'label': defaultLabel,\r\n\t\t'labelLoading': defaultLabel,\r\n\r\n\t\t// class name to put on popover element\r\n\t\t'popoverClassName': passThrough\r\n\r\n\t};\r\n\r\n\t// labels\r\n\t['FileSize', 'FileType', 'NoSupport', 'ImageTooSmall'].forEach(function (status) {\r\n\t\tdefaults['status' + status] = defaultLabel;\r\n\t});\r\n\r\n\t// status\r\n\t['ContentLength', 'UnknownResponse', 'UploadSuccess'].forEach(function (status) {\r\n\t\tdefaults['status' + status] = passThrough;\r\n\t});\r\n\r\n\t// the did callbacks\r\n\t['Init', 'Load', 'Save', 'Upload', 'Remove', 'Transform', 'ReceiveServerError', 'Confirm', 'Cancel'].forEach(function (cb) {\r\n\t\tdefaults['did' + cb] = defaultFunction;\r\n\t});\r\n\r\n\t// the will callbacks\r\n\t['Transform', 'Save', 'Remove', 'Request'].forEach(function (cb) {\r\n\t\tdefaults['will' + cb] = defaultFunction;\r\n\t});\r\n\r\n\t// button defaults\r\n\tvar buttonOptions = ['ClassName', 'Label', 'Title'];\r\n\tSlimButtons.concat(ImageEditor.Buttons).concat('rotate').forEach(function (btn) {\r\n\t\tvar capitalized = capitalizeFirstLetter(btn);\r\n\t\tbuttonOptions.forEach(function (opt) {\r\n\t\t\tdefaults['button' + capitalized + opt] = passThrough;\r\n\t\t});\r\n\t});\r\n\r\n\tSlim.supported = function () {\r\n\r\n\t\treturn !(\r\n\r\n\t\t// is opera mini\r\n\t\tObject.prototype.toString.call(window.operamini) === '[object OperaMini]' ||\r\n\r\n\t\t// no event listener support\r\n\t\ttypeof window.addEventListener === 'undefined' ||\r\n\r\n\t\t// no file reader support\r\n\t\ttypeof window.FileReader === 'undefined' ||\r\n\r\n\t\t// no blob slicing (can't dupe files)\r\n\t\t!('slice' in Blob.prototype) ||\r\n\r\n\t\t// no .createObjectURL support, used by download method but also convenient to exclude Android 4.3 and lower\r\n\t\t// Android 4.3 and lower don't support XHR2 responseType blob\r\n\t\ttypeof window.URL === 'undefined' || typeof window.URL.createObjectURL === 'undefined');\r\n\t}();\r\n\r\n\tSlim.parse = function (context) {\r\n\t\tvar elements;\r\n\t\tvar element;\r\n\t\tvar i;\r\n\t\tvar croppers = [];\r\n\r\n\t\t// find all crop elements and bind Crop behavior\r\n\t\telements = context.querySelectorAll('.slim:not([data-state])');\r\n\t\ti = elements.length;\r\n\r\n\t\twhile (i--) {\r\n\t\t\telement = elements[i];\r\n\t\t\tcroppers.push(Slim.create(element, Slim.getOptionsFromAttributes(element)));\r\n\t\t}\r\n\r\n\t\treturn croppers;\r\n\t};\r\n\r\n\tSlim.getOptionsFromAttributes = function (element) {\r\n\r\n\t\tvar dataset = getDataset(element);\r\n\r\n\t\tvar options = {\r\n\t\t\tmeta: {}\r\n\t\t};\r\n\r\n\t\tfor (var prop in dataset) {\r\n\r\n\t\t\tvar valueTransformer = defaults[prop];\r\n\t\t\tvar _value = dataset[prop];\r\n\r\n\t\t\tif (valueTransformer) {\r\n\t\t\t\t_value = valueTransformer(_value);\r\n\t\t\t\t_value = _value === null ? clone(Slim.options()[prop]) : _value;\r\n\t\t\t\toptions[prop] = _value;\r\n\t\t\t} else if (prop.indexOf('meta') === 0) {\r\n\t\t\t\toptions['meta'][lowercaseFirstLetter(prop.substr(4))] = _value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\t};\r\n\r\n\tSlim.find = function (element) {\r\n\t\tvar result = instances.filter(function (instance) {\r\n\t\t\treturn instance.isAttachedTo(element);\r\n\t\t});\r\n\t\treturn result ? result[0] : null;\r\n\t};\r\n\r\n\tSlim.create = function (element, options) {\r\n\r\n\t\t// if already in array, can't create another slim\r\n\t\tif (Slim.find(element)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if no options supplied, try to get the options from the element\r\n\t\tif (!options) {\r\n\t\t\toptions = Slim.getOptionsFromAttributes(element);\r\n\t\t}\r\n\r\n\t\t// instance\r\n\t\tvar slim = new Slim(element, options);\r\n\r\n\t\t// add new slim\r\n\t\tinstances.push(slim);\r\n\r\n\t\t// return the slim instance\r\n\t\treturn slim;\r\n\t};\r\n\r\n\tSlim.destroy = function (element) {\r\n\t\tvar index = indexOfElement(element);\r\n\r\n\t\tif (index < 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tinstances[index].destroy();\r\n\t\tinstances.splice(index, 1);\r\n\r\n\t\treturn true;\r\n\t};\r\n})();\r\n    return Slim;\r\n}());\r\n\r\n\t// Create scope\r\n\tvar scopeDef = {};\r\n\tfor (var key in Slim.options()) {\r\n\t\tif (/^(did|will)/.test(key)) {\r\n\t\t\tscopeDef[key] = '=';\r\n\t\t}\r\n\t}\r\n\tscopeDef['service'] = '=';\r\n\r\n\t// Setters\r\n\tvar setters = ['rotation', 'size', 'ratio'];\r\n\tfor (var i=0; i<setters.length; i++) {\r\n\t\tscopeDef[setters[i]] = '@';\r\n\t}\r\n\tsetters.push('service');\r\n\r\n\tfunction setOptionsFromObjectToObject(source, target) {\r\n\t\tfor (var key in source) {\r\n\t\t\tif (!source[key]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\ttarget[key] = source[key];\r\n\t\t}\r\n\t}\r\n\r\n\t// Angular Directive\r\n\tangular\r\n\t\t.module('slim', [])\r\n\t\t.directive('slim', function() {\r\n\t\t\treturn {\r\n\t\t\t\trestrict: 'EC',\r\n\t\t\t\tscope: scopeDef,\r\n\t\t\t\tlink: function(scope, element, attrs) {\r\n\r\n\t\t\t\t\tvar slim = null;\r\n\t\t\t\t\tvar options = null;\r\n\t\t\t\t\tvar container = element[0];\r\n\r\n\t\t\t\t\t// setup root element\r\n\t\t\t\t\tvar root = document.createElement('div');\r\n\t\t\t\t\troot.className = 'slim';\r\n\t\t\t\t\tvar inner = container.innerHTML;\r\n\t\t\t\t\tcontainer.innerHTML = '';\r\n\t\t\t\t\tcontainer.appendChild(root);\r\n\t\t\t\t\troot.innerHTML = inner;\r\n\r\n\t\t\t\t\t// create initial image if set\r\n\t\t\t\t\tif (attrs.initialImage) {\r\n\t\t\t\t\t\tvar image = document.createElement('img');\r\n\t\t\t\t\t\timage.src = attrs.initialImage;\r\n\t\t\t\t\t\timage.setAttribute('alt', '');\r\n\t\t\t\t\t\troot.appendChild(image);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// gets options from container\r\n\t\t\t\t\toptions = Slim.getOptionsFromAttributes(container);\r\n\r\n\t\t\t\t\t// override with options from scope\r\n\t\t\t\t\tfor (var key in scopeDef) {\r\n\t\t\t\t\t\tif (!scope[key]) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toptions[key] = scope[key];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// create the cropper\r\n\t\t\t\t\tslim = Slim.create(root, options);\r\n\r\n\t\t\t\t\t// watch for setter changes\r\n\t\t\t\t\tsetters.forEach(function(setter){\r\n\t\t\t\t\t\tscope.$watch(setter, function(newValue, oldValue) {\r\n\t\t\t\t\t\t\tif (newValue === oldValue) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tslim[setter] = newValue;\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\r\n}(angular));","(function(){\r\n    'use strict';\r\n\r\n    angular\r\n    .module('ngGeolocation', [])\r\n    .factory('$geolocation', ['$rootScope', '$window', '$q', function($rootScope, $window, $q) {\r\n\r\n        function supported() {\r\n            return 'geolocation' in $window.navigator;\r\n        }\r\n\r\n        var retVal = {\r\n            getCurrentPosition: function(options) {\r\n                var deferred = $q.defer();\r\n                if(supported()) {\r\n                    $window.navigator.geolocation.getCurrentPosition(\r\n                        function(position) {\r\n                            $rootScope.$apply(function() {\r\n                                retVal.position.coords = position.coords;\r\n                                retVal.position.timestamp = position.timestamp;\r\n                                deferred.resolve(position);\r\n                            });\r\n                        },\r\n                        function(error) {\r\n                            $rootScope.$apply(function() {\r\n                                deferred.reject({error: error});\r\n                            });\r\n                        }, options);\r\n                } else {\r\n                    deferred.reject({error: {\r\n                        code: 2,\r\n                        message: 'This web browser does not support HTML5 Geolocation'\r\n                    }});\r\n                }\r\n                return deferred.promise;\r\n            },\r\n\r\n            watchPosition: function(options) {\r\n                if(supported()) {\r\n                    if(!this.watchId) {\r\n                        this.watchId = $window.navigator.geolocation.watchPosition(\r\n                            function(position) {\r\n                                $rootScope.$apply(function() {\r\n                                    retVal.position.coords = position.coords;\r\n                                    retVal.position.timestamp = position.timestamp;\r\n                                    delete retVal.position.error;\r\n                                    $rootScope.$broadcast('$geolocation.position.changed', position);\r\n                                });\r\n                            },\r\n                            function(error) {\r\n                                $rootScope.$apply(function() {\r\n                                    retVal.position.error = error;\r\n                                    delete retVal.position.coords;\r\n                                    delete retVal.position.timestamp;\r\n                                    $rootScope.$broadcast('$geolocation.position.error', error);\r\n                                });\r\n                            }, options);\r\n                    }\r\n                } else {\r\n                    retVal.position = {\r\n                        error: {\r\n                            code: 2,\r\n                            message: 'This web browser does not support HTML5 Geolocation'\r\n                        }\r\n                    };\r\n                }\r\n            },\r\n\r\n            clearWatch: function() {\r\n                if(this.watchId) {\r\n                    $window.navigator.geolocation.clearWatch(this.watchId);\r\n                    delete this.watchId;\r\n                }\r\n            },\r\n\r\n            position: {}\r\n        };\r\n\r\n        return retVal;\r\n    }]);\r\n}());\r\n","var env = {};\r\n\r\n// Import variables if present (from env.js)\r\nif(window){  \r\n  Object.assign(env, window.__env);\r\n}\r\n\r\nvar app = angular.module('takeNGo', \r\n['slim', \r\n'ngGeolocation', \r\n'ngCookies',\r\n'ngMap']\r\n)\r\n.constant('ENV', env)\r\n.config(function ($httpProvider) {\r\n    $httpProvider.defaults.withCredentials = true;\r\n})\r\n.config(['$locationProvider', function($locationProvider) {\r\n    $locationProvider.html5Mode({\r\n        enabled: true,\r\n        requireBase: false\r\n    });\r\n}])\r\n\r\napp.controller('mainController', ['$scope', '$timeout', '$http', '$rootScope', 'ENV', '$geolocation', '$cookies', function($scope, $timeout, $http, $rootScope, ENV, $geolocation, $cookies){\r\n    $scope.digest = function(a) {\r\n        var waitForRenderAndDoSomething = function() {\r\n            if ($http.pendingRequests.length > 0) {\r\n                $timeout(waitForRenderAndDoSomething); // Wait for all templates to be loaded\r\n            } else {\r\n                if (a) {\r\n                    return a();\r\n                }\r\n            }\r\n        };\r\n        return $timeout(waitForRenderAndDoSomething);\r\n    };\r\n\r\n    $scope.range = function(n) {\r\n        return new Array(n);\r\n    };\r\n\r\n    $rootScope.metadata = {\r\n        signed_in: false,\r\n        email_verified: false,\r\n        signing: true,\r\n        tng_uid: '',\r\n        email: '',\r\n        loading: {\r\n            sign_up: false,\r\n            sign_in: false\r\n        },\r\n        auth: {},\r\n        current_location: null,\r\n        current_location_retrieved: false\r\n    };\r\n\r\n    $geolocation.watchPosition({\r\n        timeout: 60000,\r\n        maximumAge: 250,\r\n        enableHighAccuracy: true\r\n    });\r\n    console.log($geolocation)\r\n\r\n    $scope.$on('$geolocation.position.changed', function(events, args){\r\n        $rootScope.metadata.current_location = {\r\n            latitude: args.coords.latitude,\r\n            longitude: args.coords.longitude,\r\n            timestamp: args.timestamp\r\n        };\r\n        $rootScope.metadata.current_location_retrieved = true;\r\n        console.log($rootScope.metadata.current_location);\r\n        $scope.digest();\r\n    })\r\n\r\n    $scope.modalFunc = {\r\n        closeAuth: () => {\r\n            $('#signup-form').modal('hide');\r\n            $('#login-form').modal('hide');\r\n            $('#forget-password-form').modal('hide');\r\n        }\r\n    };\r\n\r\n    $scope.authenticate = {};\r\n\r\n    $scope.authenticate.check = () => {\r\n        $scope.authenticate.check_token().then(()=>{\r\n            $scope.modalFunc.closeAuth();\r\n            // $scope.authenticate.register_auth().then(()=>{\r\n            //     console.log('register auth success');\r\n            // }).catch(()=>{\r\n            //     console.log('register auth fail');\r\n            // })\r\n            $scope.authenticate.get_profile().then((data)=>{\r\n                var user = (data.data || {}).user;\r\n                $rootScope.metadata.signing = false;\r\n                $rootScope.metadata = Object.assign($rootScope.metadata, {\r\n                    signed_in: true,\r\n                    email: user.email,\r\n                    uid: user.uid,\r\n                    email_verified: user.s_verified\r\n                });\r\n                $scope.digest();\r\n                console.log($rootScope.metadata);\r\n            }).catch(() => {\r\n                $scope.authenticate.sign_out();\r\n            });\r\n        }).catch(()=>{\r\n            $scope.authenticate.sign_out();\r\n        })\r\n    }\r\n\r\n    $scope.authenticate.get_profile = () => {\r\n        return new Promise((resolve, reject) => {\r\n            $http.post(ENV.API_URL + 'profile', {}, {\r\n                headers:{\r\n                    'X-TKNG-UID': $rootScope.metadata.auth.uid,\r\n                    'X-TKNG-TKN': $rootScope.metadata.auth.token,\r\n                    'X-TKNG-EM': $rootScope.metadata.auth.email\r\n                }\r\n            }).then((data) => {\r\n                console.log('get_profile');\r\n                console.log(data);\r\n                console.log('end of get_profile');\r\n                resolve(data);\r\n            }, (err) => {\r\n                console.log('err get_profile');\r\n                console.log(err);\r\n                console.log('end of get_profile');\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n\r\n    $scope.authenticate.check_token = () => {\r\n        return new Promise((resolve, reject) => {\r\n            $http.post(ENV.API_URL + 'token').then(function(data){\r\n                console.log('check_token');\r\n                console.log(data);\r\n                console.log('end of check_token');\r\n                if(data.data.status == 'OK'){\r\n                    console.log(data.data);\r\n                    $rootScope.metadata.auth = {\r\n                        uid: data.data.uid,\r\n                        token: data.data.token,\r\n                        email: data.data.email,\r\n                        first_name: data.data.first_name\r\n                    }\r\n                    $cookies.put('fe_uid', data.data.uid);\r\n                    $cookies.put('fe_token', data.data.token);\r\n                    $cookies.put('fe_email', data.data.email);\r\n                    resolve();\r\n                }else{\r\n                    reject();\r\n                }\r\n            }, (err) => {\r\n                console.log('check_token err');\r\n                console.log(err.data);\r\n                console.log('end of check_token err');\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n\r\n    $scope.authenticate.register_auth = () => {\r\n        return new Promise((resolve, reject) => {\r\n            $http.post('/register-auth',{},{\r\n                headers: {\r\n                    'X-TKNG-UID': $rootScope.metadata.auth.uid,\r\n                    'X-TKNG-TKN': $rootScope.metadata.auth.token,\r\n                    'X-TKNG-EM': $rootScope.metadata.auth.email\r\n                }\r\n            }).then((data) => {\r\n                resolve();\r\n                console.log(data);\r\n            }, (err) => {\r\n                console.log(err);\r\n                reject();\r\n            });\r\n        })\r\n    }\r\n\r\n    $scope.authenticate.sign_out = () => {\r\n        console.log('signing out');\r\n        $rootScope.metadata.signing = false;\r\n        $rootScope.metadata = Object.assign($rootScope.metadata, {\r\n            signed_in: false,\r\n            email_verified: false,\r\n            tng_uid: '',\r\n            email: ''\r\n        });\r\n        $http.post(ENV.API_URL + 'reset_auth').then((data) => {\r\n            console.log(data);\r\n        }, (err) => {\r\n            \r\n        });\r\n        $scope.digest();\r\n    }\r\n\r\n    $(document).ready(()=>{\r\n        setTimeout($scope.authenticate.check, 500)\r\n    })\r\n}]);","app.controller('signInController', ['$scope', '$rootScope', '$timeout', '$http', 'ENV', function($scope, $rootScope, $timeout, $http, ENV){\r\n    \r\n    $scope.signin_error = {\r\n        email: false,\r\n        password: false,\r\n        error: false,\r\n        message: {\r\n            email: [],\r\n            password: [],\r\n            error: []\r\n        }\r\n    };\r\n\r\n    $scope.reset_input = () => {\r\n        $scope.signin_information = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n    };\r\n\r\n    var reset_error = () => {\r\n        $scope.signin_error.error = false;\r\n        $scope.signin_error.message.error = [];\r\n    }\r\n\r\n    $scope.reset_input();\r\n\r\n    $scope.signin = () => {\r\n        const {email, password} = $scope.signin_information; \r\n        $rootScope.metadata.loading.sign_in = true;\r\n        $http.post(ENV.API_URL + 'login', {\r\n            email: email,\r\n            password: password\r\n        })\r\n        .then((data)=>{\r\n            console.log(data);            \r\n            $rootScope.metadata.loading.sign_in = false;\r\n\r\n            //RESET INPUT & ERRORS\r\n            $scope.reset_input();\r\n            reset_error();\r\n            $scope.authenticate.check();\r\n            $scope.modalFunc.closeAuth();\r\n        }, (data)=>{\r\n            let response = data.data;\r\n            $scope.signin_error.error = true;\r\n            $scope.signin_error.message.error = ['Invalid email or password!'];\r\n            $rootScope.metadata.loading.sign_in = false;\r\n            $scope.digest();\r\n        });\r\n    }\r\n}]);","app.controller('signUpController', ['$scope', '$rootScope', '$timeout', '$http', 'ENV', function($scope, $rootScope, $timeout, $http, ENV){\r\n    \r\n    $scope.signup_error = {\r\n        first_name: false,\r\n        last_name: false,\r\n        email: false,\r\n        password_confirmation: false,\r\n        password: false,\r\n        message: {\r\n            first_name: [],\r\n            last_name: [],\r\n            email: [],\r\n            password_confirmation: [],\r\n            password: []\r\n        }\r\n    };\r\n\r\n    $scope.reset_input = () => {\r\n        $scope.signup_information = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: '',\r\n            password_confirmation: ''\r\n        };\r\n    };\r\n\r\n    $scope.reset_input();\r\n\r\n    var reset_error = () => {\r\n        $scope.signup_error.first_name = false;\r\n        $scope.signup_error.message.first_name = [];\r\n        $scope.signup_error.last_name = false;\r\n        $scope.signup_error.message.last_name = [];\r\n        $scope.signup_error.email = false;\r\n        $scope.signup_error.message.email = [];\r\n        $scope.signup_error.password = false;\r\n        $scope.signup_error.message.password = [];\r\n        $scope.signup_error.password_confirmation = false;\r\n        $scope.signup_error.message.password_confirmation = [];\r\n    }\r\n\r\n    $scope.signup = () => {\r\n        const {first_name, last_name, email, password, password_confirmation} = $scope.signup_information;  \r\n        if(password != password_confirmation){\r\n            $scope.signup_error.password_confirmation = true;\r\n            $scope.signup_error.message.password_confirmation = ['Password does not match'];\r\n            return;\r\n        }\r\n        $rootScope.metadata.loading.sign_up = true;\r\n        $http.post(ENV.API_URL + 'register', {\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            email: email,\r\n            password: password,\r\n            password_confirmation: password_confirmation\r\n        })\r\n        .then((data)=>{\r\n            console.log(data);            \r\n            $rootScope.metadata.loading.sign_up = false;\r\n            \r\n            //RESET INPUT & ERRORS\r\n            $scope.reset_input();\r\n            reset_error();\r\n\r\n            $scope.authenticate.check();\r\n            $scope.modalFunc.closeAuth();\r\n            $('#sign-up-success').modal('show');\r\n        }, (data)=>{\r\n            if(data.status == 422){\r\n                let response = data.data;\r\n                console.log(response);\r\n                if(response.first_name){\r\n                    $scope.signup_error.first_name = true;\r\n                    $scope.signup_error.message.first_name = response.first_name;\r\n                }\r\n                if(response.last_name){\r\n                    $scope.signup_error.last_name = true;\r\n                    $scope.signup_error.message.last_name = response.last_name;\r\n                }\r\n                if(response.email){\r\n                    $scope.signup_error.email = true;\r\n                    $scope.signup_error.message.email = response.email;\r\n                }\r\n                if(response.password){\r\n                    $scope.signup_error.password = true;\r\n                    $scope.signup_error.message.password = response.password;\r\n                }\r\n                if(response.password_confirmation){\r\n                    $scope.signup_error.password_confirmation = true;\r\n                    $scope.signup_error.message.password_confirmation = response.password_confirmation;\r\n                }\r\n                $rootScope.metadata.loading.sign_up = false;\r\n                $scope.digest();\r\n            }\r\n        });\r\n        \r\n    }\r\n}]);","app.controller('headerController', ['$scope', '$rootScope', function($scope, $rootScope){\r\n\t\r\n}]);","app.controller('profileEditController', ['$scope', '$rootScope', '$http', 'ENV', function($scope, $rootScope, $http, ENV){\r\n    $scope.profile_error = {\r\n        first_name: false,\r\n        last_name: false,\r\n        gender: false,\r\n        birth_date: false,\r\n        address: false,\r\n        suburb: false,\r\n        state: false,\r\n        post_code: false,\r\n        message: {\r\n            first_name: [],\r\n            last_name: [],\r\n            gender: [],\r\n            birth_date: [],\r\n            address: [],\r\n            suburb: [],\r\n            state: [],\r\n            post_code: [],\r\n        }\r\n    };\r\n\r\n    $scope.profile_form = {\r\n        first_name: '',\r\n        last_name: '',\r\n        gender: '',\r\n        birth_date: moment().format('DD MMMM YYYY'),\r\n        address: '',\r\n        suburb: '',\r\n        state: '',\r\n        post_code: ''\r\n    };\r\n\r\n    $(\"#caleran-header\").caleran({\r\n        singleDate: true,\r\n        calendarCount: 1,\r\n        showHeader: false,\r\n        showFooter: false,\r\n        autoCloseOnSelect: true,\r\n        format: 'DD MMMM YYYY',\r\n        maxDate: new Date(),\r\n        enableKeyboard: true,\r\n        onafterselect: function(caleran, startDate, endDate){\r\n            // caleran: caleran object instance\r\n            // startDate: moment.js instance\r\n            // endDate: moment.js instance\r\n            $scope.profile_form.birth_date = startDate.format('DD MMMM YYYY');\r\n            $scope.digest();\r\n        }\r\n    });\r\n\r\n    $scope.save_profile = () => {\r\n        $http.put(ENV.API_URL + 'profile/edit', $scope.profile_form,{\r\n            headers:{\r\n                'X-TKNG-UID': $rootScope.metadata.auth.uid,\r\n                'X-TKNG-TKN': $rootScope.metadata.auth.token,\r\n                'X-TKNG-EM': $rootScope.metadata.auth.email\r\n            }\r\n        })\r\n        .then((data)=>{\r\n            console.log(data);     \r\n        }, (data)=>{\r\n            console.log(data);\r\n            if(data.status == 422){\r\n                let response = data.data;\r\n                if(response.first_name){\r\n                    $scope.profile_error.first_name = true;\r\n                    $scope.profile_error.message.first_name = response.first_name;\r\n                }\r\n                if(response.last_name){\r\n                    $scope.profile_error.last_name = true;\r\n                    $scope.profile_error.message.last_name = response.last_name;\r\n                }\r\n                if(response.gender){\r\n                    $scope.profile_error.gender = true;\r\n                    $scope.profile_error.message.gender = response.gender;\r\n                }\r\n                if(response.phone){\r\n                    $scope.profile_error.phone = true;\r\n                    $scope.profile_error.message.phone = response.phone;\r\n                }\r\n                if(response.birth_date){\r\n                    $scope.profile_error.birth_date = true;\r\n                    $scope.profile_error.message.birth_date = response.birth_date;\r\n                }\r\n                if(response.address){\r\n                    $scope.profile_error.address = true;\r\n                    $scope.profile_error.message.address = response.address;\r\n                }\r\n                if(response.suburb){\r\n                    $scope.profile_error.suburb = true;\r\n                    $scope.profile_error.message.suburb = response.suburb;\r\n                }\r\n                if(response.state){\r\n                    $scope.profile_error.state = true;\r\n                    $scope.profile_error.message.state = response.state;\r\n                }\r\n                if(response.post_code){\r\n                    $scope.profile_error.post_code = true;\r\n                    $scope.profile_error.message.post_code = response.post_code;\r\n                }\r\n                $scope.digest();\r\n            }\r\n        });\r\n    }\r\n}]);\r\n\r\napp.controller('profileDocumentController', ['$scope', '$rootScope', '$http', 'ENV', function($scope, $rootScope, $http, ENV){\r\n    $scope.slim = {\r\n        api_url: ENV.API_URL + 'user/document/upload',\r\n        // called when slim has initialized\r\n        init: function (data, slim) {\r\n            // slim instance reference\r\n            console.log(slim);\r\n\r\n            // current slim data object and slim reference\r\n            console.log(data);\r\n        },\r\n        will_request: function(xhr){\r\n            xhr.setRequestHeader('X-TKNG-UID', $rootScope.metadata.auth.uid);\r\n            xhr.setRequestHeader('X-TKNG-TKN', $rootScope.metadata.auth.token);\r\n            xhr.setRequestHeader('X-TKNG-EM', $rootScope.metadata.auth.email);\r\n            console.log($rootScope.metadata.auth.uid)\r\n        },\r\n        upload: function (error, data, response) {\r\n            console.log(error, data, response);\r\n        }\r\n    }\r\n}]);","app.controller('carsCollectionController', ['$scope', '$rootScope', '$http', 'ENV', '$location', 'NgMap', function($scope, $rootScope, $http, ENV, $location, NgMap){\r\n    console.log('Going to Cars Collection Page')\r\n    let params = $location.search();\r\n    let page = 1;\r\n    if (params.hasOwnProperty('page') && !isNaN(params.page)){\r\n        page = params.page\r\n    }\r\n    $scope.map = null;\r\n    NgMap.getMap().then(function(map) {\r\n        console.log(map)\r\n        $scope.map = map;\r\n    }).catch(err => {\r\n        console.log(err)\r\n    });\r\n\r\n    console.log(\"RETRIEVED PARAMS\", params);\r\n    $scope.cars = [];\r\n    $scope.carsLocations = [\r\n        //e.g. [lat, long]\r\n    ]\r\n\r\n    var reset_cars = () => {\r\n        $scope.cars = [];\r\n        $scope.carsLocations = [];\r\n    }\r\n    $scope.carsCollectionCtrl = {\r\n        loading:{\r\n            retrieve: true\r\n        },\r\n        error: {\r\n            retrieve: false,\r\n            message: {\r\n                retrieve: []\r\n            }\r\n        },\r\n        current_page: page,\r\n        last_page: 0,\r\n        pagination: {\r\n            next: false,\r\n            prev: false\r\n        },\r\n        api_url: ENV.API_URL\r\n    }\r\n\r\n    var location_unregister = $scope.$watch('metadata.current_location_retrieved', function(newVal, oldVal){\r\n        if(newVal != oldVal && newVal === true){\r\n            $scope.retrieve();\r\n            location_unregister();\r\n        }\r\n    })\r\n\r\n    var reset_error = () => {\r\n        $scope.carsCollectionCtrl.error.retrieve = false;\r\n        $scope.carsCollectionCtrl.error.message.retrieve = [];\r\n    }\r\n\r\n    $scope.changePage = (page = 1) => {\r\n        if(page > $scope.carsCollectionCtrl.last_page){\r\n            page = $scope.carsCollectionCtrl.last_page;\r\n        }else if(isNaN(page)){\r\n            page = 1;\r\n        }\r\n        $scope.carsCollectionCtrl.current_page = page;\r\n        if(page != $scope.carsCollectionCtrl.current_page){\r\n            $location.search('page', $scope.carsCollectionCtrl.current_page);\r\n            $scope.retrieve();\r\n        }else{\r\n            console.log(\"It's the same page!\");\r\n        }\r\n    }\r\n\r\n    $scope.retrieve = () => {\r\n        var parsedParams = parseParams();\r\n        $scope.carsCollectionCtrl.loading.retrieve = true;\r\n        console.log('RETRIEVING CARS');\r\n        console.log('GET URL: ', ENV.API_URL + 'cars?' + parsedParams);\r\n        reset_cars();\r\n        $http.get(ENV.API_URL + 'cars?' + parsedParams)\r\n        .then((data)=>{\r\n            console.log(data.data); \r\n            let response = data.data;\r\n            $scope.cars = response.data;\r\n            $scope.carsCollectionCtrl.last_page = response.last_page;\r\n            $scope.carsCollectionCtrl.current_page = response.current_page;\r\n            $scope.carsCollectionCtrl.pagination.next = response.next_page_url !== null;\r\n            $scope.carsCollectionCtrl.pagination.prev = response.prev_page_url !== null;\r\n            $scope.cars.forEach((obj)=>{\r\n                if(obj.distance !== null){\r\n                    $scope.carsLocations.push([obj.lat, obj.long])\r\n                }\r\n            })\r\n            console.log($scope.carsLocations);\r\n            reset_error();\r\n            $scope.carsCollectionCtrl.loading.retrieve = false;\r\n            if($scope.carsCollectionCtrl.last_page < $scope.carsCollectionCtrl.current_page){\r\n                $scope.carsCollectionCtrl.current_page = $scope.carsCollectionCtrl.last_page;\r\n                $location.search('page', $scope.carsCollectionCtrl.last_page)\r\n                $scope.retrieve()\r\n            }\r\n            $scope.digest();\r\n        }, (data)=>{\r\n            console.log(data)\r\n            let response = data.data;\r\n            $scope.carsCollectionCtrl.error.retrieve = true;\r\n            $scope.carsCollectionCtrl.error.message.retrieve = ['Error fetching cars'];\r\n            $scope.carsCollectionCtrl.loading.retrieve = false;\r\n            $scope.digest();\r\n        });\r\n    }\r\n\r\n    var parseParams = () => {\r\n        var p = \"\";\r\n        var pCount = 0;\r\n        if($scope.carsCollectionCtrl.current_page > 1){\r\n            p += (\"page=\" + $scope.carsCollectionCtrl.current_page);\r\n            pCount++;\r\n        }\r\n        if($rootScope.metadata.current_location !== null){\r\n            if(pCount > 0){\r\n                p += \"&\";\r\n            }\r\n            p += (\"lat=\"+$rootScope.metadata.current_location.latitude);\r\n            p += \"&\";\r\n            p += (\"long=\"+$rootScope.metadata.current_location.longitude);\r\n            pCount++;\r\n        }\r\n        return p;\r\n    }\r\n}]);"]}